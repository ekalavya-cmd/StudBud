{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\StudBud\\\\frontend\\\\src\\\\components\\\\CalendarPage.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/components/CalendarPage.jsx\nimport React, { useState, useEffect, useCallback, useMemo } from \"react\";\nimport Calendar from \"react-calendar\";\nimport { CheckCircle, Calendar as CalendarIcon, PlusCircle } from \"lucide-react\";\nimport { getCardStyles } from \"../components/utils/themeUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CalendarPage({\n  tasks,\n  toggleTaskComplete,\n  currentTheme,\n  setActiveTab\n}) {\n  _s();\n  const styles = getCardStyles(currentTheme);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const today = new Date(); // Store today's date for comparison\n\n  // Function to get local date string in YYYY-MM-DD format with timezone normalization\n  const getLocalDateString = useCallback(date => {\n    try {\n      if (!date || isNaN(new Date(date).getTime())) {\n        console.warn('Invalid date provided to getLocalDateString:', date);\n        return null;\n      }\n      const normalizedDate = new Date(date);\n      // Normalize to local timezone to avoid UTC/local time issues\n      const year = normalizedDate.getFullYear();\n      const month = String(normalizedDate.getMonth() + 1).padStart(2, \"0\");\n      const day = String(normalizedDate.getDate()).padStart(2, \"0\");\n      return `${year}-${month}-${day}`;\n    } catch (error) {\n      console.error('Error formatting date:', error);\n      return null;\n    }\n  }, []);\n\n  // Handle date selection\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n\n  // Reset selectedDate to today when clicking outside relevant areas\n  const handleClickOutside = useCallback(event => {\n    const calendarElement = document.querySelector(\".react-calendar\");\n    const isClickInsideCalendar = calendarElement && calendarElement.contains(event.target);\n\n    // Check if the click is on a date tile\n    const isTileClick = event.target.closest(\".react-calendar__tile\");\n\n    // Check if the click is on a task card (including the checkmark button)\n    const isTaskCardClick = event.target.closest(\".task-card\");\n\n    // Reset to today if the click is outside calendar and not on task cards\n    if (!isClickInsideCalendar && !isTaskCardClick && !isTileClick) {\n      setSelectedDate(new Date());\n    }\n  }, []);\n\n  // Add and remove the click event listener\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside);\n    };\n  }, []);\n\n  // Filter tasks for the selected date (both completed and incomplete)\n  const tasksForSelectedDate = useMemo(() => {\n    const selectedDateString = getLocalDateString(selectedDate);\n    if (!selectedDateString) return [];\n    return tasks.filter(task => {\n      if (!task.dueDate) return false;\n      const taskDueDate = getLocalDateString(new Date(task.dueDate));\n      return taskDueDate === selectedDateString;\n    }).sort((a, b) => {\n      // Sort by completion status (incomplete first) then by priority\n      if (a.completed !== b.completed) {\n        return a.completed ? 1 : -1;\n      }\n      const priorityOrder = {\n        High: 0,\n        Medium: 1,\n        Low: 2\n      };\n      return (priorityOrder[a.priority] || 3) - (priorityOrder[b.priority] || 3);\n    });\n  }, [tasks, selectedDate, getLocalDateString]);\n\n  // Check if the selected date is today\n  const isSelectedDateToday = useMemo(() => {\n    const selectedDateString = getLocalDateString(selectedDate);\n    const todayString = getLocalDateString(today);\n    return selectedDateString === todayString;\n  }, [selectedDate, today, getLocalDateString]);\n\n  // Define gradient styles for each theme based on themeUtils.js\n  const getThemeGradient = useCallback(type => {\n    var _gradients$currentThe;\n    const gradients = {\n      \"Dark Mode\": {\n        current: isSelectedDateToday ? \"linear-gradient(135deg, #1E40AF, #1976D2)\" : \"linear-gradient(135deg, #1976D2, #60A5FA)\",\n        selected: \"linear-gradient(135deg, #1E40AF, #1976D2)\"\n      },\n      \"Ocean Breeze\": {\n        current: \"linear-gradient(135deg, #A5F3FC, #22D3EE)\",\n        selected: \"linear-gradient(135deg, #5EEAD4, #14B8A6)\"\n      },\n      \"Sunset Glow\": {\n        current: \"linear-gradient(135deg, #FED7AA, #FDBA74)\",\n        selected: \"linear-gradient(135deg, #FCA5A5, #F87171)\"\n      },\n      \"Forest Whisper\": {\n        current: \"linear-gradient(135deg, #BBF7D0, #86EFAC)\",\n        selected: \"linear-gradient(135deg, #6EE7B7, #10B981)\"\n      },\n      \"Light Mode\": {\n        current: \"linear-gradient(135deg, #C7D2FE, #A5B4FC)\",\n        selected: \"linear-gradient(135deg, #818CF8, #4F46E5)\"\n      }\n    };\n    return ((_gradients$currentThe = gradients[currentTheme]) === null || _gradients$currentThe === void 0 ? void 0 : _gradients$currentThe[type]) || gradients[\"Light Mode\"][type];\n  }, [currentTheme, isSelectedDateToday]);\n\n  // Memoized custom styles for the calendar, including theme-based gradients\n  const calendarStyles = useMemo(() => `\n    .react-calendar {\n      margin-left: 25px;\n    }\n    .react-calendar__navigation button {\n      font-size: 1.25rem;\n    }\n    .dark-mode-calendar {\n      background-color: #1F2937; /* bg-gray-800 */\n      color: #ffffff; /* Default text to white */\n      border-radius: 0.75rem; /* Match rounded-xl from styles.card */\n    }\n    .dark-mode-calendar .react-calendar__navigation {\n      background-color: #1F2937; /* bg-gray-800 */\n      margin-bottom: 0.5rem;\n    }\n    .dark-mode-calendar .react-calendar__navigation button {\n      color: #ffffff; /* Navigation arrows and labels to white */\n      background: none;\n      font-size: 1.25rem; /* Increase navigation button font size */\n    }\n    .dark-mode-calendar .react-calendar__navigation button:hover,\n    .dark-mode-calendar .react-calendar__navigation button:focus {\n      background: #374151; /* bg-gray-700 on hover/focus */\n    }\n    .dark-mode-calendar .react-calendar__month-view__weekdays__weekday {\n      color: #ffffff; /* Days of the week to white */\n      font-size: 1.1rem; /* Increase weekday label font size */\n    }\n    .dark-mode-calendar .react-calendar__month-view__days__day {\n      color: #ffffff; /* Current month's dates to white */\n      font-size: 1.1rem; /* Increase date font size */\n    }\n    .dark-mode-calendar .react-calendar__month-view__days__day--weekend {\n      color: #d10000; /* Match the default red shade used in other themes */\n    }\n    .dark-mode-calendar .react-calendar__month-view__days__day--neighboringMonth {\n      color: #9CA3AF; /* Gray-400 for previous/next month dates (default) */\n    }\n    .dark-mode-calendar .react-calendar__tile--active,\n    .dark-mode-calendar .react-calendar__tile--active:hover,\n    .dark-mode-calendar .react-calendar__tile--hasActive {\n      background: ${getThemeGradient(\"selected\")} !important;\n      color: #ffffff !important;\n    }\n    .dark-mode-calendar .react-calendar__tile:hover {\n      background: #374151; /* bg-gray-700 on hover */\n    }\n    .react-calendar {\n      width: 100%; /* Ensure calendar takes full width of its container */\n    }\n    .react-calendar__tile {\n      position: relative;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: 48px; /* Increase tile height for larger size */\n      font-size: 1.1rem; /* Increase tile font size */\n    }\n    .task-dot {\n      position: absolute;\n      bottom: 2px;\n      width: 10px; /* Slightly increase dot size for proportionality */\n      height: 10px;\n      border-radius: 50%;\n      ${currentTheme === \"Dark Mode\" ? \"background-color: #6366F1;\" : \"\"}\n      ${currentTheme === \"Ocean Breeze\" ? \"background-color: #14B8A6;\" : \"\"}\n      ${currentTheme === \"Sunset Glow\" ? \"background-color: #F97316;\" : \"\"}\n      ${currentTheme === \"Forest Whisper\" ? \"background-color: #10B981;\" : \"\"}\n      ${currentTheme === \"Light Mode\" ? \"background-color: #4F46E5;\" : \"\"}\n    }\n    .react-calendar__tile--now {\n      background: ${getThemeGradient(\"current\")} !important;\n      color: ${currentTheme === \"Dark Mode\" ? \"#ffffff\" : \"#000000\"} !important;\n    }\n    .dark-mode-calendar .react-calendar__tile--now {\n      background: ${getThemeGradient(\"current\")} !important;\n      color: #ffffff !important;\n    }\n    .react-calendar__tile--active,\n    .react-calendar__tile--active:hover,\n    .react-calendar__tile--hasActive {\n      background: ${getThemeGradient(\"selected\")} !important;\n      color: #ffffff !important;\n    }\n    .react-calendar__tile:hover {\n      background: ${currentTheme === \"Dark Mode\" ? \"#374151\" : currentTheme === \"Ocean Breeze\" ? \"#E5F6F5\" : currentTheme === \"Sunset Glow\" ? \"#FEF3E8\" : currentTheme === \"Forest Whisper\" ? \"#E8F8EF\" : \"#E8F0FE\"}; /* Light hover effect matching each theme */\n    }\n    .react-calendar__tile--now:hover {\n      background: ${getThemeGradient(\"current\")} !important;\n      filter: brightness(1.1); /* Slightly brighten on hover */\n    }\n    .dark-mode-calendar .react-calendar__tile--now:hover {\n      background: ${getThemeGradient(\"current\")} !important;\n      filter: brightness(1.1);\n    }\n    .react-calendar__navigation {\n      margin-bottom: 0.5rem;\n    }\n    .react-calendar__month-view__weekdays__weekday {\n      font-size: 1.1rem; /* Increase weekday label font size for all themes */\n    }\n    .react-calendar__month-view__days__day {\n      font-size: 1.1rem; /* Increase date font size for all themes */\n    }\n    .task-card:hover .calendar-icon {\n      transform: scale(1) !important; /* Prevent scaling on hover */\n    }\n  `, [currentTheme, getThemeGradient]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: `text-2xl font-bold ${styles.title}`,\n      children: \"Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-w-xl w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"style\", {\n            children: calendarStyles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n            onChange: handleDateChange,\n            value: selectedDate,\n            className: `${styles.card} p-4 border-none ${currentTheme === \"Dark Mode\" ? \"dark-mode-calendar\" : \"\"}`,\n            tileContent: ({\n              date\n            }) => {\n              const dateString = getLocalDateString(date);\n              if (!dateString) return null;\n              const dayTasks = tasks.filter(task => {\n                if (!task.dueDate) return false;\n                const taskDueDate = getLocalDateString(new Date(task.dueDate));\n                return taskDueDate === dateString;\n              });\n              if (dayTasks.length === 0) return null;\n              const hasIncomplete = dayTasks.some(task => !task.completed);\n              const hasCompleted = dayTasks.some(task => task.completed);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-indicators\",\n                style: {\n                  position: 'absolute',\n                  bottom: '2px',\n                  display: 'flex',\n                  gap: '2px',\n                  justifyContent: 'center'\n                },\n                children: [hasIncomplete && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-dot task-dot-incomplete\",\n                  style: {\n                    width: '6px',\n                    height: '6px',\n                    borderRadius: '50%',\n                    backgroundColor: currentTheme === \"Dark Mode\" ? \"#6366F1\" : currentTheme === \"Ocean Breeze\" ? \"#14B8A6\" : currentTheme === \"Sunset Glow\" ? \"#F97316\" : currentTheme === \"Forest Whisper\" ? \"#10B981\" : \"#4F46E5\"\n                  },\n                  title: `${dayTasks.filter(t => !t.completed).length} incomplete task(s)`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 23\n                }, this), hasCompleted && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-dot task-dot-complete\",\n                  style: {\n                    width: '6px',\n                    height: '6px',\n                    borderRadius: '50%',\n                    backgroundColor: '#10B981',\n                    opacity: 0.7\n                  },\n                  title: `${dayTasks.filter(t => t.completed).length} completed task(s)`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 19\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:col-span-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.card} p-6`,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: `text-lg font-semibold mb-4 ${styles.subtitle}`,\n            children: [\"Tasks for\", \" \", selectedDate.toLocaleDateString(\"en-US\", {\n              weekday: \"long\",\n              year: \"numeric\",\n              month: \"long\",\n              day: \"numeric\"\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), tasksForSelectedDate.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: `py-4 text-center ${styles.noTasksText}`,\n              children: \"No tasks for this date.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `p-5 border-t ${styles.border}`,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setActiveTab(\"tasks\"),\n                className: styles.buttonTertiary,\n                children: [/*#__PURE__*/_jsxDEV(PlusCircle, {\n                  className: \"w-5 h-5 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 21\n                }, this), \"Add New Task\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: tasksForSelectedDate.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex items-center justify-between p-4 transition-all duration-300 hover:shadow-md hover:scale-[1.02] ${styles.hoverCard} task-card`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleTaskComplete(task.id),\n                  className: `p-1 rounded-full transition-all duration-200 ${task.completed ? styles.taskComplete : styles.taskIncomplete}`,\n                  \"aria-label\": `Mark task \"${task.title}\" as ${task.completed ? 'incomplete' : 'complete'}`,\n                  children: /*#__PURE__*/_jsxDEV(CheckCircle, {\n                    className: `w-5 h-5 ${task.completed ? \"fill-current\" : \"\"}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center space-x-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: `text-base font-semibold ${task.completed ? `${styles.text} line-through opacity-60` : styles.text}`,\n                      children: task.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 363,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `px-2 py-0.5 rounded-full text-xs font-medium ${task.priority === \"High\" ? styles.isDarkMode ? \"bg-red-600 text-white\" : \"bg-red-500 text-white\" : task.priority === \"Medium\" ? styles.isDarkMode ? \"bg-orange-600 text-white\" : \"bg-orange-500 text-white\" : styles.isDarkMode ? \"bg-green-600 text-white\" : \"bg-green-500 text-white\"}`,\n                      children: task.priority\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 372,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: `text-sm flex items-center space-x-1 ${styles.secondaryText}`,\n                    children: [/*#__PURE__*/_jsxDEV(CalendarIcon, {\n                      className: `${styles.smallIcon} calendar-icon`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 393,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Due: \", task.dueDate]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 396,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"ml-2\",\n                      children: [\"Hours: \", task.hours || 0]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 397,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 21\n              }, this)\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n}\n_s(CalendarPage, \"PFSJLmXiA8gQ2+A/kMNB/TkC1wg=\");\n_c = CalendarPage;\nexport default CalendarPage;\nvar _c;\n$RefreshReg$(_c, \"CalendarPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","Calendar","CheckCircle","CalendarIcon","PlusCircle","getCardStyles","jsxDEV","_jsxDEV","CalendarPage","tasks","toggleTaskComplete","currentTheme","setActiveTab","_s","styles","selectedDate","setSelectedDate","Date","today","getLocalDateString","date","isNaN","getTime","console","warn","normalizedDate","year","getFullYear","month","String","getMonth","padStart","day","getDate","error","handleDateChange","handleClickOutside","event","calendarElement","document","querySelector","isClickInsideCalendar","contains","target","isTileClick","closest","isTaskCardClick","addEventListener","removeEventListener","tasksForSelectedDate","selectedDateString","filter","task","dueDate","taskDueDate","sort","a","b","completed","priorityOrder","High","Medium","Low","priority","isSelectedDateToday","todayString","getThemeGradient","type","_gradients$currentThe","gradients","current","selected","calendarStyles","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","card","tileContent","dateString","dayTasks","length","hasIncomplete","some","hasCompleted","style","position","bottom","display","gap","justifyContent","width","height","borderRadius","backgroundColor","t","opacity","subtitle","toLocaleDateString","weekday","noTasksText","border","onClick","buttonTertiary","map","hoverCard","id","taskComplete","taskIncomplete","text","isDarkMode","secondaryText","smallIcon","hours","_c","$RefreshReg$"],"sources":["D:/Projects/StudBud/frontend/src/components/CalendarPage.jsx"],"sourcesContent":["// frontend/src/components/CalendarPage.jsx\r\nimport React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport {\r\n  CheckCircle,\r\n  Calendar as CalendarIcon,\r\n  PlusCircle,\r\n} from \"lucide-react\";\r\nimport { getCardStyles } from \"../components/utils/themeUtils\";\r\n\r\nfunction CalendarPage({\r\n  tasks,\r\n  toggleTaskComplete,\r\n  currentTheme,\r\n  setActiveTab,\r\n}) {\r\n  const styles = getCardStyles(currentTheme);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const today = new Date(); // Store today's date for comparison\r\n\r\n  // Function to get local date string in YYYY-MM-DD format with timezone normalization\r\n  const getLocalDateString = useCallback((date) => {\r\n    try {\r\n      if (!date || isNaN(new Date(date).getTime())) {\r\n        console.warn('Invalid date provided to getLocalDateString:', date);\r\n        return null;\r\n      }\r\n      const normalizedDate = new Date(date);\r\n      // Normalize to local timezone to avoid UTC/local time issues\r\n      const year = normalizedDate.getFullYear();\r\n      const month = String(normalizedDate.getMonth() + 1).padStart(2, \"0\");\r\n      const day = String(normalizedDate.getDate()).padStart(2, \"0\");\r\n      return `${year}-${month}-${day}`;\r\n    } catch (error) {\r\n      console.error('Error formatting date:', error);\r\n      return null;\r\n    }\r\n  }, []);\r\n\r\n  // Handle date selection\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  // Reset selectedDate to today when clicking outside relevant areas\r\n  const handleClickOutside = useCallback((event) => {\r\n    const calendarElement = document.querySelector(\".react-calendar\");\r\n    const isClickInsideCalendar =\r\n      calendarElement && calendarElement.contains(event.target);\r\n\r\n    // Check if the click is on a date tile\r\n    const isTileClick = event.target.closest(\".react-calendar__tile\");\r\n\r\n    // Check if the click is on a task card (including the checkmark button)\r\n    const isTaskCardClick = event.target.closest(\".task-card\");\r\n\r\n    // Reset to today if the click is outside calendar and not on task cards\r\n    if (!isClickInsideCalendar && !isTaskCardClick && !isTileClick) {\r\n      setSelectedDate(new Date());\r\n    }\r\n  }, []);\r\n\r\n  // Add and remove the click event listener\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  // Filter tasks for the selected date (both completed and incomplete)\r\n  const tasksForSelectedDate = useMemo(() => {\r\n    const selectedDateString = getLocalDateString(selectedDate);\r\n    if (!selectedDateString) return [];\r\n    \r\n    return tasks.filter((task) => {\r\n      if (!task.dueDate) return false;\r\n      const taskDueDate = getLocalDateString(new Date(task.dueDate));\r\n      return taskDueDate === selectedDateString;\r\n    }).sort((a, b) => {\r\n      // Sort by completion status (incomplete first) then by priority\r\n      if (a.completed !== b.completed) {\r\n        return a.completed ? 1 : -1;\r\n      }\r\n      const priorityOrder = { High: 0, Medium: 1, Low: 2 };\r\n      return (priorityOrder[a.priority] || 3) - (priorityOrder[b.priority] || 3);\r\n    });\r\n  }, [tasks, selectedDate, getLocalDateString]);\r\n\r\n  // Check if the selected date is today\r\n  const isSelectedDateToday = useMemo(() => {\r\n    const selectedDateString = getLocalDateString(selectedDate);\r\n    const todayString = getLocalDateString(today);\r\n    return selectedDateString === todayString;\r\n  }, [selectedDate, today, getLocalDateString]);\r\n\r\n  // Define gradient styles for each theme based on themeUtils.js\r\n  const getThemeGradient = useCallback((type) => {\r\n    const gradients = {\r\n      \"Dark Mode\": {\r\n        current: isSelectedDateToday\r\n          ? \"linear-gradient(135deg, #1E40AF, #1976D2)\"\r\n          : \"linear-gradient(135deg, #1976D2, #60A5FA)\",\r\n        selected: \"linear-gradient(135deg, #1E40AF, #1976D2)\"\r\n      },\r\n      \"Ocean Breeze\": {\r\n        current: \"linear-gradient(135deg, #A5F3FC, #22D3EE)\",\r\n        selected: \"linear-gradient(135deg, #5EEAD4, #14B8A6)\"\r\n      },\r\n      \"Sunset Glow\": {\r\n        current: \"linear-gradient(135deg, #FED7AA, #FDBA74)\",\r\n        selected: \"linear-gradient(135deg, #FCA5A5, #F87171)\"\r\n      },\r\n      \"Forest Whisper\": {\r\n        current: \"linear-gradient(135deg, #BBF7D0, #86EFAC)\",\r\n        selected: \"linear-gradient(135deg, #6EE7B7, #10B981)\"\r\n      },\r\n      \"Light Mode\": {\r\n        current: \"linear-gradient(135deg, #C7D2FE, #A5B4FC)\",\r\n        selected: \"linear-gradient(135deg, #818CF8, #4F46E5)\"\r\n      }\r\n    };\r\n    \r\n    return gradients[currentTheme]?.[type] || gradients[\"Light Mode\"][type];\r\n  }, [currentTheme, isSelectedDateToday]);\r\n\r\n  // Memoized custom styles for the calendar, including theme-based gradients\r\n  const calendarStyles = useMemo(() => `\r\n    .react-calendar {\r\n      margin-left: 25px;\r\n    }\r\n    .react-calendar__navigation button {\r\n      font-size: 1.25rem;\r\n    }\r\n    .dark-mode-calendar {\r\n      background-color: #1F2937; /* bg-gray-800 */\r\n      color: #ffffff; /* Default text to white */\r\n      border-radius: 0.75rem; /* Match rounded-xl from styles.card */\r\n    }\r\n    .dark-mode-calendar .react-calendar__navigation {\r\n      background-color: #1F2937; /* bg-gray-800 */\r\n      margin-bottom: 0.5rem;\r\n    }\r\n    .dark-mode-calendar .react-calendar__navigation button {\r\n      color: #ffffff; /* Navigation arrows and labels to white */\r\n      background: none;\r\n      font-size: 1.25rem; /* Increase navigation button font size */\r\n    }\r\n    .dark-mode-calendar .react-calendar__navigation button:hover,\r\n    .dark-mode-calendar .react-calendar__navigation button:focus {\r\n      background: #374151; /* bg-gray-700 on hover/focus */\r\n    }\r\n    .dark-mode-calendar .react-calendar__month-view__weekdays__weekday {\r\n      color: #ffffff; /* Days of the week to white */\r\n      font-size: 1.1rem; /* Increase weekday label font size */\r\n    }\r\n    .dark-mode-calendar .react-calendar__month-view__days__day {\r\n      color: #ffffff; /* Current month's dates to white */\r\n      font-size: 1.1rem; /* Increase date font size */\r\n    }\r\n    .dark-mode-calendar .react-calendar__month-view__days__day--weekend {\r\n      color: #d10000; /* Match the default red shade used in other themes */\r\n    }\r\n    .dark-mode-calendar .react-calendar__month-view__days__day--neighboringMonth {\r\n      color: #9CA3AF; /* Gray-400 for previous/next month dates (default) */\r\n    }\r\n    .dark-mode-calendar .react-calendar__tile--active,\r\n    .dark-mode-calendar .react-calendar__tile--active:hover,\r\n    .dark-mode-calendar .react-calendar__tile--hasActive {\r\n      background: ${getThemeGradient(\"selected\")} !important;\r\n      color: #ffffff !important;\r\n    }\r\n    .dark-mode-calendar .react-calendar__tile:hover {\r\n      background: #374151; /* bg-gray-700 on hover */\r\n    }\r\n    .react-calendar {\r\n      width: 100%; /* Ensure calendar takes full width of its container */\r\n    }\r\n    .react-calendar__tile {\r\n      position: relative;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      height: 48px; /* Increase tile height for larger size */\r\n      font-size: 1.1rem; /* Increase tile font size */\r\n    }\r\n    .task-dot {\r\n      position: absolute;\r\n      bottom: 2px;\r\n      width: 10px; /* Slightly increase dot size for proportionality */\r\n      height: 10px;\r\n      border-radius: 50%;\r\n      ${currentTheme === \"Dark Mode\" ? \"background-color: #6366F1;\" : \"\"}\r\n      ${currentTheme === \"Ocean Breeze\" ? \"background-color: #14B8A6;\" : \"\"}\r\n      ${currentTheme === \"Sunset Glow\" ? \"background-color: #F97316;\" : \"\"}\r\n      ${currentTheme === \"Forest Whisper\" ? \"background-color: #10B981;\" : \"\"}\r\n      ${currentTheme === \"Light Mode\" ? \"background-color: #4F46E5;\" : \"\"}\r\n    }\r\n    .react-calendar__tile--now {\r\n      background: ${getThemeGradient(\"current\")} !important;\r\n      color: ${currentTheme === \"Dark Mode\" ? \"#ffffff\" : \"#000000\"} !important;\r\n    }\r\n    .dark-mode-calendar .react-calendar__tile--now {\r\n      background: ${getThemeGradient(\"current\")} !important;\r\n      color: #ffffff !important;\r\n    }\r\n    .react-calendar__tile--active,\r\n    .react-calendar__tile--active:hover,\r\n    .react-calendar__tile--hasActive {\r\n      background: ${getThemeGradient(\"selected\")} !important;\r\n      color: #ffffff !important;\r\n    }\r\n    .react-calendar__tile:hover {\r\n      background: ${\r\n        currentTheme === \"Dark Mode\"\r\n          ? \"#374151\"\r\n          : currentTheme === \"Ocean Breeze\"\r\n            ? \"#E5F6F5\"\r\n            : currentTheme === \"Sunset Glow\"\r\n              ? \"#FEF3E8\"\r\n              : currentTheme === \"Forest Whisper\"\r\n                ? \"#E8F8EF\"\r\n                : \"#E8F0FE\"\r\n      }; /* Light hover effect matching each theme */\r\n    }\r\n    .react-calendar__tile--now:hover {\r\n      background: ${getThemeGradient(\"current\")} !important;\r\n      filter: brightness(1.1); /* Slightly brighten on hover */\r\n    }\r\n    .dark-mode-calendar .react-calendar__tile--now:hover {\r\n      background: ${getThemeGradient(\"current\")} !important;\r\n      filter: brightness(1.1);\r\n    }\r\n    .react-calendar__navigation {\r\n      margin-bottom: 0.5rem;\r\n    }\r\n    .react-calendar__month-view__weekdays__weekday {\r\n      font-size: 1.1rem; /* Increase weekday label font size for all themes */\r\n    }\r\n    .react-calendar__month-view__days__day {\r\n      font-size: 1.1rem; /* Increase date font size for all themes */\r\n    }\r\n    .task-card:hover .calendar-icon {\r\n      transform: scale(1) !important; /* Prevent scaling on hover */\r\n    }\r\n  `, [currentTheme, getThemeGradient]);\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <h2 className={`text-2xl font-bold ${styles.title}`}>Calendar</h2>\r\n      <div className=\"grid grid-cols-1 gap-6\">\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"max-w-xl w-full\">\r\n            <style>{calendarStyles}</style>\r\n            <Calendar\r\n              onChange={handleDateChange}\r\n              value={selectedDate}\r\n              className={`${styles.card} p-4 border-none ${\r\n                currentTheme === \"Dark Mode\" ? \"dark-mode-calendar\" : \"\"\r\n              }`}\r\n              tileContent={({ date }) => {\r\n                const dateString = getLocalDateString(date);\r\n                if (!dateString) return null;\r\n                \r\n                const dayTasks = tasks.filter((task) => {\r\n                  if (!task.dueDate) return false;\r\n                  const taskDueDate = getLocalDateString(new Date(task.dueDate));\r\n                  return taskDueDate === dateString;\r\n                });\r\n                \r\n                if (dayTasks.length === 0) return null;\r\n                \r\n                const hasIncomplete = dayTasks.some(task => !task.completed);\r\n                const hasCompleted = dayTasks.some(task => task.completed);\r\n                \r\n                return (\r\n                  <div className=\"task-indicators\" style={{ position: 'absolute', bottom: '2px', display: 'flex', gap: '2px', justifyContent: 'center' }}>\r\n                    {hasIncomplete && (\r\n                      <div \r\n                        className=\"task-dot task-dot-incomplete\" \r\n                        style={{ \r\n                          width: '6px', \r\n                          height: '6px', \r\n                          borderRadius: '50%', \r\n                          backgroundColor: currentTheme === \"Dark Mode\" ? \"#6366F1\" : \r\n                                         currentTheme === \"Ocean Breeze\" ? \"#14B8A6\" : \r\n                                         currentTheme === \"Sunset Glow\" ? \"#F97316\" : \r\n                                         currentTheme === \"Forest Whisper\" ? \"#10B981\" : \"#4F46E5\"\r\n                        }}\r\n                        title={`${dayTasks.filter(t => !t.completed).length} incomplete task(s)`}\r\n                      />\r\n                    )}\r\n                    {hasCompleted && (\r\n                      <div \r\n                        className=\"task-dot task-dot-complete\" \r\n                        style={{ \r\n                          width: '6px', \r\n                          height: '6px', \r\n                          borderRadius: '50%', \r\n                          backgroundColor: '#10B981',\r\n                          opacity: 0.7\r\n                        }}\r\n                        title={`${dayTasks.filter(t => t.completed).length} completed task(s)`}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                );\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"md:col-span-3\">\r\n          <div className={`${styles.card} p-6`}>\r\n            <h3 className={`text-lg font-semibold mb-4 ${styles.subtitle}`}>\r\n              Tasks for{\" \"}\r\n              {selectedDate.toLocaleDateString(\"en-US\", {\r\n                weekday: \"long\",\r\n                year: \"numeric\",\r\n                month: \"long\",\r\n                day: \"numeric\",\r\n              })}\r\n            </h3>\r\n            {tasksForSelectedDate.length === 0 ? (\r\n              <div>\r\n                <p className={`py-4 text-center ${styles.noTasksText}`}>\r\n                  No tasks for this date.\r\n                </p>\r\n                <div className={`p-5 border-t ${styles.border}`}>\r\n                  <button\r\n                    onClick={() => setActiveTab(\"tasks\")}\r\n                    className={styles.buttonTertiary}\r\n                  >\r\n                    <PlusCircle className=\"w-5 h-5 mr-2\" />\r\n                    Add New Task\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"space-y-4\">\r\n                {tasksForSelectedDate.map((task) => (\r\n                  <div\r\n                    key={task.id}\r\n                    className={`flex items-center justify-between p-4 transition-all duration-300 hover:shadow-md hover:scale-[1.02] ${styles.hoverCard} task-card`}\r\n                  >\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      <button\r\n                        onClick={() => toggleTaskComplete(task.id)}\r\n                        className={`p-1 rounded-full transition-all duration-200 ${\r\n                          task.completed\r\n                            ? styles.taskComplete\r\n                            : styles.taskIncomplete\r\n                        }`}\r\n                        aria-label={`Mark task \"${task.title}\" as ${task.completed ? 'incomplete' : 'complete'}`}\r\n                      >\r\n                        <CheckCircle\r\n                          className={`w-5 h-5 ${\r\n                            task.completed ? \"fill-current\" : \"\"\r\n                          }`}\r\n                        />\r\n                      </button>\r\n                      <div>\r\n                        <div className=\"flex items-center space-x-2\">\r\n                          <h3\r\n                            className={`text-base font-semibold ${\r\n                              task.completed \r\n                                ? `${styles.text} line-through opacity-60` \r\n                                : styles.text\r\n                            }`}\r\n                          >\r\n                            {task.title}\r\n                          </h3>\r\n                          <span\r\n                            className={`px-2 py-0.5 rounded-full text-xs font-medium ${\r\n                              task.priority === \"High\"\r\n                                ? styles.isDarkMode\r\n                                  ? \"bg-red-600 text-white\"\r\n                                  : \"bg-red-500 text-white\"\r\n                                : task.priority === \"Medium\"\r\n                                  ? styles.isDarkMode\r\n                                    ? \"bg-orange-600 text-white\"\r\n                                    : \"bg-orange-500 text-white\"\r\n                                  : styles.isDarkMode\r\n                                    ? \"bg-green-600 text-white\"\r\n                                    : \"bg-green-500 text-white\"\r\n                            }`}\r\n                          >\r\n                            {task.priority}\r\n                          </span>\r\n                        </div>\r\n                        <p\r\n                          className={`text-sm flex items-center space-x-1 ${styles.secondaryText}`}\r\n                        >\r\n                          <CalendarIcon\r\n                            className={`${styles.smallIcon} calendar-icon`}\r\n                          />\r\n                          <span>Due: {task.dueDate}</span>\r\n                          <span className=\"ml-2\">Hours: {task.hours || 0}</span>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}