{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final Project\\\\study-buddy-planner\\\\src\\\\components\\\\Layout.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BookOpen } from \"lucide-react\";\nimport Dashboard from \"./Dashboard\";\nimport TaskManager from \"./TaskManager\";\nimport Analytics from \"./Analytics\";\nimport Rewards from \"./Rewards\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Layout() {\n  _s();\n  const [activeTab, setActiveTab] = useState(\"dashboard\");\n  const [tasks, setTasks] = useState([]);\n  const [studyStats, setStudyStats] = useState({\n    totalHours: 0,\n    completedTasks: 0,\n    streak: 0,\n    lastActiveDate: null,\n    lastStreakUpdate: null // New field to track when streak was last updated\n  });\n  const [aiSuggestion, setAiSuggestion] = useState(\"\");\n  const [points, setPoints] = useState(0);\n  const [badges, setBadges] = useState([]);\n  const [themes, setThemes] = useState([\"Light Mode\"]);\n  const [currentTheme, setCurrentTheme] = useState(\"Light Mode\");\n  const userId = \"user123\"; // Hardcoded for now; replace with real user ID from auth\n\n  const themeStyles = {\n    \"Light Mode\": \"bg-slate-50 text-gray-800\",\n    \"Dark Mode\": \"bg-gray-800 text-gray-200\",\n    \"Ocean Breeze\": \"bg-gradient-to-br from-blue-100 to-teal-200 text-blue-900\"\n  };\n  const headerStyles = {\n    \"Light Mode\": \"bg-indigo-600 text-white\",\n    \"Dark Mode\": \"bg-indigo-900 text-gray-200\",\n    \"Ocean Breeze\": \"bg-blue-600 text-white\"\n  };\n  const navStyles = {\n    \"Light Mode\": \"bg-white text-gray-500\",\n    \"Dark Mode\": \"bg-gray-700 text-gray-300\",\n    \"Ocean Breeze\": \"bg-blue-200 text-blue-700\"\n  };\n\n  // Fetch user data from backend on mount\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/user/${userId}`);\n        const data = await response.json();\n        setTasks(data.tasks || []);\n        setStudyStats(data.studyStats || {\n          totalHours: 0,\n          completedTasks: 0,\n          streak: 0,\n          lastActiveDate: null,\n          lastStreakUpdate: null\n        });\n        setPoints(data.points || 0);\n        setBadges(data.badges || []);\n        setThemes(data.themes || [\"Light Mode\"]);\n        setCurrentTheme(data.currentTheme || \"Light Mode\");\n        setTimeout(() => {\n          setAiSuggestion(\"Based on your schedule and learning patterns, I recommend focusing on your Math Assignment today.\");\n        }, 1000);\n      } catch (err) {\n        console.error(\"Error fetching user data:\", err);\n        toast.error(\"Failed to load user data. Using defaults.\");\n        setTasks([{\n          id: 1,\n          title: \"Complete Math Assignment\",\n          dueDate: \"2025-04-25\",\n          priority: \"High\",\n          completed: false\n        }, {\n          id: 2,\n          title: \"Review Chemistry Notes\",\n          dueDate: \"2025-04-23\",\n          priority: \"Medium\",\n          completed: true\n        }, {\n          id: 3,\n          title: \"Research Paper Outline\",\n          dueDate: \"2025-04-30\",\n          priority: \"High\",\n          completed: false\n        }]);\n      }\n    };\n    fetchUserData();\n  }, []);\n\n  // Update streak on app load (once per day)\n  useEffect(() => {\n    const today = new Date().toISOString().split(\"T\")[0];\n    const {\n      lastActiveDate,\n      streak,\n      lastStreakUpdate\n    } = studyStats;\n\n    // Check if we've already updated the streak today\n    if (lastStreakUpdate === today) return;\n\n    // If no last active date, initialize it\n    if (!lastActiveDate) {\n      setStudyStats(prev => ({\n        ...prev,\n        lastActiveDate: today,\n        lastStreakUpdate: today\n      }));\n      return;\n    }\n    const lastDate = new Date(lastActiveDate);\n    const currentDate = new Date(today);\n    const diffDays = (currentDate - lastDate) / (1000 * 60 * 60 * 24);\n    if (diffDays === 1) {\n      setStudyStats(prev => ({\n        ...prev,\n        streak: prev.streak + 1,\n        lastActiveDate: today,\n        lastStreakUpdate: today\n      }));\n    } else if (diffDays > 1) {\n      setStudyStats(prev => ({\n        ...prev,\n        streak: 0,\n        lastActiveDate: today,\n        lastStreakUpdate: today\n      }));\n    } else {\n      // Same day, just update lastStreakUpdate to prevent multiple updates\n      setStudyStats(prev => ({\n        ...prev,\n        lastStreakUpdate: today\n      }));\n    }\n  }, []); // Empty dependency array to run only on mount\n\n  // Update completedTasks when tasks change\n  useEffect(() => {\n    const completedCount = tasks.filter(task => task.completed).length;\n    setStudyStats(prevStats => {\n      const newStats = {\n        ...prevStats,\n        completedTasks: completedCount\n      };\n      return newStats;\n    });\n  }, [tasks]);\n\n  // Debounced save function\n  useEffect(() => {\n    const saveUserData = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/user/${userId}`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            tasks,\n            studyStats,\n            points,\n            badges,\n            themes,\n            currentTheme\n          })\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to save user data\");\n        }\n      } catch (err) {\n        console.error(\"Error saving user data:\", err);\n        toast.error(\"Failed to save user data.\");\n      }\n    };\n    const debounceSave = setTimeout(() => {\n      saveUserData();\n    }, 1000);\n    return () => clearTimeout(debounceSave);\n  }, [tasks, studyStats, points, badges, themes, currentTheme]);\n\n  // Function to log study hours\n  const logStudyHours = hours => {\n    if (hours <= 0) {\n      toast.error(\"Please enter a valid number of hours.\");\n      return;\n    }\n    setStudyStats(prev => ({\n      ...prev,\n      totalHours: prev.totalHours + hours\n    }));\n    toast.success(`Logged ${hours} study hours!`);\n  };\n  const getStudyTips = () => {\n    setAiSuggestion(\"Loading new suggestions...\");\n    setTimeout(() => {\n      const tips = [\"Try using the Pomodoro technique: 25 minutes of focused study followed by a 5-minute break.\", \"For difficult subjects, try teaching the material to an imaginary student.\", \"Create visual mind maps to connect key concepts in your subjects.\", \"Review your notes within 24 hours of taking them to improve retention.\", \"Study in short, frequent sessions rather than long cramming sessions.\"];\n      const randomTip = tips[Math.floor(Math.random() * tips.length)];\n      setAiSuggestion(randomTip);\n    }, 1500);\n  };\n  const generateSchedule = () => {\n    setAiSuggestion(\"Generating personalized study schedule...\");\n    setTimeout(() => {\n      const schedule = \"Based on your upcoming tasks and past performance, here's a suggested schedule:\\n\\n\" + \"- Tuesday (Today): Math Assignment (2 hours) in the afternoon\\n\" + \"- Wednesday: Chemistry Notes review (1 hour) in the morning\\n\" + \"- Thursday: Start Research Paper Outline (1.5 hours)\\n\" + \"- Friday: Complete remaining tasks and review progress\";\n      setAiSuggestion(schedule);\n    }, 2000);\n  };\n  const addTask = newTask => {\n    const task = {\n      id: Date.now(),\n      ...newTask\n    };\n    setTasks([...tasks, task]);\n  };\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n  const toggleTaskComplete = id => {\n    const task = tasks.find(task => task.id === id);\n    let newPoints = points;\n    let newBadges = [...badges];\n    let notifications = [];\n    if (task && !task.completed) {\n      let pointsToAdd = task.priority === \"High\" ? 30 : task.priority === \"Medium\" ? 20 : 10;\n      newPoints = points + pointsToAdd;\n      notifications.push(`🎉 +${pointsToAdd} Points! Keep it up!`);\n      const highPriorityTasks = tasks.filter(t => t.priority === \"High\" && t.completed).length;\n      if (highPriorityTasks + 1 >= 5 && !badges.includes(\"Priority Master\")) {\n        newBadges.push(\"Priority Master\");\n        notifications.push(\"🏆 Badge Earned: Priority Master!\");\n      }\n      const totalCompletedTasks = tasks.filter(t => t.completed).length;\n      if (totalCompletedTasks + 1 >= 10 && !badges.includes(\"Task Titan\")) {\n        newBadges.push(\"Task Titan\");\n        notifications.push(\"🏆 Badge Earned: Task Titan!\");\n      }\n      const dueDate = new Date(task.dueDate);\n      const today = new Date();\n      if (dueDate > today && !badges.includes(\"Early Bird\")) {\n        const earlyTasks = tasks.filter(t => new Date(t.dueDate) > today && t.completed).length;\n        if (earlyTasks + 1 >= 3) {\n          newBadges.push(\"Early Bird\");\n          notifications.push(\"🏆 Badge Earned: Early Bird!\");\n        }\n      }\n      setPoints(newPoints);\n      setBadges(newBadges);\n      notifications.forEach(msg => toast.success(msg));\n    }\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  const updateTask = updatedTask => {\n    setTasks(tasks.map(task => task.id === updatedTask.id ? updatedTask : task));\n  };\n  useEffect(() => {\n    if (studyStats.streak >= 7 && !badges.includes(\"Streak Star\")) {\n      let newBadges = [...badges, \"Streak Star\"];\n      let newPoints = points + 50;\n      setBadges(newBadges);\n      setPoints(newPoints);\n      toast.success(\"🏆 Badge Earned: Streak Star!\");\n      toast.success(\"🎉 +50 Points for 7-Day Streak!\");\n    }\n  }, [studyStats.streak]);\n  const unlockTheme = (theme, cost) => {\n    if (points >= cost && !themes.includes(theme)) {\n      setThemes(prev => [...prev, theme]);\n      setCurrentTheme(theme);\n      setPoints(prev => prev - cost);\n      toast.success(`🎨 Unlocked ${theme}!`);\n    } else if (themes.includes(theme)) {\n      setCurrentTheme(theme);\n      toast.info(`🎨 Switched to ${theme}!`);\n    } else {\n      toast.error(\"Not enough points to unlock this theme!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `min-h-screen ${themeStyles[currentTheme]}`,\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: `p-4 ${headerStyles[currentTheme]}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(BookOpen, {\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), \"StudyBuddy AI Planner\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `px-4 py-2 rounded-lg text-sm ${currentTheme === \"Dark Mode\" ? \"bg-indigo-700 text-gray-200\" : \"bg-indigo-700 text-white\"}`,\n          children: new Date().toLocaleDateString(\"en-US\", {\n            weekday: \"long\",\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: `shadow ${navStyles[currentTheme]}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab(\"dashboard\"),\n            className: `px-4 py-3 font-medium text-sm ${activeTab === \"dashboard\" ? \"border-b-2 border-indigo-600 text-indigo-600\" : currentTheme === \"Dark Mode\" ? \"text-gray-300\" : \"text-gray-500\"}`,\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab(\"tasks\"),\n            className: `px-4 py-3 font-medium text-sm ${activeTab === \"tasks\" ? \"border-b-2 border-indigo-600 text-indigo-600\" : currentTheme === \"Dark Mode\" ? \"text-gray-300\" : \"text-gray-500\"}`,\n            children: \"Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab(\"analytics\"),\n            className: `px-4 py-3 font-medium text-sm ${activeTab === \"analytics\" ? \"border-b-2 border-indigo-600 text-indigo-600\" : currentTheme === \"Dark Mode\" ? \"text-gray-300\" : \"text-gray-500\"}`,\n            children: \"Analytics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab(\"rewards\"),\n            className: `px-4 py-3 font-medium text-sm ${activeTab === \"rewards\" ? \"border-b-2 border-indigo-600 text-indigo-600\" : currentTheme === \"Dark Mode\" ? \"text-gray-300\" : \"text-gray-500\"}`,\n            children: \"Rewards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container mx-auto p-4\",\n      children: [activeTab === \"dashboard\" && /*#__PURE__*/_jsxDEV(Dashboard, {\n        tasks: tasks,\n        studyStats: studyStats,\n        aiSuggestion: aiSuggestion,\n        getStudyTips: getStudyTips,\n        generateSchedule: generateSchedule,\n        setActiveTab: setActiveTab,\n        toggleTaskComplete: toggleTaskComplete,\n        deleteTask: deleteTask,\n        currentTheme: currentTheme,\n        logStudyHours: logStudyHours // Pass the function to Dashboard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 11\n      }, this), activeTab === \"tasks\" && /*#__PURE__*/_jsxDEV(TaskManager, {\n        tasks: tasks,\n        addTask: addTask,\n        updateTask: updateTask,\n        deleteTask: deleteTask,\n        toggleTaskComplete: toggleTaskComplete,\n        currentTheme: currentTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 11\n      }, this), activeTab === \"analytics\" && /*#__PURE__*/_jsxDEV(Analytics, {\n        tasks: tasks,\n        currentTheme: currentTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }, this), activeTab === \"rewards\" && /*#__PURE__*/_jsxDEV(Rewards, {\n        points: points,\n        badges: badges,\n        studyStats: studyStats,\n        themes: themes,\n        currentTheme: currentTheme,\n        unlockTheme: unlockTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 332,\n    columnNumber: 5\n  }, this);\n}\n_s(Layout, \"LAgiBUHv605J8hzSoW/h60/DI6I=\");\n_c = Layout;\nexport default Layout;\nvar _c;\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"names":["React","useState","useEffect","BookOpen","Dashboard","TaskManager","Analytics","Rewards","ToastContainer","toast","jsxDEV","_jsxDEV","Layout","_s","activeTab","setActiveTab","tasks","setTasks","studyStats","setStudyStats","totalHours","completedTasks","streak","lastActiveDate","lastStreakUpdate","aiSuggestion","setAiSuggestion","points","setPoints","badges","setBadges","themes","setThemes","currentTheme","setCurrentTheme","userId","themeStyles","headerStyles","navStyles","fetchUserData","response","fetch","data","json","setTimeout","err","console","error","id","title","dueDate","priority","completed","today","Date","toISOString","split","prev","lastDate","currentDate","diffDays","completedCount","filter","task","length","prevStats","newStats","saveUserData","method","headers","body","JSON","stringify","ok","Error","debounceSave","clearTimeout","logStudyHours","hours","success","getStudyTips","tips","randomTip","Math","floor","random","generateSchedule","schedule","addTask","newTask","now","deleteTask","toggleTaskComplete","find","newPoints","newBadges","notifications","pointsToAdd","push","highPriorityTasks","t","includes","totalCompletedTasks","earlyTasks","forEach","msg","map","updateTask","updatedTask","unlockTheme","theme","cost","info","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleDateString","weekday","year","month","day","onClick","_c","$RefreshReg$"],"sources":["D:/Final Project/study-buddy-planner/src/components/Layout.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { BookOpen } from \"lucide-react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport TaskManager from \"./TaskManager\";\r\nimport Analytics from \"./Analytics\";\r\nimport Rewards from \"./Rewards\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction Layout() {\r\n  const [activeTab, setActiveTab] = useState(\"dashboard\");\r\n  const [tasks, setTasks] = useState([]);\r\n  const [studyStats, setStudyStats] = useState({\r\n    totalHours: 0,\r\n    completedTasks: 0,\r\n    streak: 0,\r\n    lastActiveDate: null,\r\n    lastStreakUpdate: null, // New field to track when streak was last updated\r\n  });\r\n  const [aiSuggestion, setAiSuggestion] = useState(\"\");\r\n  const [points, setPoints] = useState(0);\r\n  const [badges, setBadges] = useState([]);\r\n  const [themes, setThemes] = useState([\"Light Mode\"]);\r\n  const [currentTheme, setCurrentTheme] = useState(\"Light Mode\");\r\n\r\n  const userId = \"user123\"; // Hardcoded for now; replace with real user ID from auth\r\n\r\n  const themeStyles = {\r\n    \"Light Mode\": \"bg-slate-50 text-gray-800\",\r\n    \"Dark Mode\": \"bg-gray-800 text-gray-200\",\r\n    \"Ocean Breeze\": \"bg-gradient-to-br from-blue-100 to-teal-200 text-blue-900\",\r\n  };\r\n\r\n  const headerStyles = {\r\n    \"Light Mode\": \"bg-indigo-600 text-white\",\r\n    \"Dark Mode\": \"bg-indigo-900 text-gray-200\",\r\n    \"Ocean Breeze\": \"bg-blue-600 text-white\",\r\n  };\r\n\r\n  const navStyles = {\r\n    \"Light Mode\": \"bg-white text-gray-500\",\r\n    \"Dark Mode\": \"bg-gray-700 text-gray-300\",\r\n    \"Ocean Breeze\": \"bg-blue-200 text-blue-700\",\r\n  };\r\n\r\n  // Fetch user data from backend on mount\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:5000/api/user/${userId}`\r\n        );\r\n        const data = await response.json();\r\n\r\n        setTasks(data.tasks || []);\r\n        setStudyStats(\r\n          data.studyStats || {\r\n            totalHours: 0,\r\n            completedTasks: 0,\r\n            streak: 0,\r\n            lastActiveDate: null,\r\n            lastStreakUpdate: null,\r\n          }\r\n        );\r\n        setPoints(data.points || 0);\r\n        setBadges(data.badges || []);\r\n        setThemes(data.themes || [\"Light Mode\"]);\r\n        setCurrentTheme(data.currentTheme || \"Light Mode\");\r\n\r\n        setTimeout(() => {\r\n          setAiSuggestion(\r\n            \"Based on your schedule and learning patterns, I recommend focusing on your Math Assignment today.\"\r\n          );\r\n        }, 1000);\r\n      } catch (err) {\r\n        console.error(\"Error fetching user data:\", err);\r\n        toast.error(\"Failed to load user data. Using defaults.\");\r\n        setTasks([\r\n          {\r\n            id: 1,\r\n            title: \"Complete Math Assignment\",\r\n            dueDate: \"2025-04-25\",\r\n            priority: \"High\",\r\n            completed: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            title: \"Review Chemistry Notes\",\r\n            dueDate: \"2025-04-23\",\r\n            priority: \"Medium\",\r\n            completed: true,\r\n          },\r\n          {\r\n            id: 3,\r\n            title: \"Research Paper Outline\",\r\n            dueDate: \"2025-04-30\",\r\n            priority: \"High\",\r\n            completed: false,\r\n          },\r\n        ]);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  // Update streak on app load (once per day)\r\n  useEffect(() => {\r\n    const today = new Date().toISOString().split(\"T\")[0];\r\n    const { lastActiveDate, streak, lastStreakUpdate } = studyStats;\r\n\r\n    // Check if we've already updated the streak today\r\n    if (lastStreakUpdate === today) return;\r\n\r\n    // If no last active date, initialize it\r\n    if (!lastActiveDate) {\r\n      setStudyStats((prev) => ({\r\n        ...prev,\r\n        lastActiveDate: today,\r\n        lastStreakUpdate: today,\r\n      }));\r\n      return;\r\n    }\r\n\r\n    const lastDate = new Date(lastActiveDate);\r\n    const currentDate = new Date(today);\r\n    const diffDays = (currentDate - lastDate) / (1000 * 60 * 60 * 24);\r\n\r\n    if (diffDays === 1) {\r\n      setStudyStats((prev) => ({\r\n        ...prev,\r\n        streak: prev.streak + 1,\r\n        lastActiveDate: today,\r\n        lastStreakUpdate: today,\r\n      }));\r\n    } else if (diffDays > 1) {\r\n      setStudyStats((prev) => ({\r\n        ...prev,\r\n        streak: 0,\r\n        lastActiveDate: today,\r\n        lastStreakUpdate: today,\r\n      }));\r\n    } else {\r\n      // Same day, just update lastStreakUpdate to prevent multiple updates\r\n      setStudyStats((prev) => ({\r\n        ...prev,\r\n        lastStreakUpdate: today,\r\n      }));\r\n    }\r\n  }, []); // Empty dependency array to run only on mount\r\n\r\n  // Update completedTasks when tasks change\r\n  useEffect(() => {\r\n    const completedCount = tasks.filter((task) => task.completed).length;\r\n    setStudyStats((prevStats) => {\r\n      const newStats = { ...prevStats, completedTasks: completedCount };\r\n      return newStats;\r\n    });\r\n  }, [tasks]);\r\n\r\n  // Debounced save function\r\n  useEffect(() => {\r\n    const saveUserData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:5000/api/user/${userId}`,\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              tasks,\r\n              studyStats,\r\n              points,\r\n              badges,\r\n              themes,\r\n              currentTheme,\r\n            }),\r\n          }\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to save user data\");\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error saving user data:\", err);\r\n        toast.error(\"Failed to save user data.\");\r\n      }\r\n    };\r\n\r\n    const debounceSave = setTimeout(() => {\r\n      saveUserData();\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(debounceSave);\r\n  }, [tasks, studyStats, points, badges, themes, currentTheme]);\r\n\r\n  // Function to log study hours\r\n  const logStudyHours = (hours) => {\r\n    if (hours <= 0) {\r\n      toast.error(\"Please enter a valid number of hours.\");\r\n      return;\r\n    }\r\n    setStudyStats((prev) => ({\r\n      ...prev,\r\n      totalHours: prev.totalHours + hours,\r\n    }));\r\n    toast.success(`Logged ${hours} study hours!`);\r\n  };\r\n\r\n  const getStudyTips = () => {\r\n    setAiSuggestion(\"Loading new suggestions...\");\r\n    setTimeout(() => {\r\n      const tips = [\r\n        \"Try using the Pomodoro technique: 25 minutes of focused study followed by a 5-minute break.\",\r\n        \"For difficult subjects, try teaching the material to an imaginary student.\",\r\n        \"Create visual mind maps to connect key concepts in your subjects.\",\r\n        \"Review your notes within 24 hours of taking them to improve retention.\",\r\n        \"Study in short, frequent sessions rather than long cramming sessions.\",\r\n      ];\r\n      const randomTip = tips[Math.floor(Math.random() * tips.length)];\r\n      setAiSuggestion(randomTip);\r\n    }, 1500);\r\n  };\r\n\r\n  const generateSchedule = () => {\r\n    setAiSuggestion(\"Generating personalized study schedule...\");\r\n    setTimeout(() => {\r\n      const schedule =\r\n        \"Based on your upcoming tasks and past performance, here's a suggested schedule:\\n\\n\" +\r\n        \"- Tuesday (Today): Math Assignment (2 hours) in the afternoon\\n\" +\r\n        \"- Wednesday: Chemistry Notes review (1 hour) in the morning\\n\" +\r\n        \"- Thursday: Start Research Paper Outline (1.5 hours)\\n\" +\r\n        \"- Friday: Complete remaining tasks and review progress\";\r\n      setAiSuggestion(schedule);\r\n    }, 2000);\r\n  };\r\n\r\n  const addTask = (newTask) => {\r\n    const task = { id: Date.now(), ...newTask };\r\n    setTasks([...tasks, task]);\r\n  };\r\n\r\n  const deleteTask = (id) => {\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  const toggleTaskComplete = (id) => {\r\n    const task = tasks.find((task) => task.id === id);\r\n    let newPoints = points;\r\n    let newBadges = [...badges];\r\n    let notifications = [];\r\n\r\n    if (task && !task.completed) {\r\n      let pointsToAdd =\r\n        task.priority === \"High\" ? 30 : task.priority === \"Medium\" ? 20 : 10;\r\n      newPoints = points + pointsToAdd;\r\n      notifications.push(`🎉 +${pointsToAdd} Points! Keep it up!`);\r\n\r\n      const highPriorityTasks = tasks.filter(\r\n        (t) => t.priority === \"High\" && t.completed\r\n      ).length;\r\n      if (highPriorityTasks + 1 >= 5 && !badges.includes(\"Priority Master\")) {\r\n        newBadges.push(\"Priority Master\");\r\n        notifications.push(\"🏆 Badge Earned: Priority Master!\");\r\n      }\r\n\r\n      const totalCompletedTasks = tasks.filter((t) => t.completed).length;\r\n      if (totalCompletedTasks + 1 >= 10 && !badges.includes(\"Task Titan\")) {\r\n        newBadges.push(\"Task Titan\");\r\n        notifications.push(\"🏆 Badge Earned: Task Titan!\");\r\n      }\r\n\r\n      const dueDate = new Date(task.dueDate);\r\n      const today = new Date();\r\n      if (dueDate > today && !badges.includes(\"Early Bird\")) {\r\n        const earlyTasks = tasks.filter(\r\n          (t) => new Date(t.dueDate) > today && t.completed\r\n        ).length;\r\n        if (earlyTasks + 1 >= 3) {\r\n          newBadges.push(\"Early Bird\");\r\n          notifications.push(\"🏆 Badge Earned: Early Bird!\");\r\n        }\r\n      }\r\n\r\n      setPoints(newPoints);\r\n      setBadges(newBadges);\r\n      notifications.forEach((msg) => toast.success(msg));\r\n    }\r\n\r\n    setTasks(\r\n      tasks.map((task) =>\r\n        task.id === id ? { ...task, completed: !task.completed } : task\r\n      )\r\n    );\r\n  };\r\n\r\n  const updateTask = (updatedTask) => {\r\n    setTasks(\r\n      tasks.map((task) => (task.id === updatedTask.id ? updatedTask : task))\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (studyStats.streak >= 7 && !badges.includes(\"Streak Star\")) {\r\n      let newBadges = [...badges, \"Streak Star\"];\r\n      let newPoints = points + 50;\r\n\r\n      setBadges(newBadges);\r\n      setPoints(newPoints);\r\n\r\n      toast.success(\"🏆 Badge Earned: Streak Star!\");\r\n      toast.success(\"🎉 +50 Points for 7-Day Streak!\");\r\n    }\r\n  }, [studyStats.streak]);\r\n\r\n  const unlockTheme = (theme, cost) => {\r\n    if (points >= cost && !themes.includes(theme)) {\r\n      setThemes((prev) => [...prev, theme]);\r\n      setCurrentTheme(theme);\r\n      setPoints((prev) => prev - cost);\r\n      toast.success(`🎨 Unlocked ${theme}!`);\r\n    } else if (themes.includes(theme)) {\r\n      setCurrentTheme(theme);\r\n      toast.info(`🎨 Switched to ${theme}!`);\r\n    } else {\r\n      toast.error(\"Not enough points to unlock this theme!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`min-h-screen ${themeStyles[currentTheme]}`}>\r\n      <ToastContainer />\r\n      <header className={`p-4 ${headerStyles[currentTheme]}`}>\r\n        <div className=\"container mx-auto flex justify-between items-center\">\r\n          <h1 className=\"text-2xl font-bold flex items-center\">\r\n            <BookOpen className=\"mr-2\" />\r\n            StudyBuddy AI Planner\r\n          </h1>\r\n          <div\r\n            className={`px-4 py-2 rounded-lg text-sm ${\r\n              currentTheme === \"Dark Mode\"\r\n                ? \"bg-indigo-700 text-gray-200\"\r\n                : \"bg-indigo-700 text-white\"\r\n            }`}\r\n          >\r\n            {new Date().toLocaleDateString(\"en-US\", {\r\n              weekday: \"long\",\r\n              year: \"numeric\",\r\n              month: \"long\",\r\n              day: \"numeric\",\r\n            })}\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <nav className={`shadow ${navStyles[currentTheme]}`}>\r\n        <div className=\"container mx-auto\">\r\n          <div className=\"flex\">\r\n            <button\r\n              onClick={() => setActiveTab(\"dashboard\")}\r\n              className={`px-4 py-3 font-medium text-sm ${\r\n                activeTab === \"dashboard\"\r\n                  ? \"border-b-2 border-indigo-600 text-indigo-600\"\r\n                  : currentTheme === \"Dark Mode\"\r\n                  ? \"text-gray-300\"\r\n                  : \"text-gray-500\"\r\n              }`}\r\n            >\r\n              Dashboard\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab(\"tasks\")}\r\n              className={`px-4 py-3 font-medium text-sm ${\r\n                activeTab === \"tasks\"\r\n                  ? \"border-b-2 border-indigo-600 text-indigo-600\"\r\n                  : currentTheme === \"Dark Mode\"\r\n                  ? \"text-gray-300\"\r\n                  : \"text-gray-500\"\r\n              }`}\r\n            >\r\n              Tasks\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab(\"analytics\")}\r\n              className={`px-4 py-3 font-medium text-sm ${\r\n                activeTab === \"analytics\"\r\n                  ? \"border-b-2 border-indigo-600 text-indigo-600\"\r\n                  : currentTheme === \"Dark Mode\"\r\n                  ? \"text-gray-300\"\r\n                  : \"text-gray-500\"\r\n              }`}\r\n            >\r\n              Analytics\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab(\"rewards\")}\r\n              className={`px-4 py-3 font-medium text-sm ${\r\n                activeTab === \"rewards\"\r\n                  ? \"border-b-2 border-indigo-600 text-indigo-600\"\r\n                  : currentTheme === \"Dark Mode\"\r\n                  ? \"text-gray-300\"\r\n                  : \"text-gray-500\"\r\n              }`}\r\n            >\r\n              Rewards\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n      <main className=\"container mx-auto p-4\">\r\n        {activeTab === \"dashboard\" && (\r\n          <Dashboard\r\n            tasks={tasks}\r\n            studyStats={studyStats}\r\n            aiSuggestion={aiSuggestion}\r\n            getStudyTips={getStudyTips}\r\n            generateSchedule={generateSchedule}\r\n            setActiveTab={setActiveTab}\r\n            toggleTaskComplete={toggleTaskComplete}\r\n            deleteTask={deleteTask}\r\n            currentTheme={currentTheme}\r\n            logStudyHours={logStudyHours} // Pass the function to Dashboard\r\n          />\r\n        )}\r\n\r\n        {activeTab === \"tasks\" && (\r\n          <TaskManager\r\n            tasks={tasks}\r\n            addTask={addTask}\r\n            updateTask={updateTask}\r\n            deleteTask={deleteTask}\r\n            toggleTaskComplete={toggleTaskComplete}\r\n            currentTheme={currentTheme}\r\n          />\r\n        )}\r\n\r\n        {activeTab === \"analytics\" && (\r\n          <Analytics tasks={tasks} currentTheme={currentTheme} />\r\n        )}\r\n\r\n        {activeTab === \"rewards\" && (\r\n          <Rewards\r\n            points={points}\r\n            badges={badges}\r\n            studyStats={studyStats}\r\n            themes={themes}\r\n            currentTheme={currentTheme}\r\n            unlockTheme={unlockTheme}\r\n          />\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}