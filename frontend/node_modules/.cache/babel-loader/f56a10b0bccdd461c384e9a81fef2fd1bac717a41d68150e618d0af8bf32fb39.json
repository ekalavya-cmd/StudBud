{"ast":null,"code":"var _jsxFileName = \"D:\\\\StudBud\\\\frontend\\\\src\\\\components\\\\CalendarPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Calendar from \"react-calendar\";\nimport { CheckCircle, Circle, Calendar as CalendarIcon, PlusCircle } from \"lucide-react\";\nimport { getCardStyles } from \"../components/utils/themeUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CalendarPage({\n  tasks,\n  toggleTaskComplete,\n  currentTheme,\n  setActiveTab\n}) {\n  _s();\n  const styles = getCardStyles(currentTheme);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const today = new Date(); // Store today's date for comparison\n\n  // Function to get local date string in YYYY-MM-DD format\n  const getLocalDateString = date => {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day = String(date.getDate()).padStart(2, \"0\");\n    return `${year}-${month}-${day}`;\n  };\n\n  // Handle date selection\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n\n  // Reset selectedDate to today when clicking anywhere on the page, except when clicking on task cards\n  const handleClickOutside = event => {\n    const calendarElement = document.querySelector(\".react-calendar\");\n    const isClickInsideCalendar = calendarElement && calendarElement.contains(event.target);\n\n    // Check if the click is on a navigation button or a date tile\n    const isNavigationClick = event.target.closest(\".react-calendar__navigation\");\n    const isTileClick = event.target.closest(\".react-calendar__tile\");\n\n    // Check if the click is on a task card (including the checkmark button)\n    const isTaskCardClick = event.target.closest(\".task-card\");\n\n    // Reset to today if the click is outside the calendar, on navigation, and NOT on a task card\n    if (!isTileClick && !isTaskCardClick && (isNavigationClick || !isClickInsideCalendar)) {\n      setSelectedDate(new Date());\n    }\n  };\n\n  // Add and remove the click event listener\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside);\n    };\n  }, []);\n\n  // Filter tasks for the selected date\n  const tasksForSelectedDate = tasks.filter(task => {\n    const taskDueDate = getLocalDateString(new Date(task.dueDate));\n    const selectedDateString = getLocalDateString(selectedDate);\n    return taskDueDate === selectedDateString && !task.completed;\n  });\n\n  // Check if the selected date is today\n  const isSelectedDateToday = getLocalDateString(selectedDate) === getLocalDateString(today);\n\n  // Define gradient styles for each theme based on themeUtils.js\n  const getThemeGradient = type => {\n    switch (currentTheme) {\n      case \"Dark Mode\":\n        if (type === \"current\") {\n          // Use the same blue gradient as selected dates when no other date is selected\n          // When another date is selected, use a lighter shade\n          return isSelectedDateToday ? \"linear-gradient(135deg, #1E40AF, #1976D2)\" // blue-800 to blue-600\n          : \"linear-gradient(135deg, #1976D2, #60A5FA)\"; // blue-600 to blue-400 (lighter shade)\n        }\n        return \"linear-gradient(135deg, #1E40AF, #1976D2)\";\n      // blue-800 to blue-600 for selected dates\n      case \"Ocean Breeze\":\n        return type === \"current\" ? \"linear-gradient(135deg, #A5F3FC, #22D3EE)\" // cyan-100 to cyan-300\n        : \"linear-gradient(135deg, #5EEAD4, #14B8A6)\";\n      // teal-300 to teal-500\n      case \"Sunset Glow\":\n        return type === \"current\" ? \"linear-gradient(135deg, #FED7AA, #FDBA74)\" // orange-200 to orange-300\n        : \"linear-gradient(135deg, #FCA5A5, #F87171)\";\n      // red-300 to red-400\n      case \"Forest Whisper\":\n        return type === \"current\" ? \"linear-gradient(135deg, #BBF7D0, #86EFAC)\" // green-200 to green-300\n        : \"linear-gradient(135deg, #6EE7B7, #10B981)\";\n      // emerald-300 to emerald-500\n      default:\n        // Light Mode\n        return type === \"current\" ? \"linear-gradient(135deg, #C7D2FE, #A5B4FC)\" // indigo-200 to indigo-300\n        : \"linear-gradient(135deg, #818CF8, #4F46E5)\";\n      // indigo-400 to indigo-600\n    }\n  };\n\n  // Custom styles for the calendar, including theme-based gradients\n  const calendarStyles = `\n    .react-calendar {\n      margin-left: 25px;\n    }\n    .react-calendar__navigation button {\n      font-size: 1.25rem;\n    }\n    .dark-mode-calendar {\n      background-color: #1F2937; /* bg-gray-800 */\n      color: #ffffff; /* Default text to white */\n      border-radius: 0.75rem; /* Match rounded-xl from styles.card */\n    }\n    .dark-mode-calendar .react-calendar__navigation {\n      background-color: #1F2937; /* bg-gray-800 */\n      margin-bottom: 0.5rem;\n    }\n    .dark-mode-calendar .react-calendar__navigation button {\n      color: #ffffff; /* Navigation arrows and labels to white */\n      background: none;\n      font-size: 1.25rem; /* Increase navigation button font size */\n    }\n    .dark-mode-calendar .react-calendar__navigation button:hover,\n    .dark-mode-calendar .react-calendar__navigation button:focus {\n      background: #374151; /* bg-gray-700 on hover/focus */\n    }\n    .dark-mode-calendar .react-calendar__month-view__weekdays__weekday {\n      color: #ffffff; /* Days of the week to white */\n      font-size: 1.1rem; /* Increase weekday label font size */\n    }\n    .dark-mode-calendar .react-calendar__month-view__days__day {\n      color: #ffffff; /* Current month's dates to white */\n      font-size: 1.1rem; /* Increase date font size */\n    }\n    .dark-mode-calendar .react-calendar__month-view__days__day--weekend {\n      color: #d10000; /* Match the default red shade used in other themes */\n    }\n    .dark-mode-calendar .react-calendar__month-view__days__day--neighboringMonth {\n      color: #9CA3AF; /* Gray-400 for previous/next month dates (default) */\n    }\n    .dark-mode-calendar .react-calendar__tile--active,\n    .dark-mode-calendar .react-calendar__tile--active:hover,\n    .dark-mode-calendar .react-calendar__tile--hasActive {\n      background: ${getThemeGradient(\"selected\")} !important;\n      color: #ffffff !important;\n    }\n    .dark-mode-calendar .react-calendar__tile:hover {\n      background: #374151; /* bg-gray-700 on hover */\n    }\n    .react-calendar {\n      width: 100%; /* Ensure calendar takes full width of its container */\n    }\n    .react-calendar__tile {\n      position: relative;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      height: 48px; /* Increase tile height for larger size */\n      font-size: 1.1rem; /* Increase tile font size */\n    }\n    .task-dot {\n      position: absolute;\n      bottom: 2px;\n      width: 10px; /* Slightly increase dot size for proportionality */\n      height: 10px;\n      border-radius: 50%;\n      ${currentTheme === \"Dark Mode\" ? \"background-color: #6366F1;\" : \"\"}\n      ${currentTheme === \"Ocean Breeze\" ? \"background-color: #14B8A6;\" : \"\"}\n      ${currentTheme === \"Sunset Glow\" ? \"background-color: #F97316;\" : \"\"}\n      ${currentTheme === \"Forest Whisper\" ? \"background-color: #10B981;\" : \"\"}\n      ${currentTheme === \"Light Mode\" ? \"background-color: #4F46E5;\" : \"\"}\n    }\n    .react-calendar__tile--now {\n      background: ${getThemeGradient(\"current\")} !important;\n      color: ${currentTheme === \"Dark Mode\" ? \"#ffffff\" : \"#000000\"} !important;\n    }\n    .dark-mode-calendar .react-calendar__tile--now {\n      background: ${getThemeGradient(\"current\")} !important;\n      color: #ffffff !important;\n    }\n    .react-calendar__tile--active,\n    .react-calendar__tile--active:hover,\n    .react-calendar__tile--hasActive {\n      background: ${getThemeGradient(\"selected\")} !important;\n      color: #ffffff !important;\n    }\n    .react-calendar__tile:hover {\n      background: ${currentTheme === \"Dark Mode\" ? \"#374151\" : currentTheme === \"Ocean Breeze\" ? \"#E5F6F5\" : currentTheme === \"Sunset Glow\" ? \"#FEF3E8\" : currentTheme === \"Forest Whisper\" ? \"#E8F8EF\" : \"#E8F0FE\"}; /* Light hover effect matching each theme */\n    }\n    .react-calendar__tile--now:hover {\n      background: ${getThemeGradient(\"current\")} !important;\n      filter: brightness(1.1); /* Slightly brighten on hover */\n    }\n    .dark-mode-calendar .react-calendar__tile--now:hover {\n      background: ${getThemeGradient(\"current\")} !important;\n      filter: brightness(1.1);\n    }\n    .react-calendar__navigation {\n      margin-bottom: 0.5rem;\n    }\n    .react-calendar__month-view__weekdays__weekday {\n      font-size: 1.1rem; /* Increase weekday label font size for all themes */\n    }\n    .react-calendar__month-view__days__day {\n      font-size: 1.1rem; /* Increase date font size for all themes */\n    }\n    .task-card:hover .calendar-icon {\n      transform: scale(1) !important; /* Prevent scaling on hover */\n    }\n  `;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: `text-2xl font-bold ${styles.title}`,\n      children: \"Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-w-xl w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"style\", {\n            children: calendarStyles\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n            onChange: handleDateChange,\n            value: selectedDate,\n            className: `${styles.card} p-4 border-none ${currentTheme === \"Dark Mode\" ? \"dark-mode-calendar\" : \"\"}`,\n            tileContent: ({\n              date\n            }) => {\n              const dateString = getLocalDateString(date);\n              const hasTasks = tasks.some(task => getLocalDateString(new Date(task.dueDate)) === dateString && !task.completed);\n              return hasTasks ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 35\n              }, this) : null;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:col-span-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.card} p-6`,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: `text-lg font-semibold mb-4 ${styles.subtitle}`,\n            children: [\"Tasks for\", \" \", selectedDate.toLocaleDateString(\"en-US\", {\n              weekday: \"long\",\n              year: \"numeric\",\n              month: \"long\",\n              day: \"numeric\"\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), tasksForSelectedDate.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: `py-4 text-center ${styles.noTasksText}`,\n              children: \"No incomplete tasks for this date.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `p-5 border-t ${styles.border}`,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setActiveTab(\"tasks\"),\n                className: styles.buttonTertiary,\n                children: [/*#__PURE__*/_jsxDEV(PlusCircle, {\n                  className: \"w-5 h-5 mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 21\n                }, this), \"Add New Task\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: tasksForSelectedDate.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `flex items-center justify-between p-4 transition-all duration-300 hover:shadow-md hover:scale-[1.02] ${styles.hoverCard} task-card`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => toggleTaskComplete(task.id),\n                  className: `p-1 rounded-full transition-all duration-200 ${task.completed ? styles.taskComplete : styles.taskIncomplete}`,\n                  children: /*#__PURE__*/_jsxDEV(CheckCircle, {\n                    className: `w-5 h-5 ${task.completed ? \"fill-current\" : \"\"}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center space-x-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: `text-base font-semibold ${styles.text}`,\n                      children: task.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `px-2 py-0.5 rounded-full text-xs font-medium ${task.priority === \"High\" ? styles.isDarkMode ? \"bg-red-600 text-white\" : \"bg-red-500 text-white\" : task.priority === \"Medium\" ? styles.isDarkMode ? \"bg-orange-600 text-white\" : \"bg-orange-500 text-white\" : styles.isDarkMode ? \"bg-green-600 text-white\" : \"bg-green-500 text-white\"}`,\n                      children: task.priority\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: `text-sm flex items-center space-x-1 ${styles.secondaryText}`,\n                    children: [/*#__PURE__*/_jsxDEV(CalendarIcon, {\n                      className: `${styles.smallIcon} calendar-icon`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Due: \", task.dueDate]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"ml-2\",\n                      children: [\"Hours: \", task.hours || 0]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 335,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 21\n              }, this)\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n}\n_s(CalendarPage, \"qYMXPX6kJjMf7idsNA5swqueyyY=\");\n_c = CalendarPage;\nexport default CalendarPage;\nvar _c;\n$RefreshReg$(_c, \"CalendarPage\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","CheckCircle","Circle","CalendarIcon","PlusCircle","getCardStyles","jsxDEV","_jsxDEV","CalendarPage","tasks","toggleTaskComplete","currentTheme","setActiveTab","_s","styles","selectedDate","setSelectedDate","Date","today","getLocalDateString","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","handleDateChange","handleClickOutside","event","calendarElement","document","querySelector","isClickInsideCalendar","contains","target","isNavigationClick","closest","isTileClick","isTaskCardClick","addEventListener","removeEventListener","tasksForSelectedDate","filter","task","taskDueDate","dueDate","selectedDateString","completed","isSelectedDateToday","getThemeGradient","type","calendarStyles","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","card","tileContent","dateString","hasTasks","some","subtitle","toLocaleDateString","weekday","length","noTasksText","border","onClick","buttonTertiary","map","hoverCard","id","taskComplete","taskIncomplete","text","priority","isDarkMode","secondaryText","smallIcon","hours","_c","$RefreshReg$"],"sources":["D:/StudBud/frontend/src/components/CalendarPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport {\r\n  CheckCircle,\r\n  Circle,\r\n  Calendar as CalendarIcon,\r\n  PlusCircle,\r\n} from \"lucide-react\";\r\nimport { getCardStyles } from \"../components/utils/themeUtils\";\r\n\r\nfunction CalendarPage({\r\n  tasks,\r\n  toggleTaskComplete,\r\n  currentTheme,\r\n  setActiveTab,\r\n}) {\r\n  const styles = getCardStyles(currentTheme);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const today = new Date(); // Store today's date for comparison\r\n\r\n  // Function to get local date string in YYYY-MM-DD format\r\n  const getLocalDateString = (date) => {\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n  // Handle date selection\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  // Reset selectedDate to today when clicking anywhere on the page, except when clicking on task cards\r\n  const handleClickOutside = (event) => {\r\n    const calendarElement = document.querySelector(\".react-calendar\");\r\n    const isClickInsideCalendar =\r\n      calendarElement && calendarElement.contains(event.target);\r\n\r\n    // Check if the click is on a navigation button or a date tile\r\n    const isNavigationClick = event.target.closest(\r\n      \".react-calendar__navigation\"\r\n    );\r\n    const isTileClick = event.target.closest(\".react-calendar__tile\");\r\n\r\n    // Check if the click is on a task card (including the checkmark button)\r\n    const isTaskCardClick = event.target.closest(\".task-card\");\r\n\r\n    // Reset to today if the click is outside the calendar, on navigation, and NOT on a task card\r\n    if (\r\n      !isTileClick &&\r\n      !isTaskCardClick &&\r\n      (isNavigationClick || !isClickInsideCalendar)\r\n    ) {\r\n      setSelectedDate(new Date());\r\n    }\r\n  };\r\n\r\n  // Add and remove the click event listener\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  // Filter tasks for the selected date\r\n  const tasksForSelectedDate = tasks.filter((task) => {\r\n    const taskDueDate = getLocalDateString(new Date(task.dueDate));\r\n    const selectedDateString = getLocalDateString(selectedDate);\r\n    return taskDueDate === selectedDateString && !task.completed;\r\n  });\r\n\r\n  // Check if the selected date is today\r\n  const isSelectedDateToday =\r\n    getLocalDateString(selectedDate) === getLocalDateString(today);\r\n\r\n  // Define gradient styles for each theme based on themeUtils.js\r\n  const getThemeGradient = (type) => {\r\n    switch (currentTheme) {\r\n      case \"Dark Mode\":\r\n        if (type === \"current\") {\r\n          // Use the same blue gradient as selected dates when no other date is selected\r\n          // When another date is selected, use a lighter shade\r\n          return isSelectedDateToday\r\n            ? \"linear-gradient(135deg, #1E40AF, #1976D2)\" // blue-800 to blue-600\r\n            : \"linear-gradient(135deg, #1976D2, #60A5FA)\"; // blue-600 to blue-400 (lighter shade)\r\n        }\r\n        return \"linear-gradient(135deg, #1E40AF, #1976D2)\"; // blue-800 to blue-600 for selected dates\r\n      case \"Ocean Breeze\":\r\n        return type === \"current\"\r\n          ? \"linear-gradient(135deg, #A5F3FC, #22D3EE)\" // cyan-100 to cyan-300\r\n          : \"linear-gradient(135deg, #5EEAD4, #14B8A6)\"; // teal-300 to teal-500\r\n      case \"Sunset Glow\":\r\n        return type === \"current\"\r\n          ? \"linear-gradient(135deg, #FED7AA, #FDBA74)\" // orange-200 to orange-300\r\n          : \"linear-gradient(135deg, #FCA5A5, #F87171)\"; // red-300 to red-400\r\n      case \"Forest Whisper\":\r\n        return type === \"current\"\r\n          ? \"linear-gradient(135deg, #BBF7D0, #86EFAC)\" // green-200 to green-300\r\n          : \"linear-gradient(135deg, #6EE7B7, #10B981)\"; // emerald-300 to emerald-500\r\n      default: // Light Mode\r\n        return type === \"current\"\r\n          ? \"linear-gradient(135deg, #C7D2FE, #A5B4FC)\" // indigo-200 to indigo-300\r\n          : \"linear-gradient(135deg, #818CF8, #4F46E5)\"; // indigo-400 to indigo-600\r\n    }\r\n  };\r\n\r\n  // Custom styles for the calendar, including theme-based gradients\r\n  const calendarStyles = `\r\n    .react-calendar {\r\n      margin-left: 25px;\r\n    }\r\n    .react-calendar__navigation button {\r\n      font-size: 1.25rem;\r\n    }\r\n    .dark-mode-calendar {\r\n      background-color: #1F2937; /* bg-gray-800 */\r\n      color: #ffffff; /* Default text to white */\r\n      border-radius: 0.75rem; /* Match rounded-xl from styles.card */\r\n    }\r\n    .dark-mode-calendar .react-calendar__navigation {\r\n      background-color: #1F2937; /* bg-gray-800 */\r\n      margin-bottom: 0.5rem;\r\n    }\r\n    .dark-mode-calendar .react-calendar__navigation button {\r\n      color: #ffffff; /* Navigation arrows and labels to white */\r\n      background: none;\r\n      font-size: 1.25rem; /* Increase navigation button font size */\r\n    }\r\n    .dark-mode-calendar .react-calendar__navigation button:hover,\r\n    .dark-mode-calendar .react-calendar__navigation button:focus {\r\n      background: #374151; /* bg-gray-700 on hover/focus */\r\n    }\r\n    .dark-mode-calendar .react-calendar__month-view__weekdays__weekday {\r\n      color: #ffffff; /* Days of the week to white */\r\n      font-size: 1.1rem; /* Increase weekday label font size */\r\n    }\r\n    .dark-mode-calendar .react-calendar__month-view__days__day {\r\n      color: #ffffff; /* Current month's dates to white */\r\n      font-size: 1.1rem; /* Increase date font size */\r\n    }\r\n    .dark-mode-calendar .react-calendar__month-view__days__day--weekend {\r\n      color: #d10000; /* Match the default red shade used in other themes */\r\n    }\r\n    .dark-mode-calendar .react-calendar__month-view__days__day--neighboringMonth {\r\n      color: #9CA3AF; /* Gray-400 for previous/next month dates (default) */\r\n    }\r\n    .dark-mode-calendar .react-calendar__tile--active,\r\n    .dark-mode-calendar .react-calendar__tile--active:hover,\r\n    .dark-mode-calendar .react-calendar__tile--hasActive {\r\n      background: ${getThemeGradient(\"selected\")} !important;\r\n      color: #ffffff !important;\r\n    }\r\n    .dark-mode-calendar .react-calendar__tile:hover {\r\n      background: #374151; /* bg-gray-700 on hover */\r\n    }\r\n    .react-calendar {\r\n      width: 100%; /* Ensure calendar takes full width of its container */\r\n    }\r\n    .react-calendar__tile {\r\n      position: relative;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      height: 48px; /* Increase tile height for larger size */\r\n      font-size: 1.1rem; /* Increase tile font size */\r\n    }\r\n    .task-dot {\r\n      position: absolute;\r\n      bottom: 2px;\r\n      width: 10px; /* Slightly increase dot size for proportionality */\r\n      height: 10px;\r\n      border-radius: 50%;\r\n      ${currentTheme === \"Dark Mode\" ? \"background-color: #6366F1;\" : \"\"}\r\n      ${currentTheme === \"Ocean Breeze\" ? \"background-color: #14B8A6;\" : \"\"}\r\n      ${currentTheme === \"Sunset Glow\" ? \"background-color: #F97316;\" : \"\"}\r\n      ${currentTheme === \"Forest Whisper\" ? \"background-color: #10B981;\" : \"\"}\r\n      ${currentTheme === \"Light Mode\" ? \"background-color: #4F46E5;\" : \"\"}\r\n    }\r\n    .react-calendar__tile--now {\r\n      background: ${getThemeGradient(\"current\")} !important;\r\n      color: ${currentTheme === \"Dark Mode\" ? \"#ffffff\" : \"#000000\"} !important;\r\n    }\r\n    .dark-mode-calendar .react-calendar__tile--now {\r\n      background: ${getThemeGradient(\"current\")} !important;\r\n      color: #ffffff !important;\r\n    }\r\n    .react-calendar__tile--active,\r\n    .react-calendar__tile--active:hover,\r\n    .react-calendar__tile--hasActive {\r\n      background: ${getThemeGradient(\"selected\")} !important;\r\n      color: #ffffff !important;\r\n    }\r\n    .react-calendar__tile:hover {\r\n      background: ${\r\n        currentTheme === \"Dark Mode\"\r\n          ? \"#374151\"\r\n          : currentTheme === \"Ocean Breeze\"\r\n            ? \"#E5F6F5\"\r\n            : currentTheme === \"Sunset Glow\"\r\n              ? \"#FEF3E8\"\r\n              : currentTheme === \"Forest Whisper\"\r\n                ? \"#E8F8EF\"\r\n                : \"#E8F0FE\"\r\n      }; /* Light hover effect matching each theme */\r\n    }\r\n    .react-calendar__tile--now:hover {\r\n      background: ${getThemeGradient(\"current\")} !important;\r\n      filter: brightness(1.1); /* Slightly brighten on hover */\r\n    }\r\n    .dark-mode-calendar .react-calendar__tile--now:hover {\r\n      background: ${getThemeGradient(\"current\")} !important;\r\n      filter: brightness(1.1);\r\n    }\r\n    .react-calendar__navigation {\r\n      margin-bottom: 0.5rem;\r\n    }\r\n    .react-calendar__month-view__weekdays__weekday {\r\n      font-size: 1.1rem; /* Increase weekday label font size for all themes */\r\n    }\r\n    .react-calendar__month-view__days__day {\r\n      font-size: 1.1rem; /* Increase date font size for all themes */\r\n    }\r\n    .task-card:hover .calendar-icon {\r\n      transform: scale(1) !important; /* Prevent scaling on hover */\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <h2 className={`text-2xl font-bold ${styles.title}`}>Calendar</h2>\r\n      <div className=\"grid grid-cols-1 gap-6\">\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"max-w-xl w-full\">\r\n            <style>{calendarStyles}</style>\r\n            <Calendar\r\n              onChange={handleDateChange}\r\n              value={selectedDate}\r\n              className={`${styles.card} p-4 border-none ${\r\n                currentTheme === \"Dark Mode\" ? \"dark-mode-calendar\" : \"\"\r\n              }`}\r\n              tileContent={({ date }) => {\r\n                const dateString = getLocalDateString(date);\r\n                const hasTasks = tasks.some(\r\n                  (task) =>\r\n                    getLocalDateString(new Date(task.dueDate)) === dateString &&\r\n                    !task.completed\r\n                );\r\n                return hasTasks ? <div className=\"task-dot\"></div> : null;\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"md:col-span-3\">\r\n          <div className={`${styles.card} p-6`}>\r\n            <h3 className={`text-lg font-semibold mb-4 ${styles.subtitle}`}>\r\n              Tasks for{\" \"}\r\n              {selectedDate.toLocaleDateString(\"en-US\", {\r\n                weekday: \"long\",\r\n                year: \"numeric\",\r\n                month: \"long\",\r\n                day: \"numeric\",\r\n              })}\r\n            </h3>\r\n            {tasksForSelectedDate.length === 0 ? (\r\n              <div>\r\n                <p className={`py-4 text-center ${styles.noTasksText}`}>\r\n                  No incomplete tasks for this date.\r\n                </p>\r\n                <div className={`p-5 border-t ${styles.border}`}>\r\n                  <button\r\n                    onClick={() => setActiveTab(\"tasks\")}\r\n                    className={styles.buttonTertiary}\r\n                  >\r\n                    <PlusCircle className=\"w-5 h-5 mr-2\" />\r\n                    Add New Task\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"space-y-4\">\r\n                {tasksForSelectedDate.map((task) => (\r\n                  <div\r\n                    key={task.id}\r\n                    className={`flex items-center justify-between p-4 transition-all duration-300 hover:shadow-md hover:scale-[1.02] ${styles.hoverCard} task-card`}\r\n                  >\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      <button\r\n                        onClick={() => toggleTaskComplete(task.id)}\r\n                        className={`p-1 rounded-full transition-all duration-200 ${\r\n                          task.completed\r\n                            ? styles.taskComplete\r\n                            : styles.taskIncomplete\r\n                        }`}\r\n                      >\r\n                        <CheckCircle\r\n                          className={`w-5 h-5 ${\r\n                            task.completed ? \"fill-current\" : \"\"\r\n                          }`}\r\n                        />\r\n                      </button>\r\n                      <div>\r\n                        <div className=\"flex items-center space-x-2\">\r\n                          <h3\r\n                            className={`text-base font-semibold ${styles.text}`}\r\n                          >\r\n                            {task.title}\r\n                          </h3>\r\n                          <span\r\n                            className={`px-2 py-0.5 rounded-full text-xs font-medium ${\r\n                              task.priority === \"High\"\r\n                                ? styles.isDarkMode\r\n                                  ? \"bg-red-600 text-white\"\r\n                                  : \"bg-red-500 text-white\"\r\n                                : task.priority === \"Medium\"\r\n                                  ? styles.isDarkMode\r\n                                    ? \"bg-orange-600 text-white\"\r\n                                    : \"bg-orange-500 text-white\"\r\n                                  : styles.isDarkMode\r\n                                    ? \"bg-green-600 text-white\"\r\n                                    : \"bg-green-500 text-white\"\r\n                            }`}\r\n                          >\r\n                            {task.priority}\r\n                          </span>\r\n                        </div>\r\n                        <p\r\n                          className={`text-sm flex items-center space-x-1 ${styles.secondaryText}`}\r\n                        >\r\n                          <CalendarIcon\r\n                            className={`${styles.smallIcon} calendar-icon`}\r\n                          />\r\n                          <span>Due: {task.dueDate}</span>\r\n                          <span className=\"ml-2\">Hours: {task.hours || 0}</span>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}