{"ast":null,"code":"var _jsxFileName = \"D:\\\\StudBud\\\\frontend\\\\src\\\\components\\\\taskmanager\\\\AddTaskForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport { PlusCircle } from \"lucide-react\";\nimport { toast } from \"react-toastify\";\nimport { getCardStyles } from \"../utils/themeUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddTaskForm({\n  addTask,\n  currentTheme\n}) {\n  _s();\n  const styles = getCardStyles(currentTheme);\n  const [newTask, setNewTask] = React.useState({\n    title: \"\",\n    dueDate: \"\",\n    priority: \"Medium\",\n    completed: false,\n    hours: \"\"\n  });\n  const [lastAttemptedDate, setLastAttemptedDate] = React.useState(\"\"); // Track the last attempted date input\n\n  const titleInputRef = useRef(null);\n  const dueDateInputRef = useRef(null);\n  const prioritySelectRef = useRef(null);\n  const hoursInputRef = useRef(null);\n  const addButtonRef = useRef(null);\n  const currentYear = new Date().getFullYear();\n  const validateDate = (dateStr, inputValidity, attemptedDate) => {\n    // Check if the date is missing\n    if (!dateStr) {\n      if (inputValidity.valueMissing) {\n        return {\n          isValid: false,\n          error: \"Date is required.\"\n        };\n      }\n      // If dateStr is empty but valueMissing is false, itâ€™s likely an invalid date\n      if (attemptedDate) {\n        const [year, month, day] = attemptedDate.split(\"-\").map(Number);\n        const parsedDate = new Date(year, month - 1, day); // month is 0-based in JS\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        // Check if the date rolls over or is invalid\n        if (isNaN(parsedDate.getTime()) || parsedDate.getFullYear() !== year || parsedDate.getMonth() + 1 !== month || parsedDate.getDate() !== day) {\n          return {\n            isValid: false,\n            error: `Please enter a valid date (e.g., YYYY-MM-DD). ${monthNames[month - 1]} ${day} is not a valid date.`\n          };\n        }\n      }\n      return {\n        isValid: false,\n        error: \"Please enter a valid date (e.g., YYYY-MM-DD).\"\n      };\n    }\n    const date = new Date(dateStr);\n    if (isNaN(date.getTime())) {\n      return {\n        isValid: false,\n        error: \"Please enter a valid date (e.g., YYYY-MM-DD).\"\n      };\n    }\n    return {\n      isValid: true\n    };\n  };\n  const handleAddTask = () => {\n    // Validate required fields (excluding dueDate for now)\n    if (!newTask.title || !newTask.hours) {\n      toast.error(\"Please fill in all required fields (title and hours).\");\n      return;\n    }\n\n    // Validate due date using the input's validity state\n    const inputValidity = dueDateInputRef.current.validity;\n    const dateValidation = validateDate(newTask.dueDate, inputValidity, lastAttemptedDate);\n    if (!dateValidation.isValid) {\n      toast.error(dateValidation.error);\n      return;\n    }\n    const parsedHours = parseFloat(newTask.hours);\n    if (isNaN(parsedHours) || parsedHours < 0) {\n      toast.error(\"Please enter a valid number of hours (0 or greater).\");\n      return;\n    }\n    addTask({\n      ...newTask,\n      hours: parsedHours\n    });\n    setNewTask({\n      title: \"\",\n      dueDate: \"\",\n      priority: \"Medium\",\n      completed: false,\n      hours: \"\"\n    });\n    setLastAttemptedDate(\"\"); // Reset last attempted date\n    titleInputRef.current.focus();\n  };\n  const validateAndCorrectYear = dateValue => {\n    if (!dateValue) return;\n    const [year, month, day] = dateValue.split(\"-\");\n    if (parseInt(year) !== currentYear) {\n      const correctedDate = `${currentYear}-${month}-${day}`;\n      setNewTask(prev => ({\n        ...prev,\n        dueDate: correctedDate\n      }));\n      setLastAttemptedDate(correctedDate);\n      toast.info(`Year corrected to ${currentYear}, the current year.`);\n    }\n  };\n  const handleAddTaskKeyPress = (e, nextRef) => {\n    if (e.key === \"Enter\") {\n      e.preventDefault();\n      if (nextRef.current) {\n        nextRef.current.focus();\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.formSection,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap md:flex-nowrap gap-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task title\",\n        className: `flex-grow ${styles.input}`,\n        value: newTask.title,\n        onChange: e => setNewTask({\n          ...newTask,\n          title: e.target.value\n        }),\n        onKeyDown: e => handleAddTaskKeyPress(e, dueDateInputRef),\n        ref: titleInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        className: styles.input,\n        value: newTask.dueDate,\n        onChange: e => {\n          const newDate = e.target.value;\n          setNewTask({\n            ...newTask,\n            dueDate: newDate\n          });\n          setLastAttemptedDate(newDate); // Track the attempted date\n          validateAndCorrectYear(newDate);\n        },\n        onKeyDown: e => handleAddTaskKeyPress(e, prioritySelectRef),\n        ref: dueDateInputRef,\n        min: `${currentYear}-01-01`,\n        max: `${currentYear}-12-31`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: styles.input,\n        value: newTask.priority,\n        onChange: e => setNewTask({\n          ...newTask,\n          priority: e.target.value\n        }),\n        onKeyDown: e => handleAddTaskKeyPress(e, hoursInputRef),\n        ref: prioritySelectRef,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Low\",\n          children: \"Low Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Medium\",\n          children: \"Medium Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"High\",\n          children: \"High Priority\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Hours\",\n        className: styles.input,\n        value: newTask.hours,\n        onChange: e => setNewTask({\n          ...newTask,\n          hours: e.target.value\n        }),\n        onKeyDown: e => handleAddTaskKeyPress(e, addButtonRef),\n        ref: hoursInputRef,\n        min: \"0\",\n        step: \"0.1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `px-4 py-2 ${styles.buttonPrimary}`,\n        onClick: handleAddTask,\n        onKeyDown: e => {\n          if (e.key === \"Enter\") {\n            e.preventDefault();\n            handleAddTask();\n          }\n        },\n        ref: addButtonRef,\n        children: [/*#__PURE__*/_jsxDEV(PlusCircle, {\n          className: \"w-4 h-4 mr-1 inline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), \" Add Task\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n_s(AddTaskForm, \"/yO2o73oN8d0XgYyYW6Pm5DFNus=\");\n_c = AddTaskForm;\nexport default AddTaskForm;\nvar _c;\n$RefreshReg$(_c, \"AddTaskForm\");","map":{"version":3,"names":["React","useRef","PlusCircle","toast","getCardStyles","jsxDEV","_jsxDEV","AddTaskForm","addTask","currentTheme","_s","styles","newTask","setNewTask","useState","title","dueDate","priority","completed","hours","lastAttemptedDate","setLastAttemptedDate","titleInputRef","dueDateInputRef","prioritySelectRef","hoursInputRef","addButtonRef","currentYear","Date","getFullYear","validateDate","dateStr","inputValidity","attemptedDate","valueMissing","isValid","error","year","month","day","split","map","Number","parsedDate","monthNames","isNaN","getTime","getMonth","getDate","date","handleAddTask","current","validity","dateValidation","parsedHours","parseFloat","focus","validateAndCorrectYear","dateValue","parseInt","correctedDate","prev","info","handleAddTaskKeyPress","e","nextRef","key","preventDefault","className","formSection","children","type","placeholder","input","value","onChange","target","onKeyDown","ref","fileName","_jsxFileName","lineNumber","columnNumber","newDate","min","max","step","buttonPrimary","onClick","_c","$RefreshReg$"],"sources":["D:/StudBud/frontend/src/components/taskmanager/AddTaskForm.jsx"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport { PlusCircle } from \"lucide-react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getCardStyles } from \"../utils/themeUtils\";\r\n\r\nfunction AddTaskForm({ addTask, currentTheme }) {\r\n  const styles = getCardStyles(currentTheme);\r\n  const [newTask, setNewTask] = React.useState({\r\n    title: \"\",\r\n    dueDate: \"\",\r\n    priority: \"Medium\",\r\n    completed: false,\r\n    hours: \"\",\r\n  });\r\n  const [lastAttemptedDate, setLastAttemptedDate] = React.useState(\"\"); // Track the last attempted date input\r\n\r\n  const titleInputRef = useRef(null);\r\n  const dueDateInputRef = useRef(null);\r\n  const prioritySelectRef = useRef(null);\r\n  const hoursInputRef = useRef(null);\r\n  const addButtonRef = useRef(null);\r\n\r\n  const currentYear = new Date().getFullYear();\r\n\r\n  const validateDate = (dateStr, inputValidity, attemptedDate) => {\r\n    // Check if the date is missing\r\n    if (!dateStr) {\r\n      if (inputValidity.valueMissing) {\r\n        return { isValid: false, error: \"Date is required.\" };\r\n      }\r\n      // If dateStr is empty but valueMissing is false, itâ€™s likely an invalid date\r\n      if (attemptedDate) {\r\n        const [year, month, day] = attemptedDate.split(\"-\").map(Number);\r\n        const parsedDate = new Date(year, month - 1, day); // month is 0-based in JS\r\n        const monthNames = [\r\n          \"January\",\r\n          \"February\",\r\n          \"March\",\r\n          \"April\",\r\n          \"May\",\r\n          \"June\",\r\n          \"July\",\r\n          \"August\",\r\n          \"September\",\r\n          \"October\",\r\n          \"November\",\r\n          \"December\",\r\n        ];\r\n        // Check if the date rolls over or is invalid\r\n        if (\r\n          isNaN(parsedDate.getTime()) ||\r\n          parsedDate.getFullYear() !== year ||\r\n          parsedDate.getMonth() + 1 !== month ||\r\n          parsedDate.getDate() !== day\r\n        ) {\r\n          return {\r\n            isValid: false,\r\n            error: `Please enter a valid date (e.g., YYYY-MM-DD). ${monthNames[month - 1]} ${day} is not a valid date.`,\r\n          };\r\n        }\r\n      }\r\n      return {\r\n        isValid: false,\r\n        error: \"Please enter a valid date (e.g., YYYY-MM-DD).\",\r\n      };\r\n    }\r\n\r\n    const date = new Date(dateStr);\r\n    if (isNaN(date.getTime())) {\r\n      return {\r\n        isValid: false,\r\n        error: \"Please enter a valid date (e.g., YYYY-MM-DD).\",\r\n      };\r\n    }\r\n\r\n    return { isValid: true };\r\n  };\r\n\r\n  const handleAddTask = () => {\r\n    // Validate required fields (excluding dueDate for now)\r\n    if (!newTask.title || !newTask.hours) {\r\n      toast.error(\"Please fill in all required fields (title and hours).\");\r\n      return;\r\n    }\r\n\r\n    // Validate due date using the input's validity state\r\n    const inputValidity = dueDateInputRef.current.validity;\r\n    const dateValidation = validateDate(\r\n      newTask.dueDate,\r\n      inputValidity,\r\n      lastAttemptedDate\r\n    );\r\n    if (!dateValidation.isValid) {\r\n      toast.error(dateValidation.error);\r\n      return;\r\n    }\r\n\r\n    const parsedHours = parseFloat(newTask.hours);\r\n    if (isNaN(parsedHours) || parsedHours < 0) {\r\n      toast.error(\"Please enter a valid number of hours (0 or greater).\");\r\n      return;\r\n    }\r\n\r\n    addTask({ ...newTask, hours: parsedHours });\r\n    setNewTask({\r\n      title: \"\",\r\n      dueDate: \"\",\r\n      priority: \"Medium\",\r\n      completed: false,\r\n      hours: \"\",\r\n    });\r\n    setLastAttemptedDate(\"\"); // Reset last attempted date\r\n    titleInputRef.current.focus();\r\n  };\r\n\r\n  const validateAndCorrectYear = (dateValue) => {\r\n    if (!dateValue) return;\r\n    const [year, month, day] = dateValue.split(\"-\");\r\n    if (parseInt(year) !== currentYear) {\r\n      const correctedDate = `${currentYear}-${month}-${day}`;\r\n      setNewTask((prev) => ({ ...prev, dueDate: correctedDate }));\r\n      setLastAttemptedDate(correctedDate);\r\n      toast.info(`Year corrected to ${currentYear}, the current year.`);\r\n    }\r\n  };\r\n\r\n  const handleAddTaskKeyPress = (e, nextRef) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      if (nextRef.current) {\r\n        nextRef.current.focus();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.formSection}>\r\n      <div className=\"flex flex-wrap md:flex-nowrap gap-3\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Task title\"\r\n          className={`flex-grow ${styles.input}`}\r\n          value={newTask.title}\r\n          onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\r\n          onKeyDown={(e) => handleAddTaskKeyPress(e, dueDateInputRef)}\r\n          ref={titleInputRef}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          className={styles.input}\r\n          value={newTask.dueDate}\r\n          onChange={(e) => {\r\n            const newDate = e.target.value;\r\n            setNewTask({ ...newTask, dueDate: newDate });\r\n            setLastAttemptedDate(newDate); // Track the attempted date\r\n            validateAndCorrectYear(newDate);\r\n          }}\r\n          onKeyDown={(e) => handleAddTaskKeyPress(e, prioritySelectRef)}\r\n          ref={dueDateInputRef}\r\n          min={`${currentYear}-01-01`}\r\n          max={`${currentYear}-12-31`}\r\n        />\r\n        <select\r\n          className={styles.input}\r\n          value={newTask.priority}\r\n          onChange={(e) => setNewTask({ ...newTask, priority: e.target.value })}\r\n          onKeyDown={(e) => handleAddTaskKeyPress(e, hoursInputRef)}\r\n          ref={prioritySelectRef}\r\n        >\r\n          <option value=\"Low\">Low Priority</option>\r\n          <option value=\"Medium\">Medium Priority</option>\r\n          <option value=\"High\">High Priority</option>\r\n        </select>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Hours\"\r\n          className={styles.input}\r\n          value={newTask.hours}\r\n          onChange={(e) => setNewTask({ ...newTask, hours: e.target.value })}\r\n          onKeyDown={(e) => handleAddTaskKeyPress(e, addButtonRef)}\r\n          ref={hoursInputRef}\r\n          min=\"0\"\r\n          step=\"0.1\"\r\n        />\r\n        <button\r\n          className={`px-4 py-2 ${styles.buttonPrimary}`}\r\n          onClick={handleAddTask}\r\n          onKeyDown={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              e.preventDefault();\r\n              handleAddTask();\r\n            }\r\n          }}\r\n          ref={addButtonRef}\r\n        >\r\n          <PlusCircle className=\"w-4 h-4 mr-1 inline\" /> Add Task\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}