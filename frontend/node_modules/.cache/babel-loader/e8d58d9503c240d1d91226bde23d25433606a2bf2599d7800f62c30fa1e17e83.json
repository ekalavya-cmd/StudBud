{"ast":null,"code":"var _jsxFileName = \"D:\\\\StudBud\\\\frontend\\\\src\\\\components\\\\analytics\\\\ProductivitySnapshot.jsx\";\nimport React from \"react\";\nimport { getCardStyles } from \"../utils/themeUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductivitySnapshot({\n  tasks,\n  past7Days,\n  currentTheme\n}) {\n  const styles = getCardStyles(currentTheme);\n  const nonDeletedTasks = tasks.filter(task => !task.deleted);\n\n  // Ensure todayStr is in IST\n  const today = new Date();\n  const todayStr = today.toLocaleDateString(\"en-CA\", {\n    timeZone: \"Asia/Kolkata\"\n  }); // \"2025-06-12\"\n\n  const overdueTasks = nonDeletedTasks.filter(task => !task.completed && task.dueDate && task.dueDate < todayStr);\n  const incompleteHighPriorityTasks = nonDeletedTasks.filter(task => !task.completed && task.priority === \"High\").length;\n\n  // Map day abbreviations to full day names\n  const dayMap = {\n    S: \"Sunday\",\n    M: \"Monday\",\n    T: \"Tuesday\",\n    W: \"Wednesday\",\n    F: \"Friday\"\n  };\n\n  // Calculate completed tasks and total hours per day\n  const completedTasksByDay = past7Days.map(dayObj => {\n    const completedTasksOnDay = nonDeletedTasks.filter(task => task.completed && task.completedDate === dayObj.date);\n    const count = completedTasksOnDay.length;\n    const hours = completedTasksOnDay.reduce((sum, task) => sum + (task.hours || 0), 0);\n    return {\n      day: dayMap[dayObj.day] || \"Thursday\",\n      // Handle \"T\" for both Tuesday and Thursday\n      date: dayObj.date,\n      count,\n      hours\n    };\n  });\n\n  // Find the most productive day(s) by task count, then by hours\n  const maxTasks = Math.max(...completedTasksByDay.map(day => day.count));\n  const daysWithMaxTasks = completedTasksByDay.filter(day => day.count === maxTasks);\n  let mostProductiveDays;\n  if (daysWithMaxTasks.length === 1) {\n    mostProductiveDays = daysWithMaxTasks;\n  } else {\n    // If multiple days have the same task count, compare hours\n    const maxHours = Math.max(...daysWithMaxTasks.map(day => day.hours));\n    mostProductiveDays = daysWithMaxTasks.filter(day => day.hours === maxHours);\n  }\n\n  // Format the insight message\n  let mostProductiveInsight;\n  if (maxTasks === 0) {\n    mostProductiveInsight = \"You're just getting started—complete your first task today to build your streak!\";\n  } else {\n    const dayNames = mostProductiveDays.length === 1 ? mostProductiveDays[0].day : mostProductiveDays.map(day => day.day).join(\" and \").replace(/, (?=[^,]*$)/, \" and \"); // Replace last comma with \"and\"\n    const dates = mostProductiveDays.length === 1 ? mostProductiveDays[0].date : mostProductiveDays.map(day => day.date).join(\" and \").replace(/, (?=[^,]*$)/, \" and \");\n    mostProductiveInsight = `You're most productive on ${dayNames}, with ${maxTasks} task${maxTasks !== 1 ? \"s\" : \"\"} completed on ${dates}.`;\n  }\n  const overdueInsight = overdueTasks.length > 0 ? `You have ${overdueTasks.length} overdue task${overdueTasks.length !== 1 ? \"s\" : \"\"}. Focus on completing these to stay on track!` : \"Great job! You have no overdue tasks.\";\n  const priorityInsight = incompleteHighPriorityTasks > 0 ? `You have ${incompleteHighPriorityTasks} incomplete high-priority task${incompleteHighPriorityTasks !== 1 ? \"s\" : \"\"}. Prioritize these to maximize your productivity.` : \"No high-priority tasks pending. Keep up the good work!\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.snapshotCard,\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: `text-lg font-semibold mb-4 tracking-tight ${styles.text}`,\n      children: \"Productivity Snapshot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-3 text-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex items-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-5 h-5 rounded-full bg-green-500 mt-1 mr-3 shadow-sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `leading-relaxed ${styles.mutedText}`,\n          children: mostProductiveInsight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex items-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-5 h-5 rounded-full bg-yellow-500 mt-1 mr-3 shadow-sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `leading-relaxed ${styles.mutedText}`,\n          children: overdueInsight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex items-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-5 h-5 rounded-full bg-blue-500 mt-1 mr-3 shadow-sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `leading-relaxed ${styles.mutedText}`,\n          children: priorityInsight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_c = ProductivitySnapshot;\nexport default ProductivitySnapshot;\nvar _c;\n$RefreshReg$(_c, \"ProductivitySnapshot\");","map":{"version":3,"names":["React","getCardStyles","jsxDEV","_jsxDEV","ProductivitySnapshot","tasks","past7Days","currentTheme","styles","nonDeletedTasks","filter","task","deleted","today","Date","todayStr","toLocaleDateString","timeZone","overdueTasks","completed","dueDate","incompleteHighPriorityTasks","priority","length","dayMap","S","M","T","W","F","completedTasksByDay","map","dayObj","completedTasksOnDay","completedDate","date","count","hours","reduce","sum","day","maxTasks","Math","max","daysWithMaxTasks","mostProductiveDays","maxHours","mostProductiveInsight","dayNames","join","replace","dates","overdueInsight","priorityInsight","className","snapshotCard","children","text","fileName","_jsxFileName","lineNumber","columnNumber","mutedText","_c","$RefreshReg$"],"sources":["D:/StudBud/frontend/src/components/analytics/ProductivitySnapshot.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { getCardStyles } from \"../utils/themeUtils\";\r\n\r\nfunction ProductivitySnapshot({ tasks, past7Days, currentTheme }) {\r\n  const styles = getCardStyles(currentTheme);\r\n\r\n  const nonDeletedTasks = tasks.filter((task) => !task.deleted);\r\n\r\n  // Ensure todayStr is in IST\r\n  const today = new Date();\r\n  const todayStr = today.toLocaleDateString(\"en-CA\", {\r\n    timeZone: \"Asia/Kolkata\",\r\n  }); // \"2025-06-12\"\r\n\r\n  const overdueTasks = nonDeletedTasks.filter(\r\n    (task) => !task.completed && task.dueDate && task.dueDate < todayStr\r\n  );\r\n  const incompleteHighPriorityTasks = nonDeletedTasks.filter(\r\n    (task) => !task.completed && task.priority === \"High\"\r\n  ).length;\r\n\r\n  // Map day abbreviations to full day names\r\n  const dayMap = {\r\n    S: \"Sunday\",\r\n    M: \"Monday\",\r\n    T: \"Tuesday\",\r\n    W: \"Wednesday\",\r\n    F: \"Friday\",\r\n  };\r\n\r\n  // Calculate completed tasks and total hours per day\r\n  const completedTasksByDay = past7Days.map((dayObj) => {\r\n    const completedTasksOnDay = nonDeletedTasks.filter(\r\n      (task) => task.completed && task.completedDate === dayObj.date\r\n    );\r\n    const count = completedTasksOnDay.length;\r\n    const hours = completedTasksOnDay.reduce(\r\n      (sum, task) => sum + (task.hours || 0),\r\n      0\r\n    );\r\n    return {\r\n      day: dayMap[dayObj.day] || \"Thursday\", // Handle \"T\" for both Tuesday and Thursday\r\n      date: dayObj.date,\r\n      count,\r\n      hours,\r\n    };\r\n  });\r\n\r\n  // Find the most productive day(s) by task count, then by hours\r\n  const maxTasks = Math.max(...completedTasksByDay.map((day) => day.count));\r\n  const daysWithMaxTasks = completedTasksByDay.filter(\r\n    (day) => day.count === maxTasks\r\n  );\r\n\r\n  let mostProductiveDays;\r\n  if (daysWithMaxTasks.length === 1) {\r\n    mostProductiveDays = daysWithMaxTasks;\r\n  } else {\r\n    // If multiple days have the same task count, compare hours\r\n    const maxHours = Math.max(...daysWithMaxTasks.map((day) => day.hours));\r\n    mostProductiveDays = daysWithMaxTasks.filter(\r\n      (day) => day.hours === maxHours\r\n    );\r\n  }\r\n\r\n  // Format the insight message\r\n  let mostProductiveInsight;\r\n  if (maxTasks === 0) {\r\n    mostProductiveInsight =\r\n      \"You're just getting started—complete your first task today to build your streak!\";\r\n  } else {\r\n    const dayNames =\r\n      mostProductiveDays.length === 1\r\n        ? mostProductiveDays[0].day\r\n        : mostProductiveDays\r\n            .map((day) => day.day)\r\n            .join(\" and \")\r\n            .replace(/, (?=[^,]*$)/, \" and \"); // Replace last comma with \"and\"\r\n    const dates =\r\n      mostProductiveDays.length === 1\r\n        ? mostProductiveDays[0].date\r\n        : mostProductiveDays\r\n            .map((day) => day.date)\r\n            .join(\" and \")\r\n            .replace(/, (?=[^,]*$)/, \" and \");\r\n    mostProductiveInsight = `You're most productive on ${dayNames}, with ${maxTasks} task${\r\n      maxTasks !== 1 ? \"s\" : \"\"\r\n    } completed on ${dates}.`;\r\n  }\r\n\r\n  const overdueInsight =\r\n    overdueTasks.length > 0\r\n      ? `You have ${overdueTasks.length} overdue task${\r\n          overdueTasks.length !== 1 ? \"s\" : \"\"\r\n        }. Focus on completing these to stay on track!`\r\n      : \"Great job! You have no overdue tasks.\";\r\n  const priorityInsight =\r\n    incompleteHighPriorityTasks > 0\r\n      ? `You have ${incompleteHighPriorityTasks} incomplete high-priority task${\r\n          incompleteHighPriorityTasks !== 1 ? \"s\" : \"\"\r\n        }. Prioritize these to maximize your productivity.`\r\n      : \"No high-priority tasks pending. Keep up the good work!\";\r\n\r\n  return (\r\n    <div className={styles.snapshotCard}>\r\n      <h4\r\n        className={`text-lg font-semibold mb-4 tracking-tight ${styles.text}`}\r\n      >\r\n        Productivity Snapshot\r\n      </h4>\r\n      <ul className=\"space-y-3 text-sm\">\r\n        <li className=\"flex items-start\">\r\n          <div className=\"w-5 h-5 rounded-full bg-green-500 mt-1 mr-3 shadow-sm\"></div>\r\n          <p className={`leading-relaxed ${styles.mutedText}`}>\r\n            {mostProductiveInsight}\r\n          </p>\r\n        </li>\r\n        <li className=\"flex items-start\">\r\n          <div className=\"w-5 h-5 rounded-full bg-yellow-500 mt-1 mr-3 shadow-sm\"></div>\r\n          <p className={`leading-relaxed ${styles.mutedText}`}>\r\n            {overdueInsight}\r\n          </p>\r\n        </li>\r\n        <li className=\"flex items-start\">\r\n          <div className=\"w-5 h-5 rounded-full bg-blue-500 mt-1 mr-3 shadow-sm\"></div>\r\n          <p className={`leading-relaxed ${styles.mutedText}`}>\r\n            {priorityInsight}\r\n          </p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductivitySnapshot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}