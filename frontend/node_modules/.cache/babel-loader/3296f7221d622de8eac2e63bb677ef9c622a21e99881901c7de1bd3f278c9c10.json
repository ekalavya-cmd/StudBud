{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final Project\\\\study-buddy-planner\\\\src\\\\components\\\\Layout.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BookOpen } from \"lucide-react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSun, faMoon, faWater, faFire, faLeaf } from \"@fortawesome/free-solid-svg-icons\";\nimport Dashboard from \"./Dashboard\";\nimport TaskManager from \"./TaskManager\";\nimport Analytics from \"./Analytics\";\nimport Rewards from \"./Rewards\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Layout() {\n  _s();\n  const [activeTab, setActiveTab] = useState(\"dashboard\");\n  const [tasks, setTasks] = useState([]);\n  const [studyStats, setStudyStats] = useState({\n    totalHours: 0,\n    completedTasks: 0,\n    streak: 0,\n    lastActiveDate: null,\n    lastStreakUpdate: null,\n    studyHoursLog: []\n  });\n  const [aiSuggestion, setAiSuggestion] = useState(\"\");\n  const [points, setPoints] = useState(0);\n  const [badges, setBadges] = useState([]);\n  const [currentTheme, setCurrentTheme] = useState(\"Light Mode\");\n  const [unlockedThemes, setUnlockedThemes] = useState([\"Light Mode\"]);\n  const [loading, setLoading] = useState(true);\n  const userId = \"user123\";\n\n  // Helper function to format the local date as YYYY-MM-DD\n  const getLocalDateString = date => {\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, \"0\"); // getMonth() is 0-based\n    const day = String(date.getDate()).padStart(2, \"0\");\n    return `${year}-${month}-${day}`;\n  };\n\n  // Theme styles for all themes\n  const themeStyles = {\n    \"Light Mode\": \"bg-gray-100 text-gray-900\",\n    \"Dark Mode\": \"bg-gray-900 text-gray-100\",\n    \"Ocean Breeze\": \"bg-gradient-to-br from-blue-50 to-teal-100 text-blue-900\",\n    \"Sunset Glow\": \"bg-gradient-to-br from-orange-50 to-pink-100 text-orange-900 backdrop-blur-sm\",\n    \"Forest Whisper\": \"bg-gradient-to-br from-green-50 to-emerald-100 text-green-900 backdrop-blur-sm\"\n  };\n  const headerStyles = {\n    \"Light Mode\": \"bg-indigo-600 text-white shadow-lg\",\n    \"Dark Mode\": \"bg-indigo-900 text-gray-100 shadow-lg\",\n    \"Ocean Breeze\": \"bg-gradient-to-r from-blue-600 to-teal-600 text-white shadow-lg\",\n    \"Sunset Glow\": \"bg-gradient-to-r from-orange-600 to-pink-600 text-white shadow-lg\",\n    \"Forest Whisper\": \"bg-gradient-to-r from-green-600 to-teal-600 text-white shadow-lg\"\n  };\n  const navStyles = {\n    \"Light Mode\": \"bg-white text-gray-600 border-b border-gray-200\",\n    \"Dark Mode\": \"bg-gray-800 text-gray-300 border-b border-gray-700\",\n    \"Ocean Breeze\": \"bg-blue-100 text-blue-800 border-b border-teal-300\",\n    \"Sunset Glow\": \"bg-orange-50 text-orange-800 border-b border-orange-300\",\n    \"Forest Whisper\": \"bg-green-50 text-green-800 border-b border-green-300\"\n  };\n\n  // Map themes to their FontAwesome icons\n  const themeIcons = {\n    \"Light Mode\": faSun,\n    \"Dark Mode\": faMoon,\n    \"Ocean Breeze\": faWater,\n    \"Sunset Glow\": faFire,\n    \"Forest Whisper\": faLeaf\n  };\n  const getNextTheme = () => {\n    if (unlockedThemes.length === 1) {\n      return \"Light Mode\";\n    }\n    const currentIndex = unlockedThemes.indexOf(currentTheme);\n    const nextIndex = (currentIndex + 1) % unlockedThemes.length;\n    return unlockedThemes[nextIndex];\n  };\n  const handleThemeChange = () => {\n    const nextTheme = getNextTheme();\n    setCurrentTheme(nextTheme);\n    toast.info(`🎨 Switched to ${nextTheme}!`);\n  };\n  const handlePointsUpdate = newPoints => {\n    setPoints(newPoints);\n  };\n  const handleThemeUnlock = themeName => {\n    if (!unlockedThemes.includes(themeName)) {\n      setUnlockedThemes([...unlockedThemes, themeName]);\n    }\n  };\n  const updateStreak = today => {\n    setStudyStats(prev => {\n      const lastActive = prev.lastActiveDate ? new Date(prev.lastActiveDate) : null;\n      const lastStreakUpdate = prev.lastStreakUpdate ? new Date(prev.lastStreakUpdate) : null;\n      const todayDate = new Date(today);\n      let newStreak = prev.streak;\n      let newLastActiveDate = today;\n      let newLastStreakUpdate = prev.lastStreakUpdate;\n      if (!lastActive || lastActive.toISOString().split(\"T\")[0] !== today) {\n        if (lastActive) {\n          const diffTime = todayDate - lastActive;\n          const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n          if (diffDays === 1) {\n            newStreak = prev.streak + 1;\n            newLastStreakUpdate = today;\n          } else if (diffDays > 1) {\n            newStreak = 1;\n            newLastStreakUpdate = today;\n          }\n        } else {\n          newStreak = 1;\n          newLastStreakUpdate = today;\n        }\n      }\n      if (lastStreakUpdate && new Date(lastStreakUpdate).toISOString().split(\"T\")[0] !== today) {\n        const diffTime = todayDate - new Date(lastStreakUpdate);\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        if (diffDays > 1) {\n          newStreak = 1;\n          newLastStreakUpdate = today;\n        }\n      }\n      const newStats = {\n        ...prev,\n        streak: newStreak,\n        lastActiveDate: newLastActiveDate,\n        lastStreakUpdate: newLastStreakUpdate,\n        studyHoursLog: prev.studyHoursLog || []\n      };\n      console.log(\"Updated studyStats (updateStreak):\", newStats);\n      return newStats;\n    });\n  };\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        var _data$studyStats, _data$studyStats2, _data$studyStats3, _data$studyStats4, _data$studyStats5, _data$studyStats6;\n        const response = await fetch(`http://localhost:5000/api/user/${userId}`);\n        if (!response.ok) {\n          throw new Error(`Failed to fetch user data: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log(\"Fetched data:\", data);\n\n        // Ensure tasks have pointsAwarded and hours properties\n        const fetchedTasks = (data.tasks || []).map(task => {\n          var _task$pointsAwarded, _task$hours;\n          return {\n            ...task,\n            pointsAwarded: (_task$pointsAwarded = task.pointsAwarded) !== null && _task$pointsAwarded !== void 0 ? _task$pointsAwarded : false,\n            hours: (_task$hours = task.hours) !== null && _task$hours !== void 0 ? _task$hours : 0 // Default to 0 if hours is not present\n          };\n        });\n        setTasks(fetchedTasks);\n        const fetchedStats = {\n          totalHours: ((_data$studyStats = data.studyStats) === null || _data$studyStats === void 0 ? void 0 : _data$studyStats.totalHours) || 0,\n          completedTasks: ((_data$studyStats2 = data.studyStats) === null || _data$studyStats2 === void 0 ? void 0 : _data$studyStats2.completedTasks) || 0,\n          streak: ((_data$studyStats3 = data.studyStats) === null || _data$studyStats3 === void 0 ? void 0 : _data$studyStats3.streak) || 0,\n          lastActiveDate: ((_data$studyStats4 = data.studyStats) === null || _data$studyStats4 === void 0 ? void 0 : _data$studyStats4.lastActiveDate) || null,\n          lastStreakUpdate: ((_data$studyStats5 = data.studyStats) === null || _data$studyStats5 === void 0 ? void 0 : _data$studyStats5.lastStreakUpdate) || null,\n          studyHoursLog: ((_data$studyStats6 = data.studyStats) === null || _data$studyStats6 === void 0 ? void 0 : _data$studyStats6.studyHoursLog) || []\n        };\n        console.log(\"Setting initial studyStats:\", fetchedStats);\n        setStudyStats(fetchedStats);\n        setPoints(data.points || 0);\n        setBadges(data.badges || []);\n        setCurrentTheme(data.currentTheme || \"Light Mode\");\n        setUnlockedThemes(data.unlockedThemes || [\"Light Mode\"]);\n        const today = getLocalDateString(new Date());\n        console.log(\"Today's date:\", today);\n        const {\n          lastActiveDate,\n          streak,\n          lastStreakUpdate\n        } = fetchedStats;\n        let newStats = {\n          ...fetchedStats\n        };\n        if (lastStreakUpdate !== today) {\n          if (!lastActiveDate) {\n            console.log(\"No lastActiveDate, initializing with today's date...\");\n            newStats = {\n              ...fetchedStats,\n              lastActiveDate: today,\n              lastStreakUpdate: today,\n              studyHoursLog: fetchedStats.studyHoursLog || []\n            };\n          } else {\n            const lastDate = new Date(lastActiveDate);\n            const currentDate = new Date(today);\n            const diffDays = (currentDate - lastDate) / (1000 * 60 * 60 * 24);\n            console.log(\"Days difference:\", diffDays);\n            if (diffDays === 1) {\n              newStats = {\n                ...fetchedStats,\n                streak: fetchedStats.streak + 1,\n                lastActiveDate: today,\n                lastStreakUpdate: today,\n                studyHoursLog: fetchedStats.studyHoursLog || []\n              };\n              console.log(\"Updated studyStats (increment streak):\", newStats);\n            } else if (diffDays > 1) {\n              newStats = {\n                ...fetchedStats,\n                streak: 0,\n                lastActiveDate: today,\n                lastStreakUpdate: today,\n                studyHoursLog: fetchedStats.studyHoursLog || []\n              };\n              console.log(\"Updated studyStats (reset streak):\", newStats);\n            } else {\n              newStats = {\n                ...fetchedStats,\n                lastStreakUpdate: today,\n                studyHoursLog: fetchedStats.studyHoursLog || []\n              };\n              console.log(\"Updated studyStats (same day):\", newStats);\n            }\n          }\n          setStudyStats(newStats);\n        } else {\n          console.log(\"Streak already updated today, skipping...\");\n        }\n        const lastFetchTimestamp = localStorage.getItem(\"lastFetchTimestamp\");\n        const currentTimestamp = Date.now();\n        localStorage.setItem(\"lastFetchTimestamp\", currentTimestamp.toString());\n        const lastActive = fetchedStats.lastActiveDate ? new Date(fetchedStats.lastActiveDate).getTime() : 0;\n        const timeSinceLastFetch = lastFetchTimestamp ? currentTimestamp - parseInt(lastFetchTimestamp) : Infinity;\n        const timeSinceLastActive = lastActive ? currentTimestamp - lastActive : Infinity;\n        setTimeout(() => {\n          const incompleteTasks = fetchedTasks.filter(task => !task.completed);\n          if (incompleteTasks.length === 0) {\n            setAiSuggestion(\"You have no incomplete tasks! Add a new task to keep progressing.\");\n            return;\n          }\n          const todayStr = getLocalDateString(new Date());\n          const priorityValue = {\n            High: 3,\n            Medium: 2,\n            Low: 1\n          };\n          const tasksDueToday = [];\n          const pastDueTasks = [];\n          const futureTasks = [];\n          incompleteTasks.forEach(task => {\n            const taskDueDateStr = task.dueDate;\n            const diffDays = (new Date(taskDueDateStr) - new Date(todayStr)) / (1000 * 60 * 60 * 24);\n            if (taskDueDateStr === todayStr) {\n              tasksDueToday.push(task);\n            } else if (diffDays < 0) {\n              pastDueTasks.push({\n                ...task,\n                dueDateDiff: Math.abs(diffDays)\n              });\n            } else {\n              futureTasks.push({\n                ...task,\n                dueDateDiff: diffDays\n              });\n            }\n          });\n          tasksDueToday.sort((a, b) => priorityValue[b.priority] - priorityValue[a.priority]);\n          pastDueTasks.sort((a, b) => {\n            if (a.dueDateDiff !== b.dueDateDiff) {\n              return a.dueDateDiff - b.dueDateDiff;\n            }\n            return priorityValue[b.priority] - priorityValue[a.priority];\n          });\n          futureTasks.sort((a, b) => {\n            if (a.dueDateDiff !== b.dueDateDiff) {\n              return a.dueDateDiff - b.dueDateDiff;\n            }\n            return priorityValue[b.priority] - priorityValue[a.priority];\n          });\n          let recommendedTask = null;\n          if (tasksDueToday.length > 0) {\n            recommendedTask = tasksDueToday[0];\n          } else if (pastDueTasks.length > 0) {\n            recommendedTask = pastDueTasks[0];\n          } else if (futureTasks.length > 0) {\n            recommendedTask = futureTasks[0];\n          }\n          if (recommendedTask) {\n            setAiSuggestion(`Based on your schedule and learning patterns, I recommend focusing on your \"${recommendedTask.title}\" today.`);\n          } else {\n            setAiSuggestion(\"You have no incomplete tasks! Add a new task to keep progressing.\");\n          }\n        }, 1000);\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error fetching user data:\", err);\n        toast.error(\"Failed to load user data. Please try again later.\");\n        setAiSuggestion(\"Add a new task to get started!\");\n        setLoading(false);\n      }\n    };\n    fetchUserData();\n  }, []);\n  useEffect(() => {\n    console.log(\"Current studyStats (after update):\", studyStats);\n  }, [studyStats]);\n  useEffect(() => {\n    const completedCount = tasks.filter(task => task.completed).length;\n    setStudyStats(prevStats => {\n      const newStats = {\n        ...prevStats,\n        completedTasks: completedCount,\n        studyHoursLog: prevStats.studyHoursLog || []\n      };\n      console.log(\"Updated studyStats (completedTasks):\", newStats);\n      return newStats;\n    });\n  }, [tasks]);\n  useEffect(() => {\n    const saveUserData = async () => {\n      try {\n        const serializedStudyStats = {\n          totalHours: studyStats.totalHours,\n          completedTasks: studyStats.completedTasks,\n          streak: studyStats.streak,\n          lastActiveDate: studyStats.lastActiveDate || null,\n          lastStreakUpdate: studyStats.lastStreakUpdate || null,\n          studyHoursLog: studyStats.studyHoursLog || []\n        };\n        const dataToSend = {\n          tasks,\n          studyStats: serializedStudyStats,\n          points,\n          badges,\n          themes: [\"Light Mode\", \"Dark Mode\", \"Ocean Breeze\", \"Sunset Glow\", \"Forest Whisper\"],\n          currentTheme,\n          unlockedThemes\n        };\n        console.log(\"Sending data to backend:\", JSON.stringify(dataToSend, null, 2));\n        const response = await fetch(`http://localhost:5000/api/user/${userId}`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(dataToSend)\n        });\n        console.log(\"Response status:\", response.status);\n        const responseBody = await response.text();\n        console.log(\"Response body:\", responseBody);\n        if (!response.ok) {\n          throw new Error(`Failed to save user data: ${response.status} - ${responseBody}`);\n        }\n        console.log(\"Data saved successfully\");\n      } catch (err) {\n        console.error(\"Error saving user data:\", err);\n        toast.error(`Failed to save progress: ${err.message}`);\n      }\n    };\n    const debounceSave = setTimeout(() => {\n      saveUserData();\n    }, 1000);\n    return () => clearTimeout(debounceSave);\n  }, [tasks, studyStats, points, badges, currentTheme, unlockedThemes]);\n  const logStudyHours = hours => {\n    const parsedHours = parseFloat(hours);\n    if (isNaN(parsedHours) || parsedHours <= 0) {\n      toast.error(\"Please enter a valid number of hours greater than 0.\");\n      return;\n    }\n    const roundedHours = Math.round(parsedHours * 100) / 100;\n    const today = getLocalDateString(new Date());\n    setStudyStats(prev => {\n      const studyHoursLog = prev.studyHoursLog || [];\n      const existingLog = studyHoursLog.find(log => log.date === today);\n      let updatedLog;\n      if (existingLog) {\n        updatedLog = studyHoursLog.map(log => log.date === today ? {\n          ...log,\n          hours: Math.round((log.hours + roundedHours) * 100) / 100\n        } : log);\n      } else {\n        updatedLog = [...studyHoursLog, {\n          date: today,\n          hours: roundedHours\n        }];\n      }\n      const newStats = {\n        ...prev,\n        totalHours: Math.round((prev.totalHours + roundedHours) * 100) / 100,\n        studyHoursLog: updatedLog\n      };\n      console.log(\"Updated studyStats (logStudyHours):\", newStats);\n      return newStats;\n    });\n    updateStreak(today);\n  };\n  const deductStudyHours = (hours, completedDate) => {\n    const parsedHours = parseFloat(hours);\n    if (isNaN(parsedHours) || parsedHours <= 0) return;\n    const roundedHours = Math.round(parsedHours * 100) / 100;\n    setStudyStats(prev => {\n      const studyHoursLog = prev.studyHoursLog || [];\n      const logDate = completedDate; // Use the task's completedDate\n      const existingLog = studyHoursLog.find(log => log.date === logDate);\n      let updatedLog;\n      if (existingLog) {\n        const newHours = Math.max(0, existingLog.hours - roundedHours);\n        updatedLog = studyHoursLog.map(log => log.date === logDate ? {\n          ...log,\n          hours: Math.round(newHours * 100) / 100\n        } : log).filter(log => log.hours > 0); // Remove entries with 0 hours\n      } else {\n        updatedLog = studyHoursLog;\n      }\n      const newTotalHours = Math.max(0, prev.totalHours - roundedHours);\n      const newStats = {\n        ...prev,\n        totalHours: Math.round(newTotalHours * 100) / 100,\n        studyHoursLog: updatedLog\n      };\n      console.log(\"Updated studyStats (deductStudyHours):\", newStats);\n      return newStats;\n    });\n  };\n  const getStudyTips = () => {\n    setAiSuggestion(\"Loading new suggestions...\");\n    setTimeout(() => {\n      const tips = [\"Try using the Pomodoro technique: 25 minutes of focused study followed by a 5-minute break.\", \"For difficult subjects, try teaching the material to an imaginary student.\", \"Create visual mind maps to connect key concepts in your subjects.\", \"Review your notes within 24 hours of taking them to improve retention.\", \"Study in short, frequent sessions rather than long cramming sessions.\"];\n      const randomTip = tips[Math.floor(Math.random() * tips.length)];\n      setAiSuggestion(randomTip);\n    }, 1500);\n  };\n  const generateSchedule = () => {\n    setAiSuggestion(\"Generating personalized study schedule...\");\n    setTimeout(() => {\n      const today = new Date();\n      const todayStr = getLocalDateString(today);\n      const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n      const todayDay = days[today.getDay()];\n      const incompleteTasks = tasks.filter(task => !task.completed);\n      if (incompleteTasks.length === 0) {\n        setAiSuggestion(\"You have no incomplete tasks to schedule. Add a new task to get started!\");\n        return;\n      }\n      const tasksDueToday = [];\n      const pastDueTasks = [];\n      const futureTasksDueTomorrow = [];\n      const otherFutureTasks = [];\n      incompleteTasks.forEach(task => {\n        const taskDueDate = new Date(task.dueDate);\n        const taskDueDateStr = task.dueDate;\n        const diffDays = (new Date(taskDueDateStr) - new Date(todayStr)) / (1000 * 60 * 60 * 24);\n        if (taskDueDateStr === todayStr) {\n          tasksDueToday.push(task);\n        } else if (diffDays < 0) {\n          pastDueTasks.push({\n            ...task,\n            dueDateDiff: Math.abs(diffDays)\n          });\n        } else {\n          if (diffDays === 1) {\n            futureTasksDueTomorrow.push({\n              ...task,\n              dueDateDiff: diffDays\n            });\n          } else {\n            otherFutureTasks.push({\n              ...task,\n              dueDateDiff: diffDays\n            });\n          }\n        }\n      });\n      const priorityValue = {\n        High: 3,\n        Medium: 2,\n        Low: 1\n      };\n      tasksDueToday.sort((a, b) => priorityValue[b.priority] - priorityValue[a.priority]);\n      pastDueTasks.sort((a, b) => {\n        if (a.dueDateDiff !== b.dueDateDiff) {\n          return a.dueDateDiff - b.dueDateDiff;\n        }\n        return priorityValue[b.priority] - priorityValue[a.priority];\n      });\n      futureTasksDueTomorrow.sort((a, b) => priorityValue[b.priority] - priorityValue[a.priority]);\n      otherFutureTasks.sort((a, b) => {\n        if (a.dueDateDiff !== b.dueDateDiff) {\n          return a.dueDateDiff - b.dueDateDiff;\n        }\n        return priorityValue[b.priority] - priorityValue[a.priority];\n      });\n      const schedule = {\n        today: [],\n        futureDays: []\n      };\n      const getHours = priority => {\n        return priority === \"High\" ? 2 : priority === \"Medium\" ? 1.5 : 1;\n      };\n      tasksDueToday.forEach(task => {\n        const hours = task.hours || getHours(task.priority); // Use task.hours if available\n        schedule.today.push(`${task.title} (${hours} hours)`);\n      });\n      pastDueTasks.forEach(task => {\n        const hours = task.hours || getHours(task.priority);\n        schedule.today.push(`${task.title} (${hours} hours)`);\n      });\n      futureTasksDueTomorrow.forEach(task => {\n        const hours = task.hours || getHours(task.priority);\n        schedule.today.push(`${task.title} (${hours} hours)`);\n      });\n      otherFutureTasks.forEach(task => {\n        const taskDueDate = new Date(task.dueDate);\n        const diffDays = task.dueDateDiff;\n        const hours = task.hours || getHours(task.priority);\n        const scheduleDate = new Date(taskDueDate);\n        scheduleDate.setDate(taskDueDate.getDate() - 1);\n        const scheduleDateStr = scheduleDate.toISOString().split(\"T\")[0];\n        const scheduleDay = days[scheduleDate.getDay()];\n        let dayEntry = schedule.futureDays.find(entry => entry.dayName === scheduleDay && entry.date === scheduleDateStr);\n        if (!dayEntry) {\n          dayEntry = {\n            dayName: scheduleDay,\n            date: scheduleDateStr,\n            tasks: []\n          };\n          schedule.futureDays.push(dayEntry);\n        }\n        dayEntry.tasks.push(`${task.title} (${hours} hours)`);\n      });\n      schedule.futureDays.sort((a, b) => new Date(a.date) - new Date(b.date));\n      const scheduleMessage = [\"Based on your upcoming tasks and past performance, here's a suggested schedule:\\n\"];\n      if (schedule.today.length > 0) {\n        scheduleMessage.push(`- ${todayDay} (Today):`);\n        schedule.today.forEach(taskEntry => {\n          scheduleMessage.push(`  - ${taskEntry}`);\n        });\n      }\n      schedule.futureDays.forEach(day => {\n        scheduleMessage.push(`- ${day.dayName} (${day.date}):`);\n        day.tasks.forEach(taskEntry => {\n          scheduleMessage.push(`  - ${taskEntry}`);\n        });\n      });\n      if (schedule.today.length === 0 && schedule.futureDays.length === 0) {\n        scheduleMessage.push(\"No tasks to schedule for the immediate future.\");\n      }\n      setAiSuggestion(scheduleMessage.join(\"\\n\"));\n    }, 2000);\n  };\n  const addTask = newTask => {\n    const task = {\n      id: Date.now(),\n      ...newTask,\n      completedDate: null,\n      pointsAwarded: false,\n      hours: newTask.hours || 0 // Ensure hours is included\n    };\n    setTasks([...tasks, task]);\n  };\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n  const toggleTaskComplete = id => {\n    const task = tasks.find(task => task.id === id);\n    if (!task) return;\n    const today = getLocalDateString(new Date());\n    let newPoints = points;\n    let newBadges = [...badges];\n    let notifications = [];\n    const updatedTasks = tasks.map(t => t.id === id ? {\n      ...t,\n      completed: !t.completed,\n      completedDate: !t.completed ? today : null,\n      pointsAwarded: t.pointsAwarded\n    } : t);\n    const updatedTask = updatedTasks.find(t => t.id === id);\n    const pointsToAddOrDeduct = task.priority === \"High\" ? 30 : task.priority === \"Medium\" ? 20 : 10;\n    if (!task.completed) {\n      // Task is being marked as completed\n      if (!updatedTask.pointsAwarded) {\n        // Only award points if they haven't been awarded yet\n        newPoints = points + pointsToAddOrDeduct;\n        notifications.push(`🎉 +${pointsToAddOrDeduct} Points! Keep it up!`);\n        updatedTask.pointsAwarded = true; // Mark points as awarded\n      }\n\n      // Log the task's hours when completed\n      if (task.hours > 0) {\n        logStudyHours(task.hours);\n      }\n      const highPriorityTasks = updatedTasks.filter(t => t.priority === \"High\" && t.completed).length;\n      if (highPriorityTasks >= 5 && !badges.includes(\"Priority Master\")) {\n        newBadges.push(\"Priority Master\");\n        notifications.push(\"🏆 Badge Earned: Priority Master!\");\n      }\n      const totalCompletedTasks = updatedTasks.filter(t => t.completed).length;\n      if (totalCompletedTasks >= 10 && !badges.includes(\"Task Titan\")) {\n        newBadges.push(\"Task Titan\");\n        notifications.push(\"🏆 Badge Earned: Task Titan!\");\n      }\n      const dueDate = new Date(task.dueDate);\n      const todayDate = new Date();\n      if (dueDate > todayDate) {\n        const earlyTasks = updatedTasks.filter(t => new Date(t.dueDate) > todayDate && t.completed).length;\n        if (earlyTasks >= 3 && !badges.includes(\"Early Bird\")) {\n          newBadges.push(\"Early Bird\");\n          notifications.push(\"🏆 Badge Earned: Early Bird!\");\n        }\n      }\n      updateStreak(today);\n    } else {\n      // Task is being unmarked as completed\n      if (updatedTask.pointsAwarded) {\n        // Only deduct points if they were previously awarded\n        newPoints = points - pointsToAddOrDeduct;\n        notifications.push(`↩️ -${pointsToAddOrDeduct} Points. Task unmarked as completed.`);\n        updatedTask.pointsAwarded = false; // Reset pointsAwarded\n      }\n\n      // Deduct the task's hours when uncompleted\n      if (task.hours > 0 && task.completedDate) {\n        deductStudyHours(task.hours, task.completedDate);\n      }\n    }\n    setTasks(updatedTasks);\n    setPoints(newPoints);\n    setBadges(newBadges);\n    notifications.forEach(msg => toast.success(msg));\n  };\n  const updateTask = updatedTask => {\n    setTasks(tasks.map(task => task.id === updatedTask.id ? updatedTask : task));\n  };\n  useEffect(() => {\n    if (studyStats.streak >= 7 && !badges.includes(\"Streak Star\")) {\n      let newBadges = [...badges, \"Streak Star\"];\n      let newPoints = points + 50;\n      setBadges(newBadges);\n      setPoints(newPoints);\n      toast.success(\"🏆 Badge Earned: Streak Star!\");\n      toast.success(\"🎉 +50 Points for 7-Day Streak!\");\n    }\n  }, [studyStats.streak]);\n  const nextTheme = getNextTheme();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `min-h-screen flex flex-col ${themeStyles[currentTheme]}`,\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: `p-4 ${headerStyles[currentTheme]}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-2xl font-bold flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(BookOpen, {\n              className: \"w-8 h-8 mr-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 794,\n              columnNumber: 15\n            }, this), \"StudyBuddy AI Planner\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleThemeChange,\n            className: \"text-2xl p-2 rounded-full transition-all duration-200 hover:scale-110\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: themeIcons[nextTheme]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `px-4 py-2 rounded-lg text-sm font-medium ${currentTheme === \"Dark Mode\" ? \"bg-indigo-800 text-gray-200\" : \"bg-white bg-opacity-20 text-white\"}`,\n          children: new Date().toLocaleDateString(\"en-US\", {\n            weekday: \"long\",\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 791,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: `sticky top-0 z-10 ${navStyles[currentTheme]}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-around md:justify-start md:space-x-8\",\n          children: [\"dashboard\", \"tasks\", \"analytics\", \"rewards\"].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab(tab),\n            className: `px-4 py-3 font-semibold text-sm transition-all duration-300 relative ${activeTab === tab ? currentTheme === \"Dark Mode\" ? \"text-indigo-400 border-b-2 border-indigo-400\" : currentTheme === \"Ocean Breeze\" ? \"text-teal-600 border-b-2 border-teal-600\" : currentTheme === \"Sunset Glow\" ? \"text-orange-600 border-b-2 border-orange-600\" : currentTheme === \"Forest Whisper\" ? \"text-green-600 border-b-2 border-green-600\" : \"text-indigo-600 border-b-2 border-indigo-600\" : currentTheme === \"Dark Mode\" ? \"text-gray-400 hover:text-gray-200\" : currentTheme === \"Ocean Breeze\" ? \"text-blue-700 hover:text-teal-600\" : currentTheme === \"Sunset Glow\" ? \"text-orange-700 hover:text-orange-600\" : currentTheme === \"Forest Whisper\" ? \"text-green-700 hover:text-green-600\" : \"text-gray-600 hover:text-gray-800\"}`,\n            children: [tab.charAt(0).toUpperCase() + tab.slice(1), activeTab === tab && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"absolute inset-x-0 bottom-0 h-0.5 bg-current transform scale-x-100 transition-transform duration-300\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 852,\n              columnNumber: 19\n            }, this)]\n          }, tab, true, {\n            fileName: _jsxFileName,\n            lineNumber: 825,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 821,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-grow container mx-auto p-4\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-pulse flex justify-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-5 h-5 rounded-full ${currentTheme === \"Dark Mode\" ? \"bg-indigo-500\" : currentTheme === \"Ocean Breeze\" ? \"bg-teal-500\" : currentTheme === \"Sunset Glow\" ? \"bg-orange-500\" : currentTheme === \"Forest Whisper\" ? \"bg-green-500\" : \"bg-indigo-600\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-5 h-5 rounded-full ${currentTheme === \"Dark Mode\" ? \"bg-indigo-500\" : currentTheme === \"Ocean Breeze\" ? \"bg-teal-500\" : currentTheme === \"Sunset Glow\" ? \"bg-orange-500\" : currentTheme === \"Forest Whisper\" ? \"bg-green-500\" : \"bg-indigo-600\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 877,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-5 h-5 rounded-full ${currentTheme === \"Dark Mode\" ? \"bg-indigo-500\" : currentTheme === \"Ocean Breeze\" ? \"bg-teal-500\" : currentTheme === \"Sunset Glow\" ? \"bg-orange-500\" : currentTheme === \"Forest Whisper\" ? \"bg-green-500\" : \"bg-indigo-600\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 890,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `mt-3 text-sm font-medium ${currentTheme === \"Dark Mode\" ? \"text-gray-400\" : currentTheme === \"Ocean Breeze\" ? \"text-blue-700\" : currentTheme === \"Sunset Glow\" ? \"text-orange-700\" : currentTheme === \"Forest Whisper\" ? \"text-green-700\" : \"text-gray-600\"}`,\n          children: \"Loading your study data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 862,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: [activeTab === \"dashboard\" && /*#__PURE__*/_jsxDEV(Dashboard, {\n          tasks: tasks,\n          studyStats: studyStats,\n          aiSuggestion: aiSuggestion,\n          getStudyTips: getStudyTips,\n          generateSchedule: generateSchedule,\n          setActiveTab: setActiveTab,\n          toggleTaskComplete: toggleTaskComplete,\n          deleteTask: deleteTask,\n          currentTheme: currentTheme,\n          logStudyHours: logStudyHours\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 15\n        }, this), activeTab === \"tasks\" && /*#__PURE__*/_jsxDEV(TaskManager, {\n          tasks: tasks,\n          addTask: addTask,\n          updateTask: updateTask,\n          deleteTask: deleteTask,\n          toggleTaskComplete: toggleTaskComplete,\n          currentTheme: currentTheme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 15\n        }, this), activeTab === \"analytics\" && /*#__PURE__*/_jsxDEV(Analytics, {\n          tasks: tasks,\n          currentTheme: currentTheme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 949,\n          columnNumber: 15\n        }, this), activeTab === \"rewards\" && /*#__PURE__*/_jsxDEV(Rewards, {\n          points: points,\n          badges: badges,\n          studyStats: studyStats,\n          currentTheme: currentTheme,\n          onPointsUpdate: handlePointsUpdate,\n          onThemeUnlock: handleThemeUnlock,\n          unlockedThemes: unlockedThemes,\n          tasks: tasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 953,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 921,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 860,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: `py-4 ${themeStyles[currentTheme]}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `text-sm ${currentTheme === \"Dark Mode\" ? \"text-gray-500\" : currentTheme === \"Ocean Breeze\" ? \"text-blue-700\" : currentTheme === \"Sunset Glow\" ? \"text-orange-700\" : currentTheme === \"Forest Whisper\" ? \"text-green-700\" : \"text-gray-600\"}`,\n          children: \"\\xA9 2025 StudyBuddy AI Planner. All rights reserved.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 970,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 969,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 968,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 788,\n    columnNumber: 5\n  }, this);\n}\n_s(Layout, \"CpoSXAqZtmVVtLZ/orin7Etk0N0=\");\n_c = Layout;\nexport default Layout;\nvar _c;\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"names":["React","useState","useEffect","BookOpen","FontAwesomeIcon","faSun","faMoon","faWater","faFire","faLeaf","Dashboard","TaskManager","Analytics","Rewards","ToastContainer","toast","jsxDEV","_jsxDEV","Layout","_s","activeTab","setActiveTab","tasks","setTasks","studyStats","setStudyStats","totalHours","completedTasks","streak","lastActiveDate","lastStreakUpdate","studyHoursLog","aiSuggestion","setAiSuggestion","points","setPoints","badges","setBadges","currentTheme","setCurrentTheme","unlockedThemes","setUnlockedThemes","loading","setLoading","userId","getLocalDateString","date","year","getFullYear","month","String","getMonth","padStart","day","getDate","themeStyles","headerStyles","navStyles","themeIcons","getNextTheme","length","currentIndex","indexOf","nextIndex","handleThemeChange","nextTheme","info","handlePointsUpdate","newPoints","handleThemeUnlock","themeName","includes","updateStreak","today","prev","lastActive","Date","todayDate","newStreak","newLastActiveDate","newLastStreakUpdate","toISOString","split","diffTime","diffDays","Math","ceil","newStats","console","log","fetchUserData","_data$studyStats","_data$studyStats2","_data$studyStats3","_data$studyStats4","_data$studyStats5","_data$studyStats6","response","fetch","ok","Error","status","data","json","fetchedTasks","map","task","_task$pointsAwarded","_task$hours","pointsAwarded","hours","fetchedStats","lastDate","currentDate","lastFetchTimestamp","localStorage","getItem","currentTimestamp","now","setItem","toString","getTime","timeSinceLastFetch","parseInt","Infinity","timeSinceLastActive","setTimeout","incompleteTasks","filter","completed","todayStr","priorityValue","High","Medium","Low","tasksDueToday","pastDueTasks","futureTasks","forEach","taskDueDateStr","dueDate","push","dueDateDiff","abs","sort","a","b","priority","recommendedTask","title","err","error","completedCount","prevStats","saveUserData","serializedStudyStats","dataToSend","themes","JSON","stringify","method","headers","body","responseBody","text","message","debounceSave","clearTimeout","logStudyHours","parsedHours","parseFloat","isNaN","roundedHours","round","existingLog","find","updatedLog","deductStudyHours","completedDate","logDate","newHours","max","newTotalHours","getStudyTips","tips","randomTip","floor","random","generateSchedule","days","todayDay","getDay","futureTasksDueTomorrow","otherFutureTasks","taskDueDate","schedule","futureDays","getHours","scheduleDate","setDate","scheduleDateStr","scheduleDay","dayEntry","entry","dayName","scheduleMessage","taskEntry","join","addTask","newTask","id","deleteTask","toggleTaskComplete","newBadges","notifications","updatedTasks","t","updatedTask","pointsToAddOrDeduct","highPriorityTasks","totalCompletedTasks","earlyTasks","msg","success","updateTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","toLocaleDateString","weekday","tab","charAt","toUpperCase","slice","onPointsUpdate","onThemeUnlock","_c","$RefreshReg$"],"sources":["D:/Final Project/study-buddy-planner/src/components/Layout.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { BookOpen } from \"lucide-react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faSun,\r\n  faMoon,\r\n  faWater,\r\n  faFire,\r\n  faLeaf,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport TaskManager from \"./TaskManager\";\r\nimport Analytics from \"./Analytics\";\r\nimport Rewards from \"./Rewards\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction Layout() {\r\n  const [activeTab, setActiveTab] = useState(\"dashboard\");\r\n  const [tasks, setTasks] = useState([]);\r\n  const [studyStats, setStudyStats] = useState({\r\n    totalHours: 0,\r\n    completedTasks: 0,\r\n    streak: 0,\r\n    lastActiveDate: null,\r\n    lastStreakUpdate: null,\r\n    studyHoursLog: [],\r\n  });\r\n  const [aiSuggestion, setAiSuggestion] = useState(\"\");\r\n  const [points, setPoints] = useState(0);\r\n  const [badges, setBadges] = useState([]);\r\n  const [currentTheme, setCurrentTheme] = useState(\"Light Mode\");\r\n  const [unlockedThemes, setUnlockedThemes] = useState([\"Light Mode\"]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const userId = \"user123\";\r\n\r\n  // Helper function to format the local date as YYYY-MM-DD\r\n  const getLocalDateString = (date) => {\r\n    const year = date.getFullYear();\r\n    const month = String(date.getMonth() + 1).padStart(2, \"0\"); // getMonth() is 0-based\r\n    const day = String(date.getDate()).padStart(2, \"0\");\r\n    return `${year}-${month}-${day}`;\r\n  };\r\n\r\n  // Theme styles for all themes\r\n  const themeStyles = {\r\n    \"Light Mode\": \"bg-gray-100 text-gray-900\",\r\n    \"Dark Mode\": \"bg-gray-900 text-gray-100\",\r\n    \"Ocean Breeze\": \"bg-gradient-to-br from-blue-50 to-teal-100 text-blue-900\",\r\n    \"Sunset Glow\":\r\n      \"bg-gradient-to-br from-orange-50 to-pink-100 text-orange-900 backdrop-blur-sm\",\r\n    \"Forest Whisper\":\r\n      \"bg-gradient-to-br from-green-50 to-emerald-100 text-green-900 backdrop-blur-sm\",\r\n  };\r\n\r\n  const headerStyles = {\r\n    \"Light Mode\": \"bg-indigo-600 text-white shadow-lg\",\r\n    \"Dark Mode\": \"bg-indigo-900 text-gray-100 shadow-lg\",\r\n    \"Ocean Breeze\":\r\n      \"bg-gradient-to-r from-blue-600 to-teal-600 text-white shadow-lg\",\r\n    \"Sunset Glow\":\r\n      \"bg-gradient-to-r from-orange-600 to-pink-600 text-white shadow-lg\",\r\n    \"Forest Whisper\":\r\n      \"bg-gradient-to-r from-green-600 to-teal-600 text-white shadow-lg\",\r\n  };\r\n\r\n  const navStyles = {\r\n    \"Light Mode\": \"bg-white text-gray-600 border-b border-gray-200\",\r\n    \"Dark Mode\": \"bg-gray-800 text-gray-300 border-b border-gray-700\",\r\n    \"Ocean Breeze\": \"bg-blue-100 text-blue-800 border-b border-teal-300\",\r\n    \"Sunset Glow\": \"bg-orange-50 text-orange-800 border-b border-orange-300\",\r\n    \"Forest Whisper\": \"bg-green-50 text-green-800 border-b border-green-300\",\r\n  };\r\n\r\n  // Map themes to their FontAwesome icons\r\n  const themeIcons = {\r\n    \"Light Mode\": faSun,\r\n    \"Dark Mode\": faMoon,\r\n    \"Ocean Breeze\": faWater,\r\n    \"Sunset Glow\": faFire,\r\n    \"Forest Whisper\": faLeaf,\r\n  };\r\n\r\n  const getNextTheme = () => {\r\n    if (unlockedThemes.length === 1) {\r\n      return \"Light Mode\";\r\n    }\r\n    const currentIndex = unlockedThemes.indexOf(currentTheme);\r\n    const nextIndex = (currentIndex + 1) % unlockedThemes.length;\r\n    return unlockedThemes[nextIndex];\r\n  };\r\n\r\n  const handleThemeChange = () => {\r\n    const nextTheme = getNextTheme();\r\n    setCurrentTheme(nextTheme);\r\n    toast.info(`🎨 Switched to ${nextTheme}!`);\r\n  };\r\n\r\n  const handlePointsUpdate = (newPoints) => {\r\n    setPoints(newPoints);\r\n  };\r\n\r\n  const handleThemeUnlock = (themeName) => {\r\n    if (!unlockedThemes.includes(themeName)) {\r\n      setUnlockedThemes([...unlockedThemes, themeName]);\r\n    }\r\n  };\r\n\r\n  const updateStreak = (today) => {\r\n    setStudyStats((prev) => {\r\n      const lastActive = prev.lastActiveDate\r\n        ? new Date(prev.lastActiveDate)\r\n        : null;\r\n      const lastStreakUpdate = prev.lastStreakUpdate\r\n        ? new Date(prev.lastStreakUpdate)\r\n        : null;\r\n      const todayDate = new Date(today);\r\n\r\n      let newStreak = prev.streak;\r\n      let newLastActiveDate = today;\r\n      let newLastStreakUpdate = prev.lastStreakUpdate;\r\n\r\n      if (!lastActive || lastActive.toISOString().split(\"T\")[0] !== today) {\r\n        if (lastActive) {\r\n          const diffTime = todayDate - lastActive;\r\n          const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n          if (diffDays === 1) {\r\n            newStreak = prev.streak + 1;\r\n            newLastStreakUpdate = today;\r\n          } else if (diffDays > 1) {\r\n            newStreak = 1;\r\n            newLastStreakUpdate = today;\r\n          }\r\n        } else {\r\n          newStreak = 1;\r\n          newLastStreakUpdate = today;\r\n        }\r\n      }\r\n\r\n      if (\r\n        lastStreakUpdate &&\r\n        new Date(lastStreakUpdate).toISOString().split(\"T\")[0] !== today\r\n      ) {\r\n        const diffTime = todayDate - new Date(lastStreakUpdate);\r\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n        if (diffDays > 1) {\r\n          newStreak = 1;\r\n          newLastStreakUpdate = today;\r\n        }\r\n      }\r\n\r\n      const newStats = {\r\n        ...prev,\r\n        streak: newStreak,\r\n        lastActiveDate: newLastActiveDate,\r\n        lastStreakUpdate: newLastStreakUpdate,\r\n        studyHoursLog: prev.studyHoursLog || [],\r\n      };\r\n      console.log(\"Updated studyStats (updateStreak):\", newStats);\r\n      return newStats;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:5000/api/user/${userId}`\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch user data: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        console.log(\"Fetched data:\", data);\r\n\r\n        // Ensure tasks have pointsAwarded and hours properties\r\n        const fetchedTasks = (data.tasks || []).map((task) => ({\r\n          ...task,\r\n          pointsAwarded: task.pointsAwarded ?? false,\r\n          hours: task.hours ?? 0, // Default to 0 if hours is not present\r\n        }));\r\n        setTasks(fetchedTasks);\r\n\r\n        const fetchedStats = {\r\n          totalHours: data.studyStats?.totalHours || 0,\r\n          completedTasks: data.studyStats?.completedTasks || 0,\r\n          streak: data.studyStats?.streak || 0,\r\n          lastActiveDate: data.studyStats?.lastActiveDate || null,\r\n          lastStreakUpdate: data.studyStats?.lastStreakUpdate || null,\r\n          studyHoursLog: data.studyStats?.studyHoursLog || [],\r\n        };\r\n        console.log(\"Setting initial studyStats:\", fetchedStats);\r\n        setStudyStats(fetchedStats);\r\n        setPoints(data.points || 0);\r\n        setBadges(data.badges || []);\r\n        setCurrentTheme(data.currentTheme || \"Light Mode\");\r\n        setUnlockedThemes(data.unlockedThemes || [\"Light Mode\"]);\r\n\r\n        const today = getLocalDateString(new Date());\r\n        console.log(\"Today's date:\", today);\r\n        const { lastActiveDate, streak, lastStreakUpdate } = fetchedStats;\r\n\r\n        let newStats = { ...fetchedStats };\r\n        if (lastStreakUpdate !== today) {\r\n          if (!lastActiveDate) {\r\n            console.log(\"No lastActiveDate, initializing with today's date...\");\r\n            newStats = {\r\n              ...fetchedStats,\r\n              lastActiveDate: today,\r\n              lastStreakUpdate: today,\r\n              studyHoursLog: fetchedStats.studyHoursLog || [],\r\n            };\r\n          } else {\r\n            const lastDate = new Date(lastActiveDate);\r\n            const currentDate = new Date(today);\r\n            const diffDays = (currentDate - lastDate) / (1000 * 60 * 60 * 24);\r\n            console.log(\"Days difference:\", diffDays);\r\n\r\n            if (diffDays === 1) {\r\n              newStats = {\r\n                ...fetchedStats,\r\n                streak: fetchedStats.streak + 1,\r\n                lastActiveDate: today,\r\n                lastStreakUpdate: today,\r\n                studyHoursLog: fetchedStats.studyHoursLog || [],\r\n              };\r\n              console.log(\"Updated studyStats (increment streak):\", newStats);\r\n            } else if (diffDays > 1) {\r\n              newStats = {\r\n                ...fetchedStats,\r\n                streak: 0,\r\n                lastActiveDate: today,\r\n                lastStreakUpdate: today,\r\n                studyHoursLog: fetchedStats.studyHoursLog || [],\r\n              };\r\n              console.log(\"Updated studyStats (reset streak):\", newStats);\r\n            } else {\r\n              newStats = {\r\n                ...fetchedStats,\r\n                lastStreakUpdate: today,\r\n                studyHoursLog: fetchedStats.studyHoursLog || [],\r\n              };\r\n              console.log(\"Updated studyStats (same day):\", newStats);\r\n            }\r\n          }\r\n          setStudyStats(newStats);\r\n        } else {\r\n          console.log(\"Streak already updated today, skipping...\");\r\n        }\r\n\r\n        const lastFetchTimestamp = localStorage.getItem(\"lastFetchTimestamp\");\r\n        const currentTimestamp = Date.now();\r\n        localStorage.setItem(\"lastFetchTimestamp\", currentTimestamp.toString());\r\n\r\n        const lastActive = fetchedStats.lastActiveDate\r\n          ? new Date(fetchedStats.lastActiveDate).getTime()\r\n          : 0;\r\n        const timeSinceLastFetch = lastFetchTimestamp\r\n          ? currentTimestamp - parseInt(lastFetchTimestamp)\r\n          : Infinity;\r\n        const timeSinceLastActive = lastActive\r\n          ? currentTimestamp - lastActive\r\n          : Infinity;\r\n\r\n        setTimeout(() => {\r\n          const incompleteTasks = fetchedTasks.filter(\r\n            (task) => !task.completed\r\n          );\r\n          if (incompleteTasks.length === 0) {\r\n            setAiSuggestion(\r\n              \"You have no incomplete tasks! Add a new task to keep progressing.\"\r\n            );\r\n            return;\r\n          }\r\n\r\n          const todayStr = getLocalDateString(new Date());\r\n          const priorityValue = { High: 3, Medium: 2, Low: 1 };\r\n\r\n          const tasksDueToday = [];\r\n          const pastDueTasks = [];\r\n          const futureTasks = [];\r\n\r\n          incompleteTasks.forEach((task) => {\r\n            const taskDueDateStr = task.dueDate;\r\n            const diffDays =\r\n              (new Date(taskDueDateStr) - new Date(todayStr)) /\r\n              (1000 * 60 * 60 * 24);\r\n\r\n            if (taskDueDateStr === todayStr) {\r\n              tasksDueToday.push(task);\r\n            } else if (diffDays < 0) {\r\n              pastDueTasks.push({ ...task, dueDateDiff: Math.abs(diffDays) });\r\n            } else {\r\n              futureTasks.push({ ...task, dueDateDiff: diffDays });\r\n            }\r\n          });\r\n\r\n          tasksDueToday.sort(\r\n            (a, b) => priorityValue[b.priority] - priorityValue[a.priority]\r\n          );\r\n          pastDueTasks.sort((a, b) => {\r\n            if (a.dueDateDiff !== b.dueDateDiff) {\r\n              return a.dueDateDiff - b.dueDateDiff;\r\n            }\r\n            return priorityValue[b.priority] - priorityValue[a.priority];\r\n          });\r\n          futureTasks.sort((a, b) => {\r\n            if (a.dueDateDiff !== b.dueDateDiff) {\r\n              return a.dueDateDiff - b.dueDateDiff;\r\n            }\r\n            return priorityValue[b.priority] - priorityValue[a.priority];\r\n          });\r\n\r\n          let recommendedTask = null;\r\n\r\n          if (tasksDueToday.length > 0) {\r\n            recommendedTask = tasksDueToday[0];\r\n          } else if (pastDueTasks.length > 0) {\r\n            recommendedTask = pastDueTasks[0];\r\n          } else if (futureTasks.length > 0) {\r\n            recommendedTask = futureTasks[0];\r\n          }\r\n\r\n          if (recommendedTask) {\r\n            setAiSuggestion(\r\n              `Based on your schedule and learning patterns, I recommend focusing on your \"${recommendedTask.title}\" today.`\r\n            );\r\n          } else {\r\n            setAiSuggestion(\r\n              \"You have no incomplete tasks! Add a new task to keep progressing.\"\r\n            );\r\n          }\r\n        }, 1000);\r\n\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error(\"Error fetching user data:\", err);\r\n        toast.error(\"Failed to load user data. Please try again later.\");\r\n        setAiSuggestion(\"Add a new task to get started!\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Current studyStats (after update):\", studyStats);\r\n  }, [studyStats]);\r\n\r\n  useEffect(() => {\r\n    const completedCount = tasks.filter((task) => task.completed).length;\r\n    setStudyStats((prevStats) => {\r\n      const newStats = {\r\n        ...prevStats,\r\n        completedTasks: completedCount,\r\n        studyHoursLog: prevStats.studyHoursLog || [],\r\n      };\r\n      console.log(\"Updated studyStats (completedTasks):\", newStats);\r\n      return newStats;\r\n    });\r\n  }, [tasks]);\r\n\r\n  useEffect(() => {\r\n    const saveUserData = async () => {\r\n      try {\r\n        const serializedStudyStats = {\r\n          totalHours: studyStats.totalHours,\r\n          completedTasks: studyStats.completedTasks,\r\n          streak: studyStats.streak,\r\n          lastActiveDate: studyStats.lastActiveDate || null,\r\n          lastStreakUpdate: studyStats.lastStreakUpdate || null,\r\n          studyHoursLog: studyStats.studyHoursLog || [],\r\n        };\r\n\r\n        const dataToSend = {\r\n          tasks,\r\n          studyStats: serializedStudyStats,\r\n          points,\r\n          badges,\r\n          themes: [\r\n            \"Light Mode\",\r\n            \"Dark Mode\",\r\n            \"Ocean Breeze\",\r\n            \"Sunset Glow\",\r\n            \"Forest Whisper\",\r\n          ],\r\n          currentTheme,\r\n          unlockedThemes,\r\n        };\r\n\r\n        console.log(\r\n          \"Sending data to backend:\",\r\n          JSON.stringify(dataToSend, null, 2)\r\n        );\r\n\r\n        const response = await fetch(\r\n          `http://localhost:5000/api/user/${userId}`,\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(dataToSend),\r\n          }\r\n        );\r\n\r\n        console.log(\"Response status:\", response.status);\r\n        const responseBody = await response.text();\r\n        console.log(\"Response body:\", responseBody);\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\r\n            `Failed to save user data: ${response.status} - ${responseBody}`\r\n          );\r\n        }\r\n\r\n        console.log(\"Data saved successfully\");\r\n      } catch (err) {\r\n        console.error(\"Error saving user data:\", err);\r\n        toast.error(`Failed to save progress: ${err.message}`);\r\n      }\r\n    };\r\n\r\n    const debounceSave = setTimeout(() => {\r\n      saveUserData();\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(debounceSave);\r\n  }, [tasks, studyStats, points, badges, currentTheme, unlockedThemes]);\r\n\r\n  const logStudyHours = (hours) => {\r\n    const parsedHours = parseFloat(hours);\r\n    if (isNaN(parsedHours) || parsedHours <= 0) {\r\n      toast.error(\"Please enter a valid number of hours greater than 0.\");\r\n      return;\r\n    }\r\n    const roundedHours = Math.round(parsedHours * 100) / 100;\r\n    const today = getLocalDateString(new Date());\r\n    setStudyStats((prev) => {\r\n      const studyHoursLog = prev.studyHoursLog || [];\r\n      const existingLog = studyHoursLog.find((log) => log.date === today);\r\n      let updatedLog;\r\n      if (existingLog) {\r\n        updatedLog = studyHoursLog.map((log) =>\r\n          log.date === today\r\n            ? {\r\n                ...log,\r\n                hours: Math.round((log.hours + roundedHours) * 100) / 100,\r\n              }\r\n            : log\r\n        );\r\n      } else {\r\n        updatedLog = [...studyHoursLog, { date: today, hours: roundedHours }];\r\n      }\r\n      const newStats = {\r\n        ...prev,\r\n        totalHours: Math.round((prev.totalHours + roundedHours) * 100) / 100,\r\n        studyHoursLog: updatedLog,\r\n      };\r\n      console.log(\"Updated studyStats (logStudyHours):\", newStats);\r\n      return newStats;\r\n    });\r\n    updateStreak(today);\r\n  };\r\n\r\n  const deductStudyHours = (hours, completedDate) => {\r\n    const parsedHours = parseFloat(hours);\r\n    if (isNaN(parsedHours) || parsedHours <= 0) return;\r\n    const roundedHours = Math.round(parsedHours * 100) / 100;\r\n    setStudyStats((prev) => {\r\n      const studyHoursLog = prev.studyHoursLog || [];\r\n      const logDate = completedDate; // Use the task's completedDate\r\n      const existingLog = studyHoursLog.find((log) => log.date === logDate);\r\n      let updatedLog;\r\n      if (existingLog) {\r\n        const newHours = Math.max(0, existingLog.hours - roundedHours);\r\n        updatedLog = studyHoursLog\r\n          .map((log) =>\r\n            log.date === logDate\r\n              ? { ...log, hours: Math.round(newHours * 100) / 100 }\r\n              : log\r\n          )\r\n          .filter((log) => log.hours > 0); // Remove entries with 0 hours\r\n      } else {\r\n        updatedLog = studyHoursLog;\r\n      }\r\n      const newTotalHours = Math.max(0, prev.totalHours - roundedHours);\r\n      const newStats = {\r\n        ...prev,\r\n        totalHours: Math.round(newTotalHours * 100) / 100,\r\n        studyHoursLog: updatedLog,\r\n      };\r\n      console.log(\"Updated studyStats (deductStudyHours):\", newStats);\r\n      return newStats;\r\n    });\r\n  };\r\n\r\n  const getStudyTips = () => {\r\n    setAiSuggestion(\"Loading new suggestions...\");\r\n    setTimeout(() => {\r\n      const tips = [\r\n        \"Try using the Pomodoro technique: 25 minutes of focused study followed by a 5-minute break.\",\r\n        \"For difficult subjects, try teaching the material to an imaginary student.\",\r\n        \"Create visual mind maps to connect key concepts in your subjects.\",\r\n        \"Review your notes within 24 hours of taking them to improve retention.\",\r\n        \"Study in short, frequent sessions rather than long cramming sessions.\",\r\n      ];\r\n      const randomTip = tips[Math.floor(Math.random() * tips.length)];\r\n      setAiSuggestion(randomTip);\r\n    }, 1500);\r\n  };\r\n\r\n  const generateSchedule = () => {\r\n    setAiSuggestion(\"Generating personalized study schedule...\");\r\n    setTimeout(() => {\r\n      const today = new Date();\r\n      const todayStr = getLocalDateString(today);\r\n      const days = [\r\n        \"Sunday\",\r\n        \"Monday\",\r\n        \"Tuesday\",\r\n        \"Wednesday\",\r\n        \"Thursday\",\r\n        \"Friday\",\r\n        \"Saturday\",\r\n      ];\r\n      const todayDay = days[today.getDay()];\r\n\r\n      const incompleteTasks = tasks.filter((task) => !task.completed);\r\n      if (incompleteTasks.length === 0) {\r\n        setAiSuggestion(\r\n          \"You have no incomplete tasks to schedule. Add a new task to get started!\"\r\n        );\r\n        return;\r\n      }\r\n\r\n      const tasksDueToday = [];\r\n      const pastDueTasks = [];\r\n      const futureTasksDueTomorrow = [];\r\n      const otherFutureTasks = [];\r\n\r\n      incompleteTasks.forEach((task) => {\r\n        const taskDueDate = new Date(task.dueDate);\r\n        const taskDueDateStr = task.dueDate;\r\n        const diffDays =\r\n          (new Date(taskDueDateStr) - new Date(todayStr)) /\r\n          (1000 * 60 * 60 * 24);\r\n\r\n        if (taskDueDateStr === todayStr) {\r\n          tasksDueToday.push(task);\r\n        } else if (diffDays < 0) {\r\n          pastDueTasks.push({ ...task, dueDateDiff: Math.abs(diffDays) });\r\n        } else {\r\n          if (diffDays === 1) {\r\n            futureTasksDueTomorrow.push({ ...task, dueDateDiff: diffDays });\r\n          } else {\r\n            otherFutureTasks.push({ ...task, dueDateDiff: diffDays });\r\n          }\r\n        }\r\n      });\r\n\r\n      const priorityValue = { High: 3, Medium: 2, Low: 1 };\r\n\r\n      tasksDueToday.sort(\r\n        (a, b) => priorityValue[b.priority] - priorityValue[a.priority]\r\n      );\r\n\r\n      pastDueTasks.sort((a, b) => {\r\n        if (a.dueDateDiff !== b.dueDateDiff) {\r\n          return a.dueDateDiff - b.dueDateDiff;\r\n        }\r\n        return priorityValue[b.priority] - priorityValue[a.priority];\r\n      });\r\n\r\n      futureTasksDueTomorrow.sort(\r\n        (a, b) => priorityValue[b.priority] - priorityValue[a.priority]\r\n      );\r\n\r\n      otherFutureTasks.sort((a, b) => {\r\n        if (a.dueDateDiff !== b.dueDateDiff) {\r\n          return a.dueDateDiff - b.dueDateDiff;\r\n        }\r\n        return priorityValue[b.priority] - priorityValue[a.priority];\r\n      });\r\n\r\n      const schedule = {\r\n        today: [],\r\n        futureDays: [],\r\n      };\r\n\r\n      const getHours = (priority) => {\r\n        return priority === \"High\" ? 2 : priority === \"Medium\" ? 1.5 : 1;\r\n      };\r\n\r\n      tasksDueToday.forEach((task) => {\r\n        const hours = task.hours || getHours(task.priority); // Use task.hours if available\r\n        schedule.today.push(`${task.title} (${hours} hours)`);\r\n      });\r\n\r\n      pastDueTasks.forEach((task) => {\r\n        const hours = task.hours || getHours(task.priority);\r\n        schedule.today.push(`${task.title} (${hours} hours)`);\r\n      });\r\n\r\n      futureTasksDueTomorrow.forEach((task) => {\r\n        const hours = task.hours || getHours(task.priority);\r\n        schedule.today.push(`${task.title} (${hours} hours)`);\r\n      });\r\n\r\n      otherFutureTasks.forEach((task) => {\r\n        const taskDueDate = new Date(task.dueDate);\r\n        const diffDays = task.dueDateDiff;\r\n        const hours = task.hours || getHours(task.priority);\r\n\r\n        const scheduleDate = new Date(taskDueDate);\r\n        scheduleDate.setDate(taskDueDate.getDate() - 1);\r\n        const scheduleDateStr = scheduleDate.toISOString().split(\"T\")[0];\r\n        const scheduleDay = days[scheduleDate.getDay()];\r\n\r\n        let dayEntry = schedule.futureDays.find(\r\n          (entry) =>\r\n            entry.dayName === scheduleDay && entry.date === scheduleDateStr\r\n        );\r\n        if (!dayEntry) {\r\n          dayEntry = { dayName: scheduleDay, date: scheduleDateStr, tasks: [] };\r\n          schedule.futureDays.push(dayEntry);\r\n        }\r\n        dayEntry.tasks.push(`${task.title} (${hours} hours)`);\r\n      });\r\n\r\n      schedule.futureDays.sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n      const scheduleMessage = [\r\n        \"Based on your upcoming tasks and past performance, here's a suggested schedule:\\n\",\r\n      ];\r\n\r\n      if (schedule.today.length > 0) {\r\n        scheduleMessage.push(`- ${todayDay} (Today):`);\r\n        schedule.today.forEach((taskEntry) => {\r\n          scheduleMessage.push(`  - ${taskEntry}`);\r\n        });\r\n      }\r\n\r\n      schedule.futureDays.forEach((day) => {\r\n        scheduleMessage.push(`- ${day.dayName} (${day.date}):`);\r\n        day.tasks.forEach((taskEntry) => {\r\n          scheduleMessage.push(`  - ${taskEntry}`);\r\n        });\r\n      });\r\n\r\n      if (schedule.today.length === 0 && schedule.futureDays.length === 0) {\r\n        scheduleMessage.push(\"No tasks to schedule for the immediate future.\");\r\n      }\r\n\r\n      setAiSuggestion(scheduleMessage.join(\"\\n\"));\r\n    }, 2000);\r\n  };\r\n\r\n  const addTask = (newTask) => {\r\n    const task = {\r\n      id: Date.now(),\r\n      ...newTask,\r\n      completedDate: null,\r\n      pointsAwarded: false,\r\n      hours: newTask.hours || 0, // Ensure hours is included\r\n    };\r\n    setTasks([...tasks, task]);\r\n  };\r\n\r\n  const deleteTask = (id) => {\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  const toggleTaskComplete = (id) => {\r\n    const task = tasks.find((task) => task.id === id);\r\n    if (!task) return;\r\n\r\n    const today = getLocalDateString(new Date());\r\n    let newPoints = points;\r\n    let newBadges = [...badges];\r\n    let notifications = [];\r\n\r\n    const updatedTasks = tasks.map((t) =>\r\n      t.id === id\r\n        ? {\r\n            ...t,\r\n            completed: !t.completed,\r\n            completedDate: !t.completed ? today : null,\r\n            pointsAwarded: t.pointsAwarded,\r\n          }\r\n        : t\r\n    );\r\n\r\n    const updatedTask = updatedTasks.find((t) => t.id === id);\r\n    const pointsToAddOrDeduct =\r\n      task.priority === \"High\" ? 30 : task.priority === \"Medium\" ? 20 : 10;\r\n\r\n    if (!task.completed) {\r\n      // Task is being marked as completed\r\n      if (!updatedTask.pointsAwarded) {\r\n        // Only award points if they haven't been awarded yet\r\n        newPoints = points + pointsToAddOrDeduct;\r\n        notifications.push(`🎉 +${pointsToAddOrDeduct} Points! Keep it up!`);\r\n        updatedTask.pointsAwarded = true; // Mark points as awarded\r\n      }\r\n\r\n      // Log the task's hours when completed\r\n      if (task.hours > 0) {\r\n        logStudyHours(task.hours);\r\n      }\r\n\r\n      const highPriorityTasks = updatedTasks.filter(\r\n        (t) => t.priority === \"High\" && t.completed\r\n      ).length;\r\n      if (highPriorityTasks >= 5 && !badges.includes(\"Priority Master\")) {\r\n        newBadges.push(\"Priority Master\");\r\n        notifications.push(\"🏆 Badge Earned: Priority Master!\");\r\n      }\r\n\r\n      const totalCompletedTasks = updatedTasks.filter(\r\n        (t) => t.completed\r\n      ).length;\r\n      if (totalCompletedTasks >= 10 && !badges.includes(\"Task Titan\")) {\r\n        newBadges.push(\"Task Titan\");\r\n        notifications.push(\"🏆 Badge Earned: Task Titan!\");\r\n      }\r\n\r\n      const dueDate = new Date(task.dueDate);\r\n      const todayDate = new Date();\r\n      if (dueDate > todayDate) {\r\n        const earlyTasks = updatedTasks.filter(\r\n          (t) => new Date(t.dueDate) > todayDate && t.completed\r\n        ).length;\r\n        if (earlyTasks >= 3 && !badges.includes(\"Early Bird\")) {\r\n          newBadges.push(\"Early Bird\");\r\n          notifications.push(\"🏆 Badge Earned: Early Bird!\");\r\n        }\r\n      }\r\n\r\n      updateStreak(today);\r\n    } else {\r\n      // Task is being unmarked as completed\r\n      if (updatedTask.pointsAwarded) {\r\n        // Only deduct points if they were previously awarded\r\n        newPoints = points - pointsToAddOrDeduct;\r\n        notifications.push(\r\n          `↩️ -${pointsToAddOrDeduct} Points. Task unmarked as completed.`\r\n        );\r\n        updatedTask.pointsAwarded = false; // Reset pointsAwarded\r\n      }\r\n\r\n      // Deduct the task's hours when uncompleted\r\n      if (task.hours > 0 && task.completedDate) {\r\n        deductStudyHours(task.hours, task.completedDate);\r\n      }\r\n    }\r\n\r\n    setTasks(updatedTasks);\r\n    setPoints(newPoints);\r\n    setBadges(newBadges);\r\n    notifications.forEach((msg) => toast.success(msg));\r\n  };\r\n\r\n  const updateTask = (updatedTask) => {\r\n    setTasks(\r\n      tasks.map((task) => (task.id === updatedTask.id ? updatedTask : task))\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (studyStats.streak >= 7 && !badges.includes(\"Streak Star\")) {\r\n      let newBadges = [...badges, \"Streak Star\"];\r\n      let newPoints = points + 50;\r\n\r\n      setBadges(newBadges);\r\n      setPoints(newPoints);\r\n\r\n      toast.success(\"🏆 Badge Earned: Streak Star!\");\r\n      toast.success(\"🎉 +50 Points for 7-Day Streak!\");\r\n    }\r\n  }, [studyStats.streak]);\r\n\r\n  const nextTheme = getNextTheme();\r\n\r\n  return (\r\n    <div className={`min-h-screen flex flex-col ${themeStyles[currentTheme]}`}>\r\n      <ToastContainer />\r\n      <header className={`p-4 ${headerStyles[currentTheme]}`}>\r\n        <div className=\"container mx-auto flex justify-between items-center\">\r\n          <div className=\"flex items-center space-x-4\">\r\n            <h1 className=\"text-2xl font-bold flex items-center\">\r\n              <BookOpen className=\"w-8 h-8 mr-3\" />\r\n              StudyBuddy AI Planner\r\n            </h1>\r\n            <button\r\n              onClick={handleThemeChange}\r\n              className=\"text-2xl p-2 rounded-full transition-all duration-200 hover:scale-110\"\r\n            >\r\n              <FontAwesomeIcon icon={themeIcons[nextTheme]} />\r\n            </button>\r\n          </div>\r\n          <div\r\n            className={`px-4 py-2 rounded-lg text-sm font-medium ${\r\n              currentTheme === \"Dark Mode\"\r\n                ? \"bg-indigo-800 text-gray-200\"\r\n                : \"bg-white bg-opacity-20 text-white\"\r\n            }`}\r\n          >\r\n            {new Date().toLocaleDateString(\"en-US\", {\r\n              weekday: \"long\",\r\n              year: \"numeric\",\r\n              month: \"long\",\r\n              day: \"numeric\",\r\n            })}\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <nav className={`sticky top-0 z-10 ${navStyles[currentTheme]}`}>\r\n        <div className=\"container mx-auto\">\r\n          <div className=\"flex justify-around md:justify-start md:space-x-8\">\r\n            {[\"dashboard\", \"tasks\", \"analytics\", \"rewards\"].map((tab) => (\r\n              <button\r\n                key={tab}\r\n                onClick={() => setActiveTab(tab)}\r\n                className={`px-4 py-3 font-semibold text-sm transition-all duration-300 relative ${\r\n                  activeTab === tab\r\n                    ? currentTheme === \"Dark Mode\"\r\n                      ? \"text-indigo-400 border-b-2 border-indigo-400\"\r\n                      : currentTheme === \"Ocean Breeze\"\r\n                        ? \"text-teal-600 border-b-2 border-teal-600\"\r\n                        : currentTheme === \"Sunset Glow\"\r\n                          ? \"text-orange-600 border-b-2 border-orange-600\"\r\n                          : currentTheme === \"Forest Whisper\"\r\n                            ? \"text-green-600 border-b-2 border-green-600\"\r\n                            : \"text-indigo-600 border-b-2 border-indigo-600\"\r\n                    : currentTheme === \"Dark Mode\"\r\n                      ? \"text-gray-400 hover:text-gray-200\"\r\n                      : currentTheme === \"Ocean Breeze\"\r\n                        ? \"text-blue-700 hover:text-teal-600\"\r\n                        : currentTheme === \"Sunset Glow\"\r\n                          ? \"text-orange-700 hover:text-orange-600\"\r\n                          : currentTheme === \"Forest Whisper\"\r\n                            ? \"text-green-700 hover:text-green-600\"\r\n                            : \"text-gray-600 hover:text-gray-800\"\r\n                }`}\r\n              >\r\n                {tab.charAt(0).toUpperCase() + tab.slice(1)}\r\n                {activeTab === tab && (\r\n                  <span className=\"absolute inset-x-0 bottom-0 h-0.5 bg-current transform scale-x-100 transition-transform duration-300\" />\r\n                )}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n      <main className=\"flex-grow container mx-auto p-4\">\r\n        {loading ? (\r\n          <div className=\"text-center py-8\">\r\n            <div className=\"animate-pulse flex justify-center space-x-3\">\r\n              <div\r\n                className={`w-5 h-5 rounded-full ${\r\n                  currentTheme === \"Dark Mode\"\r\n                    ? \"bg-indigo-500\"\r\n                    : currentTheme === \"Ocean Breeze\"\r\n                      ? \"bg-teal-500\"\r\n                      : currentTheme === \"Sunset Glow\"\r\n                        ? \"bg-orange-500\"\r\n                        : currentTheme === \"Forest Whisper\"\r\n                          ? \"bg-green-500\"\r\n                          : \"bg-indigo-600\"\r\n                }`}\r\n              ></div>\r\n              <div\r\n                className={`w-5 h-5 rounded-full ${\r\n                  currentTheme === \"Dark Mode\"\r\n                    ? \"bg-indigo-500\"\r\n                    : currentTheme === \"Ocean Breeze\"\r\n                      ? \"bg-teal-500\"\r\n                      : currentTheme === \"Sunset Glow\"\r\n                        ? \"bg-orange-500\"\r\n                        : currentTheme === \"Forest Whisper\"\r\n                          ? \"bg-green-500\"\r\n                          : \"bg-indigo-600\"\r\n                }`}\r\n              ></div>\r\n              <div\r\n                className={`w-5 h-5 rounded-full ${\r\n                  currentTheme === \"Dark Mode\"\r\n                    ? \"bg-indigo-500\"\r\n                    : currentTheme === \"Ocean Breeze\"\r\n                      ? \"bg-teal-500\"\r\n                      : currentTheme === \"Sunset Glow\"\r\n                        ? \"bg-orange-500\"\r\n                        : currentTheme === \"Forest Whisper\"\r\n                          ? \"bg-green-500\"\r\n                          : \"bg-indigo-600\"\r\n                }`}\r\n              ></div>\r\n            </div>\r\n            <p\r\n              className={`mt-3 text-sm font-medium ${\r\n                currentTheme === \"Dark Mode\"\r\n                  ? \"text-gray-400\"\r\n                  : currentTheme === \"Ocean Breeze\"\r\n                    ? \"text-blue-700\"\r\n                    : currentTheme === \"Sunset Glow\"\r\n                      ? \"text-orange-700\"\r\n                      : currentTheme === \"Forest Whisper\"\r\n                        ? \"text-green-700\"\r\n                        : \"text-gray-600\"\r\n              }`}\r\n            >\r\n              Loading your study data...\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"space-y-6\">\r\n            {activeTab === \"dashboard\" && (\r\n              <Dashboard\r\n                tasks={tasks}\r\n                studyStats={studyStats}\r\n                aiSuggestion={aiSuggestion}\r\n                getStudyTips={getStudyTips}\r\n                generateSchedule={generateSchedule}\r\n                setActiveTab={setActiveTab}\r\n                toggleTaskComplete={toggleTaskComplete}\r\n                deleteTask={deleteTask}\r\n                currentTheme={currentTheme}\r\n                logStudyHours={logStudyHours}\r\n              />\r\n            )}\r\n\r\n            {activeTab === \"tasks\" && (\r\n              <TaskManager\r\n                tasks={tasks}\r\n                addTask={addTask}\r\n                updateTask={updateTask}\r\n                deleteTask={deleteTask}\r\n                toggleTaskComplete={toggleTaskComplete}\r\n                currentTheme={currentTheme}\r\n              />\r\n            )}\r\n\r\n            {activeTab === \"analytics\" && (\r\n              <Analytics tasks={tasks} currentTheme={currentTheme} />\r\n            )}\r\n\r\n            {activeTab === \"rewards\" && (\r\n              <Rewards\r\n                points={points}\r\n                badges={badges}\r\n                studyStats={studyStats}\r\n                currentTheme={currentTheme}\r\n                onPointsUpdate={handlePointsUpdate}\r\n                onThemeUnlock={handleThemeUnlock}\r\n                unlockedThemes={unlockedThemes}\r\n                tasks={tasks}\r\n              />\r\n            )}\r\n          </div>\r\n        )}\r\n      </main>\r\n\r\n      <footer className={`py-4 ${themeStyles[currentTheme]}`}>\r\n        <div className=\"container mx-auto text-center\">\r\n          <p\r\n            className={`text-sm ${\r\n              currentTheme === \"Dark Mode\"\r\n                ? \"text-gray-500\"\r\n                : currentTheme === \"Ocean Breeze\"\r\n                  ? \"text-blue-700\"\r\n                  : currentTheme === \"Sunset Glow\"\r\n                    ? \"text-orange-700\"\r\n                    : currentTheme === \"Forest Whisper\"\r\n                      ? \"text-green-700\"\r\n                      : \"text-gray-600\"\r\n            }`}\r\n          >\r\n            © 2025 StudyBuddy AI Planner. All rights reserved.\r\n          </p>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,cAAc;AACvC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SACEC,KAAK,EACLC,MAAM,EACNC,OAAO,EACPC,MAAM,EACNC,MAAM,QACD,mCAAmC;AAC1C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,WAAW,CAAC;EACvD,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC;IAC3CyB,UAAU,EAAE,CAAC;IACbC,cAAc,EAAE,CAAC;IACjBC,MAAM,EAAE,CAAC;IACTC,cAAc,EAAE,IAAI;IACpBC,gBAAgB,EAAE,IAAI;IACtBC,aAAa,EAAE;EACjB,CAAC,CAAC;EACF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiC,MAAM,EAAEC,SAAS,CAAC,GAAGlC,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACmC,MAAM,EAAEC,SAAS,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACqC,YAAY,EAAEC,eAAe,CAAC,GAAGtC,QAAQ,CAAC,YAAY,CAAC;EAC9D,MAAM,CAACuC,cAAc,EAAEC,iBAAiB,CAAC,GAAGxC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;EACpE,MAAM,CAACyC,OAAO,EAAEC,UAAU,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAM2C,MAAM,GAAG,SAAS;;EAExB;EACA,MAAMC,kBAAkB,GAAIC,IAAI,IAAK;IACnC,MAAMC,IAAI,GAAGD,IAAI,CAACE,WAAW,CAAC,CAAC;IAC/B,MAAMC,KAAK,GAAGC,MAAM,CAACJ,IAAI,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IAC5D,MAAMC,GAAG,GAAGH,MAAM,CAACJ,IAAI,CAACQ,OAAO,CAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACnD,OAAO,GAAGL,IAAI,IAAIE,KAAK,IAAII,GAAG,EAAE;EAClC,CAAC;;EAED;EACA,MAAME,WAAW,GAAG;IAClB,YAAY,EAAE,2BAA2B;IACzC,WAAW,EAAE,2BAA2B;IACxC,cAAc,EAAE,0DAA0D;IAC1E,aAAa,EACX,+EAA+E;IACjF,gBAAgB,EACd;EACJ,CAAC;EAED,MAAMC,YAAY,GAAG;IACnB,YAAY,EAAE,oCAAoC;IAClD,WAAW,EAAE,uCAAuC;IACpD,cAAc,EACZ,iEAAiE;IACnE,aAAa,EACX,mEAAmE;IACrE,gBAAgB,EACd;EACJ,CAAC;EAED,MAAMC,SAAS,GAAG;IAChB,YAAY,EAAE,iDAAiD;IAC/D,WAAW,EAAE,oDAAoD;IACjE,cAAc,EAAE,oDAAoD;IACpE,aAAa,EAAE,yDAAyD;IACxE,gBAAgB,EAAE;EACpB,CAAC;;EAED;EACA,MAAMC,UAAU,GAAG;IACjB,YAAY,EAAErD,KAAK;IACnB,WAAW,EAAEC,MAAM;IACnB,cAAc,EAAEC,OAAO;IACvB,aAAa,EAAEC,MAAM;IACrB,gBAAgB,EAAEC;EACpB,CAAC;EAED,MAAMkD,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAInB,cAAc,CAACoB,MAAM,KAAK,CAAC,EAAE;MAC/B,OAAO,YAAY;IACrB;IACA,MAAMC,YAAY,GAAGrB,cAAc,CAACsB,OAAO,CAACxB,YAAY,CAAC;IACzD,MAAMyB,SAAS,GAAG,CAACF,YAAY,GAAG,CAAC,IAAIrB,cAAc,CAACoB,MAAM;IAC5D,OAAOpB,cAAc,CAACuB,SAAS,CAAC;EAClC,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,SAAS,GAAGN,YAAY,CAAC,CAAC;IAChCpB,eAAe,CAAC0B,SAAS,CAAC;IAC1BlD,KAAK,CAACmD,IAAI,CAAC,kBAAkBD,SAAS,GAAG,CAAC;EAC5C,CAAC;EAED,MAAME,kBAAkB,GAAIC,SAAS,IAAK;IACxCjC,SAAS,CAACiC,SAAS,CAAC;EACtB,CAAC;EAED,MAAMC,iBAAiB,GAAIC,SAAS,IAAK;IACvC,IAAI,CAAC9B,cAAc,CAAC+B,QAAQ,CAACD,SAAS,CAAC,EAAE;MACvC7B,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAE8B,SAAS,CAAC,CAAC;IACnD;EACF,CAAC;EAED,MAAME,YAAY,GAAIC,KAAK,IAAK;IAC9BhD,aAAa,CAAEiD,IAAI,IAAK;MACtB,MAAMC,UAAU,GAAGD,IAAI,CAAC7C,cAAc,GAClC,IAAI+C,IAAI,CAACF,IAAI,CAAC7C,cAAc,CAAC,GAC7B,IAAI;MACR,MAAMC,gBAAgB,GAAG4C,IAAI,CAAC5C,gBAAgB,GAC1C,IAAI8C,IAAI,CAACF,IAAI,CAAC5C,gBAAgB,CAAC,GAC/B,IAAI;MACR,MAAM+C,SAAS,GAAG,IAAID,IAAI,CAACH,KAAK,CAAC;MAEjC,IAAIK,SAAS,GAAGJ,IAAI,CAAC9C,MAAM;MAC3B,IAAImD,iBAAiB,GAAGN,KAAK;MAC7B,IAAIO,mBAAmB,GAAGN,IAAI,CAAC5C,gBAAgB;MAE/C,IAAI,CAAC6C,UAAU,IAAIA,UAAU,CAACM,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAKT,KAAK,EAAE;QACnE,IAAIE,UAAU,EAAE;UACd,MAAMQ,QAAQ,GAAGN,SAAS,GAAGF,UAAU;UACvC,MAAMS,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACH,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;UAC5D,IAAIC,QAAQ,KAAK,CAAC,EAAE;YAClBN,SAAS,GAAGJ,IAAI,CAAC9C,MAAM,GAAG,CAAC;YAC3BoD,mBAAmB,GAAGP,KAAK;UAC7B,CAAC,MAAM,IAAIW,QAAQ,GAAG,CAAC,EAAE;YACvBN,SAAS,GAAG,CAAC;YACbE,mBAAmB,GAAGP,KAAK;UAC7B;QACF,CAAC,MAAM;UACLK,SAAS,GAAG,CAAC;UACbE,mBAAmB,GAAGP,KAAK;QAC7B;MACF;MAEA,IACE3C,gBAAgB,IAChB,IAAI8C,IAAI,CAAC9C,gBAAgB,CAAC,CAACmD,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAKT,KAAK,EAChE;QACA,MAAMU,QAAQ,GAAGN,SAAS,GAAG,IAAID,IAAI,CAAC9C,gBAAgB,CAAC;QACvD,MAAMsD,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAACH,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QAC5D,IAAIC,QAAQ,GAAG,CAAC,EAAE;UAChBN,SAAS,GAAG,CAAC;UACbE,mBAAmB,GAAGP,KAAK;QAC7B;MACF;MAEA,MAAMc,QAAQ,GAAG;QACf,GAAGb,IAAI;QACP9C,MAAM,EAAEkD,SAAS;QACjBjD,cAAc,EAAEkD,iBAAiB;QACjCjD,gBAAgB,EAAEkD,mBAAmB;QACrCjD,aAAa,EAAE2C,IAAI,CAAC3C,aAAa,IAAI;MACvC,CAAC;MACDyD,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEF,QAAQ,CAAC;MAC3D,OAAOA,QAAQ;IACjB,CAAC,CAAC;EACJ,CAAC;EAEDrF,SAAS,CAAC,MAAM;IACd,MAAMwF,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QAAA,IAAAC,gBAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,iBAAA;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,kCAAkCtD,MAAM,EAC1C,CAAC;QACD,IAAI,CAACqD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8BH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAClE;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCf,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEa,IAAI,CAAC;;QAElC;QACA,MAAME,YAAY,GAAG,CAACF,IAAI,CAAChF,KAAK,IAAI,EAAE,EAAEmF,GAAG,CAAEC,IAAI;UAAA,IAAAC,mBAAA,EAAAC,WAAA;UAAA,OAAM;YACrD,GAAGF,IAAI;YACPG,aAAa,GAAAF,mBAAA,GAAED,IAAI,CAACG,aAAa,cAAAF,mBAAA,cAAAA,mBAAA,GAAI,KAAK;YAC1CG,KAAK,GAAAF,WAAA,GAAEF,IAAI,CAACI,KAAK,cAAAF,WAAA,cAAAA,WAAA,GAAI,CAAC,CAAE;UAC1B,CAAC;QAAA,CAAC,CAAC;QACHrF,QAAQ,CAACiF,YAAY,CAAC;QAEtB,MAAMO,YAAY,GAAG;UACnBrF,UAAU,EAAE,EAAAiE,gBAAA,GAAAW,IAAI,CAAC9E,UAAU,cAAAmE,gBAAA,uBAAfA,gBAAA,CAAiBjE,UAAU,KAAI,CAAC;UAC5CC,cAAc,EAAE,EAAAiE,iBAAA,GAAAU,IAAI,CAAC9E,UAAU,cAAAoE,iBAAA,uBAAfA,iBAAA,CAAiBjE,cAAc,KAAI,CAAC;UACpDC,MAAM,EAAE,EAAAiE,iBAAA,GAAAS,IAAI,CAAC9E,UAAU,cAAAqE,iBAAA,uBAAfA,iBAAA,CAAiBjE,MAAM,KAAI,CAAC;UACpCC,cAAc,EAAE,EAAAiE,iBAAA,GAAAQ,IAAI,CAAC9E,UAAU,cAAAsE,iBAAA,uBAAfA,iBAAA,CAAiBjE,cAAc,KAAI,IAAI;UACvDC,gBAAgB,EAAE,EAAAiE,iBAAA,GAAAO,IAAI,CAAC9E,UAAU,cAAAuE,iBAAA,uBAAfA,iBAAA,CAAiBjE,gBAAgB,KAAI,IAAI;UAC3DC,aAAa,EAAE,EAAAiE,iBAAA,GAAAM,IAAI,CAAC9E,UAAU,cAAAwE,iBAAA,uBAAfA,iBAAA,CAAiBjE,aAAa,KAAI;QACnD,CAAC;QACDyD,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEsB,YAAY,CAAC;QACxDtF,aAAa,CAACsF,YAAY,CAAC;QAC3B5E,SAAS,CAACmE,IAAI,CAACpE,MAAM,IAAI,CAAC,CAAC;QAC3BG,SAAS,CAACiE,IAAI,CAAClE,MAAM,IAAI,EAAE,CAAC;QAC5BG,eAAe,CAAC+D,IAAI,CAAChE,YAAY,IAAI,YAAY,CAAC;QAClDG,iBAAiB,CAAC6D,IAAI,CAAC9D,cAAc,IAAI,CAAC,YAAY,CAAC,CAAC;QAExD,MAAMiC,KAAK,GAAG5B,kBAAkB,CAAC,IAAI+B,IAAI,CAAC,CAAC,CAAC;QAC5CY,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEhB,KAAK,CAAC;QACnC,MAAM;UAAE5C,cAAc;UAAED,MAAM;UAAEE;QAAiB,CAAC,GAAGiF,YAAY;QAEjE,IAAIxB,QAAQ,GAAG;UAAE,GAAGwB;QAAa,CAAC;QAClC,IAAIjF,gBAAgB,KAAK2C,KAAK,EAAE;UAC9B,IAAI,CAAC5C,cAAc,EAAE;YACnB2D,OAAO,CAACC,GAAG,CAAC,sDAAsD,CAAC;YACnEF,QAAQ,GAAG;cACT,GAAGwB,YAAY;cACflF,cAAc,EAAE4C,KAAK;cACrB3C,gBAAgB,EAAE2C,KAAK;cACvB1C,aAAa,EAAEgF,YAAY,CAAChF,aAAa,IAAI;YAC/C,CAAC;UACH,CAAC,MAAM;YACL,MAAMiF,QAAQ,GAAG,IAAIpC,IAAI,CAAC/C,cAAc,CAAC;YACzC,MAAMoF,WAAW,GAAG,IAAIrC,IAAI,CAACH,KAAK,CAAC;YACnC,MAAMW,QAAQ,GAAG,CAAC6B,WAAW,GAAGD,QAAQ,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YACjExB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEL,QAAQ,CAAC;YAEzC,IAAIA,QAAQ,KAAK,CAAC,EAAE;cAClBG,QAAQ,GAAG;gBACT,GAAGwB,YAAY;gBACfnF,MAAM,EAAEmF,YAAY,CAACnF,MAAM,GAAG,CAAC;gBAC/BC,cAAc,EAAE4C,KAAK;gBACrB3C,gBAAgB,EAAE2C,KAAK;gBACvB1C,aAAa,EAAEgF,YAAY,CAAChF,aAAa,IAAI;cAC/C,CAAC;cACDyD,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEF,QAAQ,CAAC;YACjE,CAAC,MAAM,IAAIH,QAAQ,GAAG,CAAC,EAAE;cACvBG,QAAQ,GAAG;gBACT,GAAGwB,YAAY;gBACfnF,MAAM,EAAE,CAAC;gBACTC,cAAc,EAAE4C,KAAK;gBACrB3C,gBAAgB,EAAE2C,KAAK;gBACvB1C,aAAa,EAAEgF,YAAY,CAAChF,aAAa,IAAI;cAC/C,CAAC;cACDyD,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEF,QAAQ,CAAC;YAC7D,CAAC,MAAM;cACLA,QAAQ,GAAG;gBACT,GAAGwB,YAAY;gBACfjF,gBAAgB,EAAE2C,KAAK;gBACvB1C,aAAa,EAAEgF,YAAY,CAAChF,aAAa,IAAI;cAC/C,CAAC;cACDyD,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEF,QAAQ,CAAC;YACzD;UACF;UACA9D,aAAa,CAAC8D,QAAQ,CAAC;QACzB,CAAC,MAAM;UACLC,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;QAC1D;QAEA,MAAMyB,kBAAkB,GAAGC,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC;QACrE,MAAMC,gBAAgB,GAAGzC,IAAI,CAAC0C,GAAG,CAAC,CAAC;QACnCH,YAAY,CAACI,OAAO,CAAC,oBAAoB,EAAEF,gBAAgB,CAACG,QAAQ,CAAC,CAAC,CAAC;QAEvE,MAAM7C,UAAU,GAAGoC,YAAY,CAAClF,cAAc,GAC1C,IAAI+C,IAAI,CAACmC,YAAY,CAAClF,cAAc,CAAC,CAAC4F,OAAO,CAAC,CAAC,GAC/C,CAAC;QACL,MAAMC,kBAAkB,GAAGR,kBAAkB,GACzCG,gBAAgB,GAAGM,QAAQ,CAACT,kBAAkB,CAAC,GAC/CU,QAAQ;QACZ,MAAMC,mBAAmB,GAAGlD,UAAU,GAClC0C,gBAAgB,GAAG1C,UAAU,GAC7BiD,QAAQ;QAEZE,UAAU,CAAC,MAAM;UACf,MAAMC,eAAe,GAAGvB,YAAY,CAACwB,MAAM,CACxCtB,IAAI,IAAK,CAACA,IAAI,CAACuB,SAClB,CAAC;UACD,IAAIF,eAAe,CAACnE,MAAM,KAAK,CAAC,EAAE;YAChC3B,eAAe,CACb,mEACF,CAAC;YACD;UACF;UAEA,MAAMiG,QAAQ,GAAGrF,kBAAkB,CAAC,IAAI+B,IAAI,CAAC,CAAC,CAAC;UAC/C,MAAMuD,aAAa,GAAG;YAAEC,IAAI,EAAE,CAAC;YAAEC,MAAM,EAAE,CAAC;YAAEC,GAAG,EAAE;UAAE,CAAC;UAEpD,MAAMC,aAAa,GAAG,EAAE;UACxB,MAAMC,YAAY,GAAG,EAAE;UACvB,MAAMC,WAAW,GAAG,EAAE;UAEtBV,eAAe,CAACW,OAAO,CAAEhC,IAAI,IAAK;YAChC,MAAMiC,cAAc,GAAGjC,IAAI,CAACkC,OAAO;YACnC,MAAMxD,QAAQ,GACZ,CAAC,IAAIR,IAAI,CAAC+D,cAAc,CAAC,GAAG,IAAI/D,IAAI,CAACsD,QAAQ,CAAC,KAC7C,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;YAEvB,IAAIS,cAAc,KAAKT,QAAQ,EAAE;cAC/BK,aAAa,CAACM,IAAI,CAACnC,IAAI,CAAC;YAC1B,CAAC,MAAM,IAAItB,QAAQ,GAAG,CAAC,EAAE;cACvBoD,YAAY,CAACK,IAAI,CAAC;gBAAE,GAAGnC,IAAI;gBAAEoC,WAAW,EAAEzD,IAAI,CAAC0D,GAAG,CAAC3D,QAAQ;cAAE,CAAC,CAAC;YACjE,CAAC,MAAM;cACLqD,WAAW,CAACI,IAAI,CAAC;gBAAE,GAAGnC,IAAI;gBAAEoC,WAAW,EAAE1D;cAAS,CAAC,CAAC;YACtD;UACF,CAAC,CAAC;UAEFmD,aAAa,CAACS,IAAI,CAChB,CAACC,CAAC,EAAEC,CAAC,KAAKf,aAAa,CAACe,CAAC,CAACC,QAAQ,CAAC,GAAGhB,aAAa,CAACc,CAAC,CAACE,QAAQ,CAChE,CAAC;UACDX,YAAY,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;YAC1B,IAAID,CAAC,CAACH,WAAW,KAAKI,CAAC,CAACJ,WAAW,EAAE;cACnC,OAAOG,CAAC,CAACH,WAAW,GAAGI,CAAC,CAACJ,WAAW;YACtC;YACA,OAAOX,aAAa,CAACe,CAAC,CAACC,QAAQ,CAAC,GAAGhB,aAAa,CAACc,CAAC,CAACE,QAAQ,CAAC;UAC9D,CAAC,CAAC;UACFV,WAAW,CAACO,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;YACzB,IAAID,CAAC,CAACH,WAAW,KAAKI,CAAC,CAACJ,WAAW,EAAE;cACnC,OAAOG,CAAC,CAACH,WAAW,GAAGI,CAAC,CAACJ,WAAW;YACtC;YACA,OAAOX,aAAa,CAACe,CAAC,CAACC,QAAQ,CAAC,GAAGhB,aAAa,CAACc,CAAC,CAACE,QAAQ,CAAC;UAC9D,CAAC,CAAC;UAEF,IAAIC,eAAe,GAAG,IAAI;UAE1B,IAAIb,aAAa,CAAC3E,MAAM,GAAG,CAAC,EAAE;YAC5BwF,eAAe,GAAGb,aAAa,CAAC,CAAC,CAAC;UACpC,CAAC,MAAM,IAAIC,YAAY,CAAC5E,MAAM,GAAG,CAAC,EAAE;YAClCwF,eAAe,GAAGZ,YAAY,CAAC,CAAC,CAAC;UACnC,CAAC,MAAM,IAAIC,WAAW,CAAC7E,MAAM,GAAG,CAAC,EAAE;YACjCwF,eAAe,GAAGX,WAAW,CAAC,CAAC,CAAC;UAClC;UAEA,IAAIW,eAAe,EAAE;YACnBnH,eAAe,CACb,+EAA+EmH,eAAe,CAACC,KAAK,UACtG,CAAC;UACH,CAAC,MAAM;YACLpH,eAAe,CACb,mEACF,CAAC;UACH;QACF,CAAC,EAAE,IAAI,CAAC;QAERU,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAO2G,GAAG,EAAE;QACZ9D,OAAO,CAAC+D,KAAK,CAAC,2BAA2B,EAAED,GAAG,CAAC;QAC/CvI,KAAK,CAACwI,KAAK,CAAC,mDAAmD,CAAC;QAChEtH,eAAe,CAAC,gCAAgC,CAAC;QACjDU,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED+C,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAENxF,SAAS,CAAC,MAAM;IACdsF,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEjE,UAAU,CAAC;EAC/D,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhBtB,SAAS,CAAC,MAAM;IACd,MAAMsJ,cAAc,GAAGlI,KAAK,CAAC0G,MAAM,CAAEtB,IAAI,IAAKA,IAAI,CAACuB,SAAS,CAAC,CAACrE,MAAM;IACpEnC,aAAa,CAAEgI,SAAS,IAAK;MAC3B,MAAMlE,QAAQ,GAAG;QACf,GAAGkE,SAAS;QACZ9H,cAAc,EAAE6H,cAAc;QAC9BzH,aAAa,EAAE0H,SAAS,CAAC1H,aAAa,IAAI;MAC5C,CAAC;MACDyD,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEF,QAAQ,CAAC;MAC7D,OAAOA,QAAQ;IACjB,CAAC,CAAC;EACJ,CAAC,EAAE,CAACjE,KAAK,CAAC,CAAC;EAEXpB,SAAS,CAAC,MAAM;IACd,MAAMwJ,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,oBAAoB,GAAG;UAC3BjI,UAAU,EAAEF,UAAU,CAACE,UAAU;UACjCC,cAAc,EAAEH,UAAU,CAACG,cAAc;UACzCC,MAAM,EAAEJ,UAAU,CAACI,MAAM;UACzBC,cAAc,EAAEL,UAAU,CAACK,cAAc,IAAI,IAAI;UACjDC,gBAAgB,EAAEN,UAAU,CAACM,gBAAgB,IAAI,IAAI;UACrDC,aAAa,EAAEP,UAAU,CAACO,aAAa,IAAI;QAC7C,CAAC;QAED,MAAM6H,UAAU,GAAG;UACjBtI,KAAK;UACLE,UAAU,EAAEmI,oBAAoB;UAChCzH,MAAM;UACNE,MAAM;UACNyH,MAAM,EAAE,CACN,YAAY,EACZ,WAAW,EACX,cAAc,EACd,aAAa,EACb,gBAAgB,CACjB;UACDvH,YAAY;UACZE;QACF,CAAC;QAEDgD,OAAO,CAACC,GAAG,CACT,0BAA0B,EAC1BqE,IAAI,CAACC,SAAS,CAACH,UAAU,EAAE,IAAI,EAAE,CAAC,CACpC,CAAC;QAED,MAAM3D,QAAQ,GAAG,MAAMC,KAAK,CAC1B,kCAAkCtD,MAAM,EAAE,EAC1C;UACEoH,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEJ,IAAI,CAACC,SAAS,CAACH,UAAU;QACjC,CACF,CAAC;QAEDpE,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEQ,QAAQ,CAACI,MAAM,CAAC;QAChD,MAAM8D,YAAY,GAAG,MAAMlE,QAAQ,CAACmE,IAAI,CAAC,CAAC;QAC1C5E,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAE0E,YAAY,CAAC;QAE3C,IAAI,CAAClE,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CACb,6BAA6BH,QAAQ,CAACI,MAAM,MAAM8D,YAAY,EAChE,CAAC;QACH;QAEA3E,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACxC,CAAC,CAAC,OAAO6D,GAAG,EAAE;QACZ9D,OAAO,CAAC+D,KAAK,CAAC,yBAAyB,EAAED,GAAG,CAAC;QAC7CvI,KAAK,CAACwI,KAAK,CAAC,4BAA4BD,GAAG,CAACe,OAAO,EAAE,CAAC;MACxD;IACF,CAAC;IAED,MAAMC,YAAY,GAAGxC,UAAU,CAAC,MAAM;MACpC4B,YAAY,CAAC,CAAC;IAChB,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMa,YAAY,CAACD,YAAY,CAAC;EACzC,CAAC,EAAE,CAAChJ,KAAK,EAAEE,UAAU,EAAEU,MAAM,EAAEE,MAAM,EAAEE,YAAY,EAAEE,cAAc,CAAC,CAAC;EAErE,MAAMgI,aAAa,GAAI1D,KAAK,IAAK;IAC/B,MAAM2D,WAAW,GAAGC,UAAU,CAAC5D,KAAK,CAAC;IACrC,IAAI6D,KAAK,CAACF,WAAW,CAAC,IAAIA,WAAW,IAAI,CAAC,EAAE;MAC1C1J,KAAK,CAACwI,KAAK,CAAC,sDAAsD,CAAC;MACnE;IACF;IACA,MAAMqB,YAAY,GAAGvF,IAAI,CAACwF,KAAK,CAACJ,WAAW,GAAG,GAAG,CAAC,GAAG,GAAG;IACxD,MAAMhG,KAAK,GAAG5B,kBAAkB,CAAC,IAAI+B,IAAI,CAAC,CAAC,CAAC;IAC5CnD,aAAa,CAAEiD,IAAI,IAAK;MACtB,MAAM3C,aAAa,GAAG2C,IAAI,CAAC3C,aAAa,IAAI,EAAE;MAC9C,MAAM+I,WAAW,GAAG/I,aAAa,CAACgJ,IAAI,CAAEtF,GAAG,IAAKA,GAAG,CAAC3C,IAAI,KAAK2B,KAAK,CAAC;MACnE,IAAIuG,UAAU;MACd,IAAIF,WAAW,EAAE;QACfE,UAAU,GAAGjJ,aAAa,CAAC0E,GAAG,CAAEhB,GAAG,IACjCA,GAAG,CAAC3C,IAAI,KAAK2B,KAAK,GACd;UACE,GAAGgB,GAAG;UACNqB,KAAK,EAAEzB,IAAI,CAACwF,KAAK,CAAC,CAACpF,GAAG,CAACqB,KAAK,GAAG8D,YAAY,IAAI,GAAG,CAAC,GAAG;QACxD,CAAC,GACDnF,GACN,CAAC;MACH,CAAC,MAAM;QACLuF,UAAU,GAAG,CAAC,GAAGjJ,aAAa,EAAE;UAAEe,IAAI,EAAE2B,KAAK;UAAEqC,KAAK,EAAE8D;QAAa,CAAC,CAAC;MACvE;MACA,MAAMrF,QAAQ,GAAG;QACf,GAAGb,IAAI;QACPhD,UAAU,EAAE2D,IAAI,CAACwF,KAAK,CAAC,CAACnG,IAAI,CAAChD,UAAU,GAAGkJ,YAAY,IAAI,GAAG,CAAC,GAAG,GAAG;QACpE7I,aAAa,EAAEiJ;MACjB,CAAC;MACDxF,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEF,QAAQ,CAAC;MAC5D,OAAOA,QAAQ;IACjB,CAAC,CAAC;IACFf,YAAY,CAACC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMwG,gBAAgB,GAAGA,CAACnE,KAAK,EAAEoE,aAAa,KAAK;IACjD,MAAMT,WAAW,GAAGC,UAAU,CAAC5D,KAAK,CAAC;IACrC,IAAI6D,KAAK,CAACF,WAAW,CAAC,IAAIA,WAAW,IAAI,CAAC,EAAE;IAC5C,MAAMG,YAAY,GAAGvF,IAAI,CAACwF,KAAK,CAACJ,WAAW,GAAG,GAAG,CAAC,GAAG,GAAG;IACxDhJ,aAAa,CAAEiD,IAAI,IAAK;MACtB,MAAM3C,aAAa,GAAG2C,IAAI,CAAC3C,aAAa,IAAI,EAAE;MAC9C,MAAMoJ,OAAO,GAAGD,aAAa,CAAC,CAAC;MAC/B,MAAMJ,WAAW,GAAG/I,aAAa,CAACgJ,IAAI,CAAEtF,GAAG,IAAKA,GAAG,CAAC3C,IAAI,KAAKqI,OAAO,CAAC;MACrE,IAAIH,UAAU;MACd,IAAIF,WAAW,EAAE;QACf,MAAMM,QAAQ,GAAG/F,IAAI,CAACgG,GAAG,CAAC,CAAC,EAAEP,WAAW,CAAChE,KAAK,GAAG8D,YAAY,CAAC;QAC9DI,UAAU,GAAGjJ,aAAa,CACvB0E,GAAG,CAAEhB,GAAG,IACPA,GAAG,CAAC3C,IAAI,KAAKqI,OAAO,GAChB;UAAE,GAAG1F,GAAG;UAAEqB,KAAK,EAAEzB,IAAI,CAACwF,KAAK,CAACO,QAAQ,GAAG,GAAG,CAAC,GAAG;QAAI,CAAC,GACnD3F,GACN,CAAC,CACAuC,MAAM,CAAEvC,GAAG,IAAKA,GAAG,CAACqB,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;MACrC,CAAC,MAAM;QACLkE,UAAU,GAAGjJ,aAAa;MAC5B;MACA,MAAMuJ,aAAa,GAAGjG,IAAI,CAACgG,GAAG,CAAC,CAAC,EAAE3G,IAAI,CAAChD,UAAU,GAAGkJ,YAAY,CAAC;MACjE,MAAMrF,QAAQ,GAAG;QACf,GAAGb,IAAI;QACPhD,UAAU,EAAE2D,IAAI,CAACwF,KAAK,CAACS,aAAa,GAAG,GAAG,CAAC,GAAG,GAAG;QACjDvJ,aAAa,EAAEiJ;MACjB,CAAC;MACDxF,OAAO,CAACC,GAAG,CAAC,wCAAwC,EAAEF,QAAQ,CAAC;MAC/D,OAAOA,QAAQ;IACjB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMgG,YAAY,GAAGA,CAAA,KAAM;IACzBtJ,eAAe,CAAC,4BAA4B,CAAC;IAC7C6F,UAAU,CAAC,MAAM;MACf,MAAM0D,IAAI,GAAG,CACX,6FAA6F,EAC7F,4EAA4E,EAC5E,mEAAmE,EACnE,wEAAwE,EACxE,uEAAuE,CACxE;MACD,MAAMC,SAAS,GAAGD,IAAI,CAACnG,IAAI,CAACqG,KAAK,CAACrG,IAAI,CAACsG,MAAM,CAAC,CAAC,GAAGH,IAAI,CAAC5H,MAAM,CAAC,CAAC;MAC/D3B,eAAe,CAACwJ,SAAS,CAAC;IAC5B,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMG,gBAAgB,GAAGA,CAAA,KAAM;IAC7B3J,eAAe,CAAC,2CAA2C,CAAC;IAC5D6F,UAAU,CAAC,MAAM;MACf,MAAMrD,KAAK,GAAG,IAAIG,IAAI,CAAC,CAAC;MACxB,MAAMsD,QAAQ,GAAGrF,kBAAkB,CAAC4B,KAAK,CAAC;MAC1C,MAAMoH,IAAI,GAAG,CACX,QAAQ,EACR,QAAQ,EACR,SAAS,EACT,WAAW,EACX,UAAU,EACV,QAAQ,EACR,UAAU,CACX;MACD,MAAMC,QAAQ,GAAGD,IAAI,CAACpH,KAAK,CAACsH,MAAM,CAAC,CAAC,CAAC;MAErC,MAAMhE,eAAe,GAAGzG,KAAK,CAAC0G,MAAM,CAAEtB,IAAI,IAAK,CAACA,IAAI,CAACuB,SAAS,CAAC;MAC/D,IAAIF,eAAe,CAACnE,MAAM,KAAK,CAAC,EAAE;QAChC3B,eAAe,CACb,0EACF,CAAC;QACD;MACF;MAEA,MAAMsG,aAAa,GAAG,EAAE;MACxB,MAAMC,YAAY,GAAG,EAAE;MACvB,MAAMwD,sBAAsB,GAAG,EAAE;MACjC,MAAMC,gBAAgB,GAAG,EAAE;MAE3BlE,eAAe,CAACW,OAAO,CAAEhC,IAAI,IAAK;QAChC,MAAMwF,WAAW,GAAG,IAAItH,IAAI,CAAC8B,IAAI,CAACkC,OAAO,CAAC;QAC1C,MAAMD,cAAc,GAAGjC,IAAI,CAACkC,OAAO;QACnC,MAAMxD,QAAQ,GACZ,CAAC,IAAIR,IAAI,CAAC+D,cAAc,CAAC,GAAG,IAAI/D,IAAI,CAACsD,QAAQ,CAAC,KAC7C,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;QAEvB,IAAIS,cAAc,KAAKT,QAAQ,EAAE;UAC/BK,aAAa,CAACM,IAAI,CAACnC,IAAI,CAAC;QAC1B,CAAC,MAAM,IAAItB,QAAQ,GAAG,CAAC,EAAE;UACvBoD,YAAY,CAACK,IAAI,CAAC;YAAE,GAAGnC,IAAI;YAAEoC,WAAW,EAAEzD,IAAI,CAAC0D,GAAG,CAAC3D,QAAQ;UAAE,CAAC,CAAC;QACjE,CAAC,MAAM;UACL,IAAIA,QAAQ,KAAK,CAAC,EAAE;YAClB4G,sBAAsB,CAACnD,IAAI,CAAC;cAAE,GAAGnC,IAAI;cAAEoC,WAAW,EAAE1D;YAAS,CAAC,CAAC;UACjE,CAAC,MAAM;YACL6G,gBAAgB,CAACpD,IAAI,CAAC;cAAE,GAAGnC,IAAI;cAAEoC,WAAW,EAAE1D;YAAS,CAAC,CAAC;UAC3D;QACF;MACF,CAAC,CAAC;MAEF,MAAM+C,aAAa,GAAG;QAAEC,IAAI,EAAE,CAAC;QAAEC,MAAM,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAE,CAAC;MAEpDC,aAAa,CAACS,IAAI,CAChB,CAACC,CAAC,EAAEC,CAAC,KAAKf,aAAa,CAACe,CAAC,CAACC,QAAQ,CAAC,GAAGhB,aAAa,CAACc,CAAC,CAACE,QAAQ,CAChE,CAAC;MAEDX,YAAY,CAACQ,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC1B,IAAID,CAAC,CAACH,WAAW,KAAKI,CAAC,CAACJ,WAAW,EAAE;UACnC,OAAOG,CAAC,CAACH,WAAW,GAAGI,CAAC,CAACJ,WAAW;QACtC;QACA,OAAOX,aAAa,CAACe,CAAC,CAACC,QAAQ,CAAC,GAAGhB,aAAa,CAACc,CAAC,CAACE,QAAQ,CAAC;MAC9D,CAAC,CAAC;MAEF6C,sBAAsB,CAAChD,IAAI,CACzB,CAACC,CAAC,EAAEC,CAAC,KAAKf,aAAa,CAACe,CAAC,CAACC,QAAQ,CAAC,GAAGhB,aAAa,CAACc,CAAC,CAACE,QAAQ,CAChE,CAAC;MAED8C,gBAAgB,CAACjD,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC9B,IAAID,CAAC,CAACH,WAAW,KAAKI,CAAC,CAACJ,WAAW,EAAE;UACnC,OAAOG,CAAC,CAACH,WAAW,GAAGI,CAAC,CAACJ,WAAW;QACtC;QACA,OAAOX,aAAa,CAACe,CAAC,CAACC,QAAQ,CAAC,GAAGhB,aAAa,CAACc,CAAC,CAACE,QAAQ,CAAC;MAC9D,CAAC,CAAC;MAEF,MAAMgD,QAAQ,GAAG;QACf1H,KAAK,EAAE,EAAE;QACT2H,UAAU,EAAE;MACd,CAAC;MAED,MAAMC,QAAQ,GAAIlD,QAAQ,IAAK;QAC7B,OAAOA,QAAQ,KAAK,MAAM,GAAG,CAAC,GAAGA,QAAQ,KAAK,QAAQ,GAAG,GAAG,GAAG,CAAC;MAClE,CAAC;MAEDZ,aAAa,CAACG,OAAO,CAAEhC,IAAI,IAAK;QAC9B,MAAMI,KAAK,GAAGJ,IAAI,CAACI,KAAK,IAAIuF,QAAQ,CAAC3F,IAAI,CAACyC,QAAQ,CAAC,CAAC,CAAC;QACrDgD,QAAQ,CAAC1H,KAAK,CAACoE,IAAI,CAAC,GAAGnC,IAAI,CAAC2C,KAAK,KAAKvC,KAAK,SAAS,CAAC;MACvD,CAAC,CAAC;MAEF0B,YAAY,CAACE,OAAO,CAAEhC,IAAI,IAAK;QAC7B,MAAMI,KAAK,GAAGJ,IAAI,CAACI,KAAK,IAAIuF,QAAQ,CAAC3F,IAAI,CAACyC,QAAQ,CAAC;QACnDgD,QAAQ,CAAC1H,KAAK,CAACoE,IAAI,CAAC,GAAGnC,IAAI,CAAC2C,KAAK,KAAKvC,KAAK,SAAS,CAAC;MACvD,CAAC,CAAC;MAEFkF,sBAAsB,CAACtD,OAAO,CAAEhC,IAAI,IAAK;QACvC,MAAMI,KAAK,GAAGJ,IAAI,CAACI,KAAK,IAAIuF,QAAQ,CAAC3F,IAAI,CAACyC,QAAQ,CAAC;QACnDgD,QAAQ,CAAC1H,KAAK,CAACoE,IAAI,CAAC,GAAGnC,IAAI,CAAC2C,KAAK,KAAKvC,KAAK,SAAS,CAAC;MACvD,CAAC,CAAC;MAEFmF,gBAAgB,CAACvD,OAAO,CAAEhC,IAAI,IAAK;QACjC,MAAMwF,WAAW,GAAG,IAAItH,IAAI,CAAC8B,IAAI,CAACkC,OAAO,CAAC;QAC1C,MAAMxD,QAAQ,GAAGsB,IAAI,CAACoC,WAAW;QACjC,MAAMhC,KAAK,GAAGJ,IAAI,CAACI,KAAK,IAAIuF,QAAQ,CAAC3F,IAAI,CAACyC,QAAQ,CAAC;QAEnD,MAAMmD,YAAY,GAAG,IAAI1H,IAAI,CAACsH,WAAW,CAAC;QAC1CI,YAAY,CAACC,OAAO,CAACL,WAAW,CAAC5I,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;QAC/C,MAAMkJ,eAAe,GAAGF,YAAY,CAACrH,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAChE,MAAMuH,WAAW,GAAGZ,IAAI,CAACS,YAAY,CAACP,MAAM,CAAC,CAAC,CAAC;QAE/C,IAAIW,QAAQ,GAAGP,QAAQ,CAACC,UAAU,CAACrB,IAAI,CACpC4B,KAAK,IACJA,KAAK,CAACC,OAAO,KAAKH,WAAW,IAAIE,KAAK,CAAC7J,IAAI,KAAK0J,eACpD,CAAC;QACD,IAAI,CAACE,QAAQ,EAAE;UACbA,QAAQ,GAAG;YAAEE,OAAO,EAAEH,WAAW;YAAE3J,IAAI,EAAE0J,eAAe;YAAElL,KAAK,EAAE;UAAG,CAAC;UACrE6K,QAAQ,CAACC,UAAU,CAACvD,IAAI,CAAC6D,QAAQ,CAAC;QACpC;QACAA,QAAQ,CAACpL,KAAK,CAACuH,IAAI,CAAC,GAAGnC,IAAI,CAAC2C,KAAK,KAAKvC,KAAK,SAAS,CAAC;MACvD,CAAC,CAAC;MAEFqF,QAAQ,CAACC,UAAU,CAACpD,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAItE,IAAI,CAACqE,CAAC,CAACnG,IAAI,CAAC,GAAG,IAAI8B,IAAI,CAACsE,CAAC,CAACpG,IAAI,CAAC,CAAC;MAEvE,MAAM+J,eAAe,GAAG,CACtB,mFAAmF,CACpF;MAED,IAAIV,QAAQ,CAAC1H,KAAK,CAACb,MAAM,GAAG,CAAC,EAAE;QAC7BiJ,eAAe,CAAChE,IAAI,CAAC,KAAKiD,QAAQ,WAAW,CAAC;QAC9CK,QAAQ,CAAC1H,KAAK,CAACiE,OAAO,CAAEoE,SAAS,IAAK;UACpCD,eAAe,CAAChE,IAAI,CAAC,OAAOiE,SAAS,EAAE,CAAC;QAC1C,CAAC,CAAC;MACJ;MAEAX,QAAQ,CAACC,UAAU,CAAC1D,OAAO,CAAErF,GAAG,IAAK;QACnCwJ,eAAe,CAAChE,IAAI,CAAC,KAAKxF,GAAG,CAACuJ,OAAO,KAAKvJ,GAAG,CAACP,IAAI,IAAI,CAAC;QACvDO,GAAG,CAAC/B,KAAK,CAACoH,OAAO,CAAEoE,SAAS,IAAK;UAC/BD,eAAe,CAAChE,IAAI,CAAC,OAAOiE,SAAS,EAAE,CAAC;QAC1C,CAAC,CAAC;MACJ,CAAC,CAAC;MAEF,IAAIX,QAAQ,CAAC1H,KAAK,CAACb,MAAM,KAAK,CAAC,IAAIuI,QAAQ,CAACC,UAAU,CAACxI,MAAM,KAAK,CAAC,EAAE;QACnEiJ,eAAe,CAAChE,IAAI,CAAC,gDAAgD,CAAC;MACxE;MAEA5G,eAAe,CAAC4K,eAAe,CAACE,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7C,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMC,OAAO,GAAIC,OAAO,IAAK;IAC3B,MAAMvG,IAAI,GAAG;MACXwG,EAAE,EAAEtI,IAAI,CAAC0C,GAAG,CAAC,CAAC;MACd,GAAG2F,OAAO;MACV/B,aAAa,EAAE,IAAI;MACnBrE,aAAa,EAAE,KAAK;MACpBC,KAAK,EAAEmG,OAAO,CAACnG,KAAK,IAAI,CAAC,CAAE;IAC7B,CAAC;IACDvF,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEoF,IAAI,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMyG,UAAU,GAAID,EAAE,IAAK;IACzB3L,QAAQ,CAACD,KAAK,CAAC0G,MAAM,CAAEtB,IAAI,IAAKA,IAAI,CAACwG,EAAE,KAAKA,EAAE,CAAC,CAAC;EAClD,CAAC;EAED,MAAME,kBAAkB,GAAIF,EAAE,IAAK;IACjC,MAAMxG,IAAI,GAAGpF,KAAK,CAACyJ,IAAI,CAAErE,IAAI,IAAKA,IAAI,CAACwG,EAAE,KAAKA,EAAE,CAAC;IACjD,IAAI,CAACxG,IAAI,EAAE;IAEX,MAAMjC,KAAK,GAAG5B,kBAAkB,CAAC,IAAI+B,IAAI,CAAC,CAAC,CAAC;IAC5C,IAAIR,SAAS,GAAGlC,MAAM;IACtB,IAAImL,SAAS,GAAG,CAAC,GAAGjL,MAAM,CAAC;IAC3B,IAAIkL,aAAa,GAAG,EAAE;IAEtB,MAAMC,YAAY,GAAGjM,KAAK,CAACmF,GAAG,CAAE+G,CAAC,IAC/BA,CAAC,CAACN,EAAE,KAAKA,EAAE,GACP;MACE,GAAGM,CAAC;MACJvF,SAAS,EAAE,CAACuF,CAAC,CAACvF,SAAS;MACvBiD,aAAa,EAAE,CAACsC,CAAC,CAACvF,SAAS,GAAGxD,KAAK,GAAG,IAAI;MAC1CoC,aAAa,EAAE2G,CAAC,CAAC3G;IACnB,CAAC,GACD2G,CACN,CAAC;IAED,MAAMC,WAAW,GAAGF,YAAY,CAACxC,IAAI,CAAEyC,CAAC,IAAKA,CAAC,CAACN,EAAE,KAAKA,EAAE,CAAC;IACzD,MAAMQ,mBAAmB,GACvBhH,IAAI,CAACyC,QAAQ,KAAK,MAAM,GAAG,EAAE,GAAGzC,IAAI,CAACyC,QAAQ,KAAK,QAAQ,GAAG,EAAE,GAAG,EAAE;IAEtE,IAAI,CAACzC,IAAI,CAACuB,SAAS,EAAE;MACnB;MACA,IAAI,CAACwF,WAAW,CAAC5G,aAAa,EAAE;QAC9B;QACAzC,SAAS,GAAGlC,MAAM,GAAGwL,mBAAmB;QACxCJ,aAAa,CAACzE,IAAI,CAAC,OAAO6E,mBAAmB,sBAAsB,CAAC;QACpED,WAAW,CAAC5G,aAAa,GAAG,IAAI,CAAC,CAAC;MACpC;;MAEA;MACA,IAAIH,IAAI,CAACI,KAAK,GAAG,CAAC,EAAE;QAClB0D,aAAa,CAAC9D,IAAI,CAACI,KAAK,CAAC;MAC3B;MAEA,MAAM6G,iBAAiB,GAAGJ,YAAY,CAACvF,MAAM,CAC1CwF,CAAC,IAAKA,CAAC,CAACrE,QAAQ,KAAK,MAAM,IAAIqE,CAAC,CAACvF,SACpC,CAAC,CAACrE,MAAM;MACR,IAAI+J,iBAAiB,IAAI,CAAC,IAAI,CAACvL,MAAM,CAACmC,QAAQ,CAAC,iBAAiB,CAAC,EAAE;QACjE8I,SAAS,CAACxE,IAAI,CAAC,iBAAiB,CAAC;QACjCyE,aAAa,CAACzE,IAAI,CAAC,mCAAmC,CAAC;MACzD;MAEA,MAAM+E,mBAAmB,GAAGL,YAAY,CAACvF,MAAM,CAC5CwF,CAAC,IAAKA,CAAC,CAACvF,SACX,CAAC,CAACrE,MAAM;MACR,IAAIgK,mBAAmB,IAAI,EAAE,IAAI,CAACxL,MAAM,CAACmC,QAAQ,CAAC,YAAY,CAAC,EAAE;QAC/D8I,SAAS,CAACxE,IAAI,CAAC,YAAY,CAAC;QAC5ByE,aAAa,CAACzE,IAAI,CAAC,8BAA8B,CAAC;MACpD;MAEA,MAAMD,OAAO,GAAG,IAAIhE,IAAI,CAAC8B,IAAI,CAACkC,OAAO,CAAC;MACtC,MAAM/D,SAAS,GAAG,IAAID,IAAI,CAAC,CAAC;MAC5B,IAAIgE,OAAO,GAAG/D,SAAS,EAAE;QACvB,MAAMgJ,UAAU,GAAGN,YAAY,CAACvF,MAAM,CACnCwF,CAAC,IAAK,IAAI5I,IAAI,CAAC4I,CAAC,CAAC5E,OAAO,CAAC,GAAG/D,SAAS,IAAI2I,CAAC,CAACvF,SAC9C,CAAC,CAACrE,MAAM;QACR,IAAIiK,UAAU,IAAI,CAAC,IAAI,CAACzL,MAAM,CAACmC,QAAQ,CAAC,YAAY,CAAC,EAAE;UACrD8I,SAAS,CAACxE,IAAI,CAAC,YAAY,CAAC;UAC5ByE,aAAa,CAACzE,IAAI,CAAC,8BAA8B,CAAC;QACpD;MACF;MAEArE,YAAY,CAACC,KAAK,CAAC;IACrB,CAAC,MAAM;MACL;MACA,IAAIgJ,WAAW,CAAC5G,aAAa,EAAE;QAC7B;QACAzC,SAAS,GAAGlC,MAAM,GAAGwL,mBAAmB;QACxCJ,aAAa,CAACzE,IAAI,CAChB,OAAO6E,mBAAmB,sCAC5B,CAAC;QACDD,WAAW,CAAC5G,aAAa,GAAG,KAAK,CAAC,CAAC;MACrC;;MAEA;MACA,IAAIH,IAAI,CAACI,KAAK,GAAG,CAAC,IAAIJ,IAAI,CAACwE,aAAa,EAAE;QACxCD,gBAAgB,CAACvE,IAAI,CAACI,KAAK,EAAEJ,IAAI,CAACwE,aAAa,CAAC;MAClD;IACF;IAEA3J,QAAQ,CAACgM,YAAY,CAAC;IACtBpL,SAAS,CAACiC,SAAS,CAAC;IACpB/B,SAAS,CAACgL,SAAS,CAAC;IACpBC,aAAa,CAAC5E,OAAO,CAAEoF,GAAG,IAAK/M,KAAK,CAACgN,OAAO,CAACD,GAAG,CAAC,CAAC;EACpD,CAAC;EAED,MAAME,UAAU,GAAIP,WAAW,IAAK;IAClClM,QAAQ,CACND,KAAK,CAACmF,GAAG,CAAEC,IAAI,IAAMA,IAAI,CAACwG,EAAE,KAAKO,WAAW,CAACP,EAAE,GAAGO,WAAW,GAAG/G,IAAK,CACvE,CAAC;EACH,CAAC;EAEDxG,SAAS,CAAC,MAAM;IACd,IAAIsB,UAAU,CAACI,MAAM,IAAI,CAAC,IAAI,CAACQ,MAAM,CAACmC,QAAQ,CAAC,aAAa,CAAC,EAAE;MAC7D,IAAI8I,SAAS,GAAG,CAAC,GAAGjL,MAAM,EAAE,aAAa,CAAC;MAC1C,IAAIgC,SAAS,GAAGlC,MAAM,GAAG,EAAE;MAE3BG,SAAS,CAACgL,SAAS,CAAC;MACpBlL,SAAS,CAACiC,SAAS,CAAC;MAEpBrD,KAAK,CAACgN,OAAO,CAAC,+BAA+B,CAAC;MAC9ChN,KAAK,CAACgN,OAAO,CAAC,iCAAiC,CAAC;IAClD;EACF,CAAC,EAAE,CAACvM,UAAU,CAACI,MAAM,CAAC,CAAC;EAEvB,MAAMqC,SAAS,GAAGN,YAAY,CAAC,CAAC;EAEhC,oBACE1C,OAAA;IAAKgN,SAAS,EAAE,8BAA8B1K,WAAW,CAACjB,YAAY,CAAC,EAAG;IAAA4L,QAAA,gBACxEjN,OAAA,CAACH,cAAc;MAAAqN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClBrN,OAAA;MAAQgN,SAAS,EAAE,OAAOzK,YAAY,CAAClB,YAAY,CAAC,EAAG;MAAA4L,QAAA,eACrDjN,OAAA;QAAKgN,SAAS,EAAC,qDAAqD;QAAAC,QAAA,gBAClEjN,OAAA;UAAKgN,SAAS,EAAC,6BAA6B;UAAAC,QAAA,gBAC1CjN,OAAA;YAAIgN,SAAS,EAAC,sCAAsC;YAAAC,QAAA,gBAClDjN,OAAA,CAACd,QAAQ;cAAC8N,SAAS,EAAC;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,yBAEvC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACLrN,OAAA;YACEsN,OAAO,EAAEvK,iBAAkB;YAC3BiK,SAAS,EAAC,uEAAuE;YAAAC,QAAA,eAEjFjN,OAAA,CAACb,eAAe;cAACoO,IAAI,EAAE9K,UAAU,CAACO,SAAS;YAAE;cAAAkK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNrN,OAAA;UACEgN,SAAS,EAAE,4CACT3L,YAAY,KAAK,WAAW,GACxB,6BAA6B,GAC7B,mCAAmC,EACtC;UAAA4L,QAAA,EAEF,IAAItJ,IAAI,CAAC,CAAC,CAAC6J,kBAAkB,CAAC,OAAO,EAAE;YACtCC,OAAO,EAAE,MAAM;YACf3L,IAAI,EAAE,SAAS;YACfE,KAAK,EAAE,MAAM;YACbI,GAAG,EAAE;UACP,CAAC;QAAC;UAAA8K,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAETrN,OAAA;MAAKgN,SAAS,EAAE,qBAAqBxK,SAAS,CAACnB,YAAY,CAAC,EAAG;MAAA4L,QAAA,eAC7DjN,OAAA;QAAKgN,SAAS,EAAC,mBAAmB;QAAAC,QAAA,eAChCjN,OAAA;UAAKgN,SAAS,EAAC,mDAAmD;UAAAC,QAAA,EAC/D,CAAC,WAAW,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,CAAC,CAACzH,GAAG,CAAEkI,GAAG,iBACtD1N,OAAA;YAEEsN,OAAO,EAAEA,CAAA,KAAMlN,YAAY,CAACsN,GAAG,CAAE;YACjCV,SAAS,EAAE,wEACT7M,SAAS,KAAKuN,GAAG,GACbrM,YAAY,KAAK,WAAW,GAC1B,8CAA8C,GAC9CA,YAAY,KAAK,cAAc,GAC7B,0CAA0C,GAC1CA,YAAY,KAAK,aAAa,GAC5B,8CAA8C,GAC9CA,YAAY,KAAK,gBAAgB,GAC/B,4CAA4C,GAC5C,8CAA8C,GACtDA,YAAY,KAAK,WAAW,GAC1B,mCAAmC,GACnCA,YAAY,KAAK,cAAc,GAC7B,mCAAmC,GACnCA,YAAY,KAAK,aAAa,GAC5B,uCAAuC,GACvCA,YAAY,KAAK,gBAAgB,GAC/B,qCAAqC,GACrC,mCAAmC,EAC9C;YAAA4L,QAAA,GAEFS,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,GAAG,CAACG,KAAK,CAAC,CAAC,CAAC,EAC1C1N,SAAS,KAAKuN,GAAG,iBAChB1N,OAAA;cAAMgN,SAAS,EAAC;YAAsG;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CACzH;UAAA,GA3BIK,GAAG;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA4BF,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENrN,OAAA;MAAMgN,SAAS,EAAC,iCAAiC;MAAAC,QAAA,EAC9CxL,OAAO,gBACNzB,OAAA;QAAKgN,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BjN,OAAA;UAAKgN,SAAS,EAAC,6CAA6C;UAAAC,QAAA,gBAC1DjN,OAAA;YACEgN,SAAS,EAAE,wBACT3L,YAAY,KAAK,WAAW,GACxB,eAAe,GACfA,YAAY,KAAK,cAAc,GAC7B,aAAa,GACbA,YAAY,KAAK,aAAa,GAC5B,eAAe,GACfA,YAAY,KAAK,gBAAgB,GAC/B,cAAc,GACd,eAAe;UACxB;YAAA6L,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACPrN,OAAA;YACEgN,SAAS,EAAE,wBACT3L,YAAY,KAAK,WAAW,GACxB,eAAe,GACfA,YAAY,KAAK,cAAc,GAC7B,aAAa,GACbA,YAAY,KAAK,aAAa,GAC5B,eAAe,GACfA,YAAY,KAAK,gBAAgB,GAC/B,cAAc,GACd,eAAe;UACxB;YAAA6L,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACPrN,OAAA;YACEgN,SAAS,EAAE,wBACT3L,YAAY,KAAK,WAAW,GACxB,eAAe,GACfA,YAAY,KAAK,cAAc,GAC7B,aAAa,GACbA,YAAY,KAAK,aAAa,GAC5B,eAAe,GACfA,YAAY,KAAK,gBAAgB,GAC/B,cAAc,GACd,eAAe;UACxB;YAAA6L,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACNrN,OAAA;UACEgN,SAAS,EAAE,4BACT3L,YAAY,KAAK,WAAW,GACxB,eAAe,GACfA,YAAY,KAAK,cAAc,GAC7B,eAAe,GACfA,YAAY,KAAK,aAAa,GAC5B,iBAAiB,GACjBA,YAAY,KAAK,gBAAgB,GAC/B,gBAAgB,GAChB,eAAe,EACxB;UAAA4L,QAAA,EACJ;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,gBAENrN,OAAA;QAAKgN,SAAS,EAAC,WAAW;QAAAC,QAAA,GACvB9M,SAAS,KAAK,WAAW,iBACxBH,OAAA,CAACP,SAAS;UACRY,KAAK,EAAEA,KAAM;UACbE,UAAU,EAAEA,UAAW;UACvBQ,YAAY,EAAEA,YAAa;UAC3BuJ,YAAY,EAAEA,YAAa;UAC3BK,gBAAgB,EAAEA,gBAAiB;UACnCvK,YAAY,EAAEA,YAAa;UAC3B+L,kBAAkB,EAAEA,kBAAmB;UACvCD,UAAU,EAAEA,UAAW;UACvB7K,YAAY,EAAEA,YAAa;UAC3BkI,aAAa,EAAEA;QAAc;UAAA2D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CACF,EAEAlN,SAAS,KAAK,OAAO,iBACpBH,OAAA,CAACN,WAAW;UACVW,KAAK,EAAEA,KAAM;UACb0L,OAAO,EAAEA,OAAQ;UACjBgB,UAAU,EAAEA,UAAW;UACvBb,UAAU,EAAEA,UAAW;UACvBC,kBAAkB,EAAEA,kBAAmB;UACvC9K,YAAY,EAAEA;QAAa;UAAA6L,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CACF,EAEAlN,SAAS,KAAK,WAAW,iBACxBH,OAAA,CAACL,SAAS;UAACU,KAAK,EAAEA,KAAM;UAACgB,YAAY,EAAEA;QAAa;UAAA6L,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CACvD,EAEAlN,SAAS,KAAK,SAAS,iBACtBH,OAAA,CAACJ,OAAO;UACNqB,MAAM,EAAEA,MAAO;UACfE,MAAM,EAAEA,MAAO;UACfZ,UAAU,EAAEA,UAAW;UACvBc,YAAY,EAAEA,YAAa;UAC3ByM,cAAc,EAAE5K,kBAAmB;UACnC6K,aAAa,EAAE3K,iBAAkB;UACjC7B,cAAc,EAAEA,cAAe;UAC/BlB,KAAK,EAAEA;QAAM;UAAA6M,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eAEPrN,OAAA;MAAQgN,SAAS,EAAE,QAAQ1K,WAAW,CAACjB,YAAY,CAAC,EAAG;MAAA4L,QAAA,eACrDjN,OAAA;QAAKgN,SAAS,EAAC,+BAA+B;QAAAC,QAAA,eAC5CjN,OAAA;UACEgN,SAAS,EAAE,WACT3L,YAAY,KAAK,WAAW,GACxB,eAAe,GACfA,YAAY,KAAK,cAAc,GAC7B,eAAe,GACfA,YAAY,KAAK,aAAa,GAC5B,iBAAiB,GACjBA,YAAY,KAAK,gBAAgB,GAC/B,gBAAgB,GAChB,eAAe,EACxB;UAAA4L,QAAA,EACJ;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACnN,EAAA,CA38BQD,MAAM;AAAA+N,EAAA,GAAN/N,MAAM;AA68Bf,eAAeA,MAAM;AAAC,IAAA+N,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}