{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final Project\\\\study-buddy-planner\\\\src\\\\components\\\\Layout.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { AppContext } from \"./StudyBuddyPlanner\";\nimport { getStudySuggestion } from \"../services/aiService\";\nimport Dashboard from \"./Dashboard\";\nimport TaskManager from \"./TaskManager\";\nimport Analytics from \"./Analytics\";\nimport Rewards from \"./Rewards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Layout() {\n  _s();\n  // Use context for state management\n  const {\n    tasks,\n    setTasks,\n    studyStats,\n    setStudyStats,\n    points,\n    setPoints,\n    badges,\n    setBadges,\n    currentTheme,\n    setCurrentTheme\n  } = useContext(AppContext);\n  const [activeTab, setActiveTab] = useState(\"dashboard\");\n  const [aiSuggestion, setAiSuggestion] = useState(\"\");\n  const [isLoadingAi, setIsLoadingAi] = useState(false);\n\n  // Offline support: Load data from local storage on mount\n  useEffect(() => {\n    const cachedData = localStorage.getItem(\"studyBuddyData\");\n    if (cachedData) {\n      const {\n        tasks,\n        studyStats,\n        points,\n        badges,\n        currentTheme\n      } = JSON.parse(cachedData);\n      setTasks(tasks || []);\n      setStudyStats(studyStats || {\n        totalHours: 0,\n        completedTasks: 0,\n        streak: 0,\n        lastActiveDate: null,\n        lastStreakUpdate: null,\n        studyHoursLog: []\n      });\n      setPoints(points || 0);\n      setBadges(badges || []);\n      setCurrentTheme(currentTheme || \"Light Mode\");\n    }\n  }, [setTasks, setStudyStats, setPoints, setBadges, setCurrentTheme]);\n\n  // Offline support: Save data to local storage on changes\n  useEffect(() => {\n    localStorage.setItem(\"studyBuddyData\", JSON.stringify({\n      tasks,\n      studyStats,\n      points,\n      badges,\n      currentTheme\n    }));\n  }, [tasks, studyStats, points, badges, currentTheme]);\n\n  // Fetch data from backend on mount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/user/user123\");\n        const data = await response.json();\n        setTasks(data.tasks || []);\n        setStudyStats(data.studyStats || {\n          totalHours: 0,\n          completedTasks: 0,\n          streak: 0,\n          lastActiveDate: null,\n          lastStreakUpdate: null,\n          studyHoursLog: []\n        });\n        setPoints(data.points || 0);\n        setBadges(data.badges || []);\n        setCurrentTheme(data.currentTheme || \"Light Mode\");\n      } catch (err) {\n        console.error(\"Error fetching data:\", err);\n        toast.error(\"Failed to fetch data. Using offline data.\");\n      }\n    };\n    fetchData();\n  }, [setTasks, setStudyStats, setPoints, setBadges, setCurrentTheme]);\n\n  // Save data to backend whenever state changes\n  useEffect(() => {\n    const saveData = async () => {\n      try {\n        await fetch(\"http://localhost:5000/api/user/user123\", {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            userId: \"user123\",\n            tasks,\n            studyStats,\n            points,\n            badges,\n            currentTheme\n          })\n        });\n      } catch (err) {\n        console.error(\"Error saving data:\", err);\n        toast.error(\"Failed to save data. Changes are saved offline.\");\n      }\n    };\n    saveData();\n  }, [tasks, studyStats, points, badges, currentTheme]);\n\n  // Browser notifications for upcoming tasks\n  useEffect(() => {\n    if (Notification.permission !== \"granted\") {\n      Notification.requestPermission();\n    }\n    const today = new Date();\n    const tomorrow = new Date(today);\n    tomorrow.setDate(today.getDate() + 1);\n    const tomorrowStr = tomorrow.toISOString().split(\"T\")[0];\n    const upcomingTasks = tasks.filter(task => !task.completed && task.dueDate === tomorrowStr);\n    upcomingTasks.forEach(task => {\n      const timeUntilDue = new Date(task.dueDate) - today;\n      setTimeout(() => {\n        if (Notification.permission === \"granted\") {\n          new Notification(`Reminder: \"${task.title}\" is due tomorrow!`, {\n            body: `Priority: ${task.priority}`,\n            icon: \"/logo192.png\"\n          });\n        }\n      }, timeUntilDue - 24 * 60 * 60 * 1000); // Notify 24 hours before due\n    });\n  }, [tasks]);\n\n  // AI suggestion handlers\n  const getStudyTips = async () => {\n    setIsLoadingAi(true);\n    try {\n      const suggestion = await getStudySuggestion(tasks, studyStats);\n      setAiSuggestion(suggestion);\n    } catch (err) {\n      toast.error(\"Failed to fetch AI suggestion.\");\n    } finally {\n      setIsLoadingAi(false);\n    }\n  };\n  const generateSchedule = async () => {\n    setIsLoadingAi(true);\n    try {\n      const suggestion = await getStudySuggestion(tasks, studyStats);\n      setAiSuggestion(`Generated Schedule:\\n${suggestion}`);\n    } catch (err) {\n      toast.error(\"Failed to generate schedule.\");\n    } finally {\n      setIsLoadingAi(false);\n    }\n  };\n  const addTask = newTask => {\n    setTasks(prev => [...prev, {\n      ...newTask,\n      id: Date.now()\n    }]);\n  };\n  const toggleTaskComplete = taskId => {\n    const updatedTasks = tasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed,\n      completedDate: !task.completed ? new Date().toISOString().split(\"T\")[0] : null\n    } : task);\n    setTasks(updatedTasks);\n    if (updatedTasks.find(task => task.id === taskId).completed) {\n      setPoints(prev => prev + 10);\n      setStudyStats(prev => ({\n        ...prev,\n        completedTasks: prev.completedTasks + 1\n      }));\n      if (Math.random() < 0.3) {\n        setBadges(prev => [...prev, `Badge-${Date.now()}`]);\n      }\n    }\n  };\n  const deleteTask = taskId => {\n    setTasks(prev => prev.filter(task => task.id !== taskId));\n  };\n  const editTask = (taskId, updatedTask) => {\n    setTasks(prev => prev.map(task => task.id === taskId ? {\n      ...task,\n      ...updatedTask\n    } : task));\n  };\n  const logStudyHours = hours => {\n    const today = new Date().toISOString().split(\"T\")[0];\n    const isNewDay = today !== studyStats.lastActiveDate;\n    setStudyStats(prev => {\n      const updatedLog = [...prev.studyHoursLog];\n      const todayLogIndex = updatedLog.findIndex(log => log.date === today);\n      if (todayLogIndex >= 0) {\n        updatedLog[todayLogIndex].hours += hours;\n      } else {\n        updatedLog.push({\n          date: today,\n          hours\n        });\n      }\n      let streak = prev.streak;\n      if (isNewDay) {\n        const yesterday = new Date(today);\n        yesterday.setDate(yesterday.getDate() - 1);\n        const yesterdayStr = yesterday.toISOString().split(\"T\")[0];\n        const wasActiveYesterday = prev.lastActiveDate === yesterdayStr || prev.lastStreakUpdate === yesterdayStr;\n        streak = wasActiveYesterday ? prev.streak + 1 : 1;\n      }\n      return {\n        ...prev,\n        totalHours: prev.totalHours + hours,\n        streak,\n        lastActiveDate: today,\n        lastStreakUpdate: today,\n        studyHoursLog: updatedLog\n      };\n    });\n    setPoints(prev => prev + Math.floor(hours * 5));\n  };\n  const handleRedeemTheme = theme => {\n    if (points >= 50) {\n      setPoints(prev => prev - 50);\n      setCurrentTheme(theme);\n    } else {\n      toast.error(\"Not enough points to redeem this theme!\");\n    }\n  };\n  const isDarkMode = currentTheme === \"Dark Mode\";\n  const isOceanBreeze = currentTheme === \"Ocean Breeze\";\n  const isSunsetGlow = currentTheme === \"Sunset Glow\";\n  const isForestWhisper = currentTheme === \"Forest Whisper\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `min-h-screen p-6 ${isDarkMode ? \"bg-gray-800 text-gray-200\" : isOceanBreeze ? \"bg-gradient-to-br from-blue-100 to-teal-100\" : isSunsetGlow ? \"bg-gradient-to-br from-orange-100 to-pink-100\" : isForestWhisper ? \"bg-gradient-to-br from-green-100 to-emerald-100\" : \"bg-gray-100 text-gray-800\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: `text-3xl font-bold mb-6 ${isDarkMode ? \"text-gray-100\" : isOceanBreeze ? \"text-teal-800\" : isSunsetGlow ? \"text-orange-800\" : isForestWhisper ? \"text-green-800\" : \"text-gray-800\"}`,\n        children: \"Study Buddy Planner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        role: \"tablist\",\n        className: `flex space-x-4 border-b mb-6 ${isDarkMode ? \"border-gray-600\" : isOceanBreeze ? \"border-teal-300\" : isSunsetGlow ? \"border-orange-300\" : isForestWhisper ? \"border-green-300\" : \"border-gray-200\"}`,\n        children: [\"dashboard\", \"tasks\", \"analytics\", \"rewards\"].map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n          role: \"tab\",\n          \"aria-selected\": activeTab === tab,\n          onClick: () => setActiveTab(tab),\n          className: `px-4 py-2 -mb-px border-b-2 font-medium transition-colors duration-200 focus:outline-none focus:ring-2 ${activeTab === tab ? isDarkMode ? \"border-indigo-400 text-indigo-400\" : isOceanBreeze ? \"border-teal-600 text-teal-600\" : isSunsetGlow ? \"border-orange-600 text-orange-600\" : isForestWhisper ? \"border-green-600 text-green-600\" : \"border-indigo-600 text-indigo-600\" : isDarkMode ? \"border-transparent text-gray-400 hover:text-gray-200\" : isOceanBreeze ? \"border-transparent text-blue-600 hover:text-teal-600\" : isSunsetGlow ? \"border-transparent text-orange-500 hover:text-orange-600\" : isForestWhisper ? \"border-transparent text-green-500 hover:text-green-600\" : \"border-transparent text-gray-500 hover:text-gray-700\"} focus:ring-indigo-400`,\n          children: tab.charAt(0).toUpperCase() + tab.slice(1)\n        }, tab, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), activeTab === \"dashboard\" && /*#__PURE__*/_jsxDEV(Dashboard, {\n        tasks: tasks,\n        studyStats: studyStats,\n        aiSuggestion: aiSuggestion,\n        getStudyTips: getStudyTips,\n        generateSchedule: generateSchedule,\n        setActiveTab: setActiveTab,\n        toggleTaskComplete: toggleTaskComplete,\n        deleteTask: deleteTask,\n        currentTheme: currentTheme,\n        logStudyHours: logStudyHours\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }, this), activeTab === \"tasks\" && /*#__PURE__*/_jsxDEV(TaskManager, {\n        tasks: tasks,\n        addTask: addTask,\n        editTask: editTask,\n        toggleTaskComplete: toggleTaskComplete,\n        deleteTask: deleteTask,\n        currentTheme: currentTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this), activeTab === \"analytics\" && /*#__PURE__*/_jsxDEV(Analytics, {\n        tasks: tasks,\n        studyStats: studyStats,\n        currentTheme: currentTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }, this), activeTab === \"rewards\" && /*#__PURE__*/_jsxDEV(Rewards, {\n        points: points,\n        badges: badges,\n        studyStats: studyStats,\n        currentTheme: currentTheme,\n        handleRedeemTheme: handleRedeemTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this), isLoadingAi && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-pulse text-gray-600\",\n          children: \"Loading AI suggestion...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n}\n_s(Layout, \"kcvgv7KVIVfgkWdi0URI3yGrWlU=\");\n_c = Layout;\nexport default Layout;\nvar _c;\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"names":["React","useState","useEffect","useContext","toast","AppContext","getStudySuggestion","Dashboard","TaskManager","Analytics","Rewards","jsxDEV","_jsxDEV","Layout","_s","tasks","setTasks","studyStats","setStudyStats","points","setPoints","badges","setBadges","currentTheme","setCurrentTheme","activeTab","setActiveTab","aiSuggestion","setAiSuggestion","isLoadingAi","setIsLoadingAi","cachedData","localStorage","getItem","JSON","parse","totalHours","completedTasks","streak","lastActiveDate","lastStreakUpdate","studyHoursLog","setItem","stringify","fetchData","response","fetch","data","json","err","console","error","saveData","method","headers","body","userId","Notification","permission","requestPermission","today","Date","tomorrow","setDate","getDate","tomorrowStr","toISOString","split","upcomingTasks","filter","task","completed","dueDate","forEach","timeUntilDue","setTimeout","title","priority","icon","getStudyTips","suggestion","generateSchedule","addTask","newTask","prev","id","now","toggleTaskComplete","taskId","updatedTasks","map","completedDate","find","Math","random","deleteTask","editTask","updatedTask","logStudyHours","hours","isNewDay","updatedLog","todayLogIndex","findIndex","log","date","push","yesterday","yesterdayStr","wasActiveYesterday","floor","handleRedeemTheme","theme","isDarkMode","isOceanBreeze","isSunsetGlow","isForestWhisper","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","tab","onClick","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["D:/Final Project/study-buddy-planner/src/components/Layout.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { AppContext } from \"./StudyBuddyPlanner\";\r\nimport { getStudySuggestion } from \"../services/aiService\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport TaskManager from \"./TaskManager\";\r\nimport Analytics from \"./Analytics\";\r\nimport Rewards from \"./Rewards\";\r\n\r\nfunction Layout() {\r\n  // Use context for state management\r\n  const {\r\n    tasks,\r\n    setTasks,\r\n    studyStats,\r\n    setStudyStats,\r\n    points,\r\n    setPoints,\r\n    badges,\r\n    setBadges,\r\n    currentTheme,\r\n    setCurrentTheme,\r\n  } = useContext(AppContext);\r\n\r\n  const [activeTab, setActiveTab] = useState(\"dashboard\");\r\n  const [aiSuggestion, setAiSuggestion] = useState(\"\");\r\n  const [isLoadingAi, setIsLoadingAi] = useState(false);\r\n\r\n  // Offline support: Load data from local storage on mount\r\n  useEffect(() => {\r\n    const cachedData = localStorage.getItem(\"studyBuddyData\");\r\n    if (cachedData) {\r\n      const { tasks, studyStats, points, badges, currentTheme } =\r\n        JSON.parse(cachedData);\r\n      setTasks(tasks || []);\r\n      setStudyStats(\r\n        studyStats || {\r\n          totalHours: 0,\r\n          completedTasks: 0,\r\n          streak: 0,\r\n          lastActiveDate: null,\r\n          lastStreakUpdate: null,\r\n          studyHoursLog: [],\r\n        }\r\n      );\r\n      setPoints(points || 0);\r\n      setBadges(badges || []);\r\n      setCurrentTheme(currentTheme || \"Light Mode\");\r\n    }\r\n  }, [setTasks, setStudyStats, setPoints, setBadges, setCurrentTheme]);\r\n\r\n  // Offline support: Save data to local storage on changes\r\n  useEffect(() => {\r\n    localStorage.setItem(\r\n      \"studyBuddyData\",\r\n      JSON.stringify({ tasks, studyStats, points, badges, currentTheme })\r\n    );\r\n  }, [tasks, studyStats, points, badges, currentTheme]);\r\n\r\n  // Fetch data from backend on mount\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/user/user123\");\r\n        const data = await response.json();\r\n        setTasks(data.tasks || []);\r\n        setStudyStats(\r\n          data.studyStats || {\r\n            totalHours: 0,\r\n            completedTasks: 0,\r\n            streak: 0,\r\n            lastActiveDate: null,\r\n            lastStreakUpdate: null,\r\n            studyHoursLog: [],\r\n          }\r\n        );\r\n        setPoints(data.points || 0);\r\n        setBadges(data.badges || []);\r\n        setCurrentTheme(data.currentTheme || \"Light Mode\");\r\n      } catch (err) {\r\n        console.error(\"Error fetching data:\", err);\r\n        toast.error(\"Failed to fetch data. Using offline data.\");\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [setTasks, setStudyStats, setPoints, setBadges, setCurrentTheme]);\r\n\r\n  // Save data to backend whenever state changes\r\n  useEffect(() => {\r\n    const saveData = async () => {\r\n      try {\r\n        await fetch(\"http://localhost:5000/api/user/user123\", {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            userId: \"user123\",\r\n            tasks,\r\n            studyStats,\r\n            points,\r\n            badges,\r\n            currentTheme,\r\n          }),\r\n        });\r\n      } catch (err) {\r\n        console.error(\"Error saving data:\", err);\r\n        toast.error(\"Failed to save data. Changes are saved offline.\");\r\n      }\r\n    };\r\n    saveData();\r\n  }, [tasks, studyStats, points, badges, currentTheme]);\r\n\r\n  // Browser notifications for upcoming tasks\r\n  useEffect(() => {\r\n    if (Notification.permission !== \"granted\") {\r\n      Notification.requestPermission();\r\n    }\r\n\r\n    const today = new Date();\r\n    const tomorrow = new Date(today);\r\n    tomorrow.setDate(today.getDate() + 1);\r\n    const tomorrowStr = tomorrow.toISOString().split(\"T\")[0];\r\n\r\n    const upcomingTasks = tasks.filter(\r\n      (task) => !task.completed && task.dueDate === tomorrowStr\r\n    );\r\n\r\n    upcomingTasks.forEach((task) => {\r\n      const timeUntilDue = new Date(task.dueDate) - today;\r\n      setTimeout(() => {\r\n        if (Notification.permission === \"granted\") {\r\n          new Notification(`Reminder: \"${task.title}\" is due tomorrow!`, {\r\n            body: `Priority: ${task.priority}`,\r\n            icon: \"/logo192.png\",\r\n          });\r\n        }\r\n      }, timeUntilDue - 24 * 60 * 60 * 1000); // Notify 24 hours before due\r\n    });\r\n  }, [tasks]);\r\n\r\n  // AI suggestion handlers\r\n  const getStudyTips = async () => {\r\n    setIsLoadingAi(true);\r\n    try {\r\n      const suggestion = await getStudySuggestion(tasks, studyStats);\r\n      setAiSuggestion(suggestion);\r\n    } catch (err) {\r\n      toast.error(\"Failed to fetch AI suggestion.\");\r\n    } finally {\r\n      setIsLoadingAi(false);\r\n    }\r\n  };\r\n\r\n  const generateSchedule = async () => {\r\n    setIsLoadingAi(true);\r\n    try {\r\n      const suggestion = await getStudySuggestion(tasks, studyStats);\r\n      setAiSuggestion(`Generated Schedule:\\n${suggestion}`);\r\n    } catch (err) {\r\n      toast.error(\"Failed to generate schedule.\");\r\n    } finally {\r\n      setIsLoadingAi(false);\r\n    }\r\n  };\r\n\r\n  const addTask = (newTask) => {\r\n    setTasks((prev) => [...prev, { ...newTask, id: Date.now() }]);\r\n  };\r\n\r\n  const toggleTaskComplete = (taskId) => {\r\n    const updatedTasks = tasks.map((task) =>\r\n      task.id === taskId\r\n        ? {\r\n            ...task,\r\n            completed: !task.completed,\r\n            completedDate: !task.completed\r\n              ? new Date().toISOString().split(\"T\")[0]\r\n              : null,\r\n          }\r\n        : task\r\n    );\r\n    setTasks(updatedTasks);\r\n\r\n    if (updatedTasks.find((task) => task.id === taskId).completed) {\r\n      setPoints((prev) => prev + 10);\r\n      setStudyStats((prev) => ({\r\n        ...prev,\r\n        completedTasks: prev.completedTasks + 1,\r\n      }));\r\n      if (Math.random() < 0.3) {\r\n        setBadges((prev) => [...prev, `Badge-${Date.now()}`]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteTask = (taskId) => {\r\n    setTasks((prev) => prev.filter((task) => task.id !== taskId));\r\n  };\r\n\r\n  const editTask = (taskId, updatedTask) => {\r\n    setTasks((prev) =>\r\n      prev.map((task) =>\r\n        task.id === taskId ? { ...task, ...updatedTask } : task\r\n      )\r\n    );\r\n  };\r\n\r\n  const logStudyHours = (hours) => {\r\n    const today = new Date().toISOString().split(\"T\")[0];\r\n    const isNewDay = today !== studyStats.lastActiveDate;\r\n\r\n    setStudyStats((prev) => {\r\n      const updatedLog = [...prev.studyHoursLog];\r\n      const todayLogIndex = updatedLog.findIndex((log) => log.date === today);\r\n\r\n      if (todayLogIndex >= 0) {\r\n        updatedLog[todayLogIndex].hours += hours;\r\n      } else {\r\n        updatedLog.push({ date: today, hours });\r\n      }\r\n\r\n      let streak = prev.streak;\r\n      if (isNewDay) {\r\n        const yesterday = new Date(today);\r\n        yesterday.setDate(yesterday.getDate() - 1);\r\n        const yesterdayStr = yesterday.toISOString().split(\"T\")[0];\r\n\r\n        const wasActiveYesterday =\r\n          prev.lastActiveDate === yesterdayStr ||\r\n          prev.lastStreakUpdate === yesterdayStr;\r\n\r\n        streak = wasActiveYesterday ? prev.streak + 1 : 1;\r\n      }\r\n\r\n      return {\r\n        ...prev,\r\n        totalHours: prev.totalHours + hours,\r\n        streak,\r\n        lastActiveDate: today,\r\n        lastStreakUpdate: today,\r\n        studyHoursLog: updatedLog,\r\n      };\r\n    });\r\n\r\n    setPoints((prev) => prev + Math.floor(hours * 5));\r\n  };\r\n\r\n  const handleRedeemTheme = (theme) => {\r\n    if (points >= 50) {\r\n      setPoints((prev) => prev - 50);\r\n      setCurrentTheme(theme);\r\n    } else {\r\n      toast.error(\"Not enough points to redeem this theme!\");\r\n    }\r\n  };\r\n\r\n  const isDarkMode = currentTheme === \"Dark Mode\";\r\n  const isOceanBreeze = currentTheme === \"Ocean Breeze\";\r\n  const isSunsetGlow = currentTheme === \"Sunset Glow\";\r\n  const isForestWhisper = currentTheme === \"Forest Whisper\";\r\n\r\n  return (\r\n    <div\r\n      className={`min-h-screen p-6 ${\r\n        isDarkMode\r\n          ? \"bg-gray-800 text-gray-200\"\r\n          : isOceanBreeze\r\n          ? \"bg-gradient-to-br from-blue-100 to-teal-100\"\r\n          : isSunsetGlow\r\n          ? \"bg-gradient-to-br from-orange-100 to-pink-100\"\r\n          : isForestWhisper\r\n          ? \"bg-gradient-to-br from-green-100 to-emerald-100\"\r\n          : \"bg-gray-100 text-gray-800\"\r\n      }`}\r\n    >\r\n      <div className=\"max-w-4xl mx-auto\">\r\n        <h1\r\n          className={`text-3xl font-bold mb-6 ${\r\n            isDarkMode\r\n              ? \"text-gray-100\"\r\n              : isOceanBreeze\r\n              ? \"text-teal-800\"\r\n              : isSunsetGlow\r\n              ? \"text-orange-800\"\r\n              : isForestWhisper\r\n              ? \"text-green-800\"\r\n              : \"text-gray-800\"\r\n          }`}\r\n        >\r\n          Study Buddy Planner\r\n        </h1>\r\n\r\n        {/* Tab Navigation with Accessibility */}\r\n        <div\r\n          role=\"tablist\"\r\n          className={`flex space-x-4 border-b mb-6 ${\r\n            isDarkMode\r\n              ? \"border-gray-600\"\r\n              : isOceanBreeze\r\n              ? \"border-teal-300\"\r\n              : isSunsetGlow\r\n              ? \"border-orange-300\"\r\n              : isForestWhisper\r\n              ? \"border-green-300\"\r\n              : \"border-gray-200\"\r\n          }`}\r\n        >\r\n          {[\"dashboard\", \"tasks\", \"analytics\", \"rewards\"].map((tab) => (\r\n            <button\r\n              key={tab}\r\n              role=\"tab\"\r\n              aria-selected={activeTab === tab}\r\n              onClick={() => setActiveTab(tab)}\r\n              className={`px-4 py-2 -mb-px border-b-2 font-medium transition-colors duration-200 focus:outline-none focus:ring-2 ${\r\n                activeTab === tab\r\n                  ? isDarkMode\r\n                    ? \"border-indigo-400 text-indigo-400\"\r\n                    : isOceanBreeze\r\n                    ? \"border-teal-600 text-teal-600\"\r\n                    : isSunsetGlow\r\n                    ? \"border-orange-600 text-orange-600\"\r\n                    : isForestWhisper\r\n                    ? \"border-green-600 text-green-600\"\r\n                    : \"border-indigo-600 text-indigo-600\"\r\n                  : isDarkMode\r\n                  ? \"border-transparent text-gray-400 hover:text-gray-200\"\r\n                  : isOceanBreeze\r\n                  ? \"border-transparent text-blue-600 hover:text-teal-600\"\r\n                  : isSunsetGlow\r\n                  ? \"border-transparent text-orange-500 hover:text-orange-600\"\r\n                  : isForestWhisper\r\n                  ? \"border-transparent text-green-500 hover:text-green-600\"\r\n                  : \"border-transparent text-gray-500 hover:text-gray-700\"\r\n              } focus:ring-indigo-400`}\r\n            >\r\n              {tab.charAt(0).toUpperCase() + tab.slice(1)}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Tab Content */}\r\n        {activeTab === \"dashboard\" && (\r\n          <Dashboard\r\n            tasks={tasks}\r\n            studyStats={studyStats}\r\n            aiSuggestion={aiSuggestion}\r\n            getStudyTips={getStudyTips}\r\n            generateSchedule={generateSchedule}\r\n            setActiveTab={setActiveTab}\r\n            toggleTaskComplete={toggleTaskComplete}\r\n            deleteTask={deleteTask}\r\n            currentTheme={currentTheme}\r\n            logStudyHours={logStudyHours}\r\n          />\r\n        )}\r\n        {activeTab === \"tasks\" && (\r\n          <TaskManager\r\n            tasks={tasks}\r\n            addTask={addTask}\r\n            editTask={editTask}\r\n            toggleTaskComplete={toggleTaskComplete}\r\n            deleteTask={deleteTask}\r\n            currentTheme={currentTheme}\r\n          />\r\n        )}\r\n        {activeTab === \"analytics\" && (\r\n          <Analytics\r\n            tasks={tasks}\r\n            studyStats={studyStats}\r\n            currentTheme={currentTheme}\r\n          />\r\n        )}\r\n        {activeTab === \"rewards\" && (\r\n          <Rewards\r\n            points={points}\r\n            badges={badges}\r\n            studyStats={studyStats}\r\n            currentTheme={currentTheme}\r\n            handleRedeemTheme={handleRedeemTheme}\r\n          />\r\n        )}\r\n\r\n        {/* Loading Indicator for AI Suggestions */}\r\n        {isLoadingAi && (\r\n          <div className=\"mt-4 flex justify-center\">\r\n            <div className=\"animate-pulse text-gray-600\">\r\n              Loading AI suggestion...\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}