{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final Project\\\\study-buddy-planner\\\\src\\\\components\\\\Layout.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Sun, Moon, Waves, BarChart2, LayoutDashboard } from \"lucide-react\";\nimport Dashboard from \"./Dashboard\";\nimport TaskManager from \"./TaskManager\";\nimport Analytics from \"./Analytics\";\nimport Achievements from \"./Achievements\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Layout({\n  userId\n}) {\n  _s();\n  const [activeTab, setActiveTab] = useState(\"dashboard\");\n  const [tasks, setTasks] = useState([]); // Ensure tasks is always an array\n  const [studyStats, setStudyStats] = useState({\n    totalHours: 0,\n    completedTasks: 0,\n    streak: 0,\n    lastActiveDate: null,\n    lastStreakUpdate: null\n  });\n  const [points, setPoints] = useState(0);\n  const [badges, setBadges] = useState([]);\n  const [themes, setThemes] = useState([\"Light Mode\"]);\n  const [currentTheme, setCurrentTheme] = useState(\"Light Mode\");\n  const [aiSuggestion, setAiSuggestion] = useState(\"\");\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/user/${userId}`);\n        if (!response.ok) throw new Error(\"Failed to fetch user data\");\n        const data = await response.json();\n        setTasks(data.tasks || []); // Ensure tasks is an array\n        setStudyStats(data.studyStats || {\n          totalHours: 0,\n          completedTasks: 0,\n          streak: 0,\n          lastActiveDate: null,\n          lastStreakUpdate: null\n        });\n        setPoints(data.points || 0);\n        setBadges(data.badges || []);\n        setThemes(data.themes || [\"Light Mode\"]);\n        setCurrentTheme(data.currentTheme || \"Light Mode\");\n      } catch (err) {\n        console.error(\"Error fetching user data:\", err);\n        setError(\"Failed to load user data. Please try again later.\");\n        // Set default values to prevent undefined state\n        setTasks([]);\n        setStudyStats({\n          totalHours: 0,\n          completedTasks: 0,\n          streak: 0,\n          lastActiveDate: null,\n          lastStreakUpdate: null\n        });\n      }\n    };\n    fetchUserData();\n  }, [userId]);\n  const saveUserData = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/user/${userId}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          tasks,\n          studyStats,\n          points,\n          badges,\n          themes,\n          currentTheme\n        })\n      });\n      if (!response.ok) throw new Error(\"Failed to save user data\");\n    } catch (err) {\n      console.error(\"Error saving user data:\", err);\n      setError(\"Failed to save user data. Please try again later.\");\n    }\n  };\n  useEffect(() => {\n    if (tasks.length > 0 || studyStats.totalHours > 0) {\n      saveUserData();\n    }\n  }, [tasks, studyStats, points, badges, themes, currentTheme]);\n  const addTask = newTask => {\n    const task = {\n      id: Date.now(),\n      ...newTask\n    };\n    setTasks([...tasks, task]);\n    setPoints(points + 10);\n    checkAchievements(\"task_added\");\n  };\n  const updateTask = updatedTask => {\n    setTasks(tasks.map(task => task.id === updatedTask.id ? updatedTask : task));\n  };\n  const deleteTask = taskId => {\n    setTasks(tasks.filter(task => task.id !== taskId));\n  };\n  const toggleTaskComplete = taskId => {\n    const today = new Date(\"2025-04-23\").toISOString().split(\"T\")[0]; // Fixed date for consistency\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed,\n      completedDate: task.completed ? null : today\n    } : task));\n    const task = tasks.find(t => t.id === taskId);\n    if (!task.completed) {\n      setStudyStats(prev => ({\n        ...prev,\n        completedTasks: prev.completedTasks + 1\n      }));\n      setPoints(points + 20);\n      checkAchievements(\"task_completed\");\n      updateStreak(today);\n    } else {\n      setStudyStats(prev => ({\n        ...prev,\n        completedTasks: prev.completedTasks - 1\n      }));\n      setPoints(points - 20);\n    }\n  };\n  const logStudyHours = hours => {\n    const today = new Date(\"2025-04-23\").toISOString().split(\"T\")[0]; // Fixed date for consistency\n    if (isNaN(hours) || hours <= 0) {\n      setError(\"Please enter a valid number of hours greater than 0.\");\n      return;\n    }\n    setStudyStats(prev => ({\n      ...prev,\n      totalHours: prev.totalHours + hours\n    }));\n    setPoints(points + Math.floor(hours * 10));\n    checkAchievements(\"study_hours\", hours);\n    updateStreak(today);\n    setError(null);\n  };\n  const updateStreak = today => {\n    const lastActive = studyStats.lastActiveDate ? new Date(studyStats.lastActiveDate) : null;\n    const lastStreakUpdate = studyStats.lastStreakUpdate ? new Date(studyStats.lastStreakUpdate) : null;\n    const todayDate = new Date(today);\n    let newStreak = studyStats.streak;\n    let newLastActiveDate = today;\n    let newLastStreakUpdate = studyStats.lastStreakUpdate;\n    if (!lastActive || lastActive.toISOString().split(\"T\")[0] !== today) {\n      if (lastActive) {\n        const diffTime = todayDate - lastActive;\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        if (diffDays === 1) {\n          newStreak = studyStats.streak + 1;\n          newLastStreakUpdate = today;\n        } else if (diffDays > 1) {\n          newStreak = 1;\n          newLastStreakUpdate = today;\n        }\n      } else {\n        newStreak = 1;\n        newLastStreakUpdate = today;\n      }\n    }\n    if (lastStreakUpdate && new Date(lastStreakUpdate).toISOString().split(\"T\")[0] !== today) {\n      const diffTime = todayDate - new Date(lastStreakUpdate);\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n      if (diffDays > 1) {\n        newStreak = 1;\n        newLastStreakUpdate = today;\n      }\n    }\n    setStudyStats(prev => ({\n      ...prev,\n      streak: newStreak,\n      lastActiveDate: newLastActiveDate,\n      lastStreakUpdate: newLastStreakUpdate\n    }));\n    if (newStreak > 0) {\n      checkAchievements(\"streak\", newStreak);\n    }\n  };\n  const checkAchievements = (type, value = 0) => {\n    const newBadges = [...badges];\n    if (type === \"task_added\" && tasks.length + 1 >= 5 && !badges.includes(\"Task Master\")) {\n      newBadges.push(\"Task Master\");\n      setPoints(points + 50);\n    }\n    if (type === \"task_completed\" && studyStats.completedTasks + 1 >= 5 && !badges.includes(\"Completionist\")) {\n      newBadges.push(\"Completionist\");\n      setPoints(points + 50);\n    }\n    if (type === \"study_hours\" && studyStats.totalHours + value >= 10 && !badges.includes(\"Study Pro\")) {\n      newBadges.push(\"Study Pro\");\n      setPoints(points + 50);\n    }\n    if (type === \"streak\" && value >= 3 && !badges.includes(\"Streak King\")) {\n      newBadges.push(\"Streak King\");\n      setPoints(points + 50);\n    }\n    setBadges(newBadges);\n  };\n  const getStudyTips = () => {\n    setAiSuggestion(`**Study Tips for Today**  \n- **Pomodoro Technique**: Study for 25 minutes, then take a 5-minute break. Repeat 4 times, then take a longer break (15-30 minutes).  \n- **Active Recall**: Test yourself on the material instead of re-reading notes. Use flashcards or practice questions.  \n- **Environment Matters**: Study in a quiet, distraction-free space with good lighting.  \nKeep up the great work!`);\n  };\n  const generateSchedule = () => {\n    const incompleteTasks = tasks.filter(task => !task.completed);\n    if (incompleteTasks.length === 0) {\n      setAiSuggestion(\"You have no incomplete tasks! Add some tasks to generate a study schedule.\");\n      return;\n    }\n    const schedule = incompleteTasks.sort((a, b) => new Date(a.dueDate) - new Date(b.dueDate)).map((task, index) => {\n      const startHour = 9 + index * 2;\n      const endHour = startHour + 2;\n      return `${startHour}:00 - ${endHour}:00: ${task.title} (Priority: ${task.priority}, Due: ${task.dueDate})`;\n    });\n    setAiSuggestion(`**Your Study Schedule for Today**  \n${schedule.join(\"\\n\")}`);\n  };\n  const changeTheme = theme => {\n    setCurrentTheme(theme);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `min-h-screen ${isDarkMode ? \"bg-gray-800 text-gray-200\" : isOceanBreeze ? \"bg-gradient-to-br from-blue-100 to-teal-100 text-teal-800\" : \"bg-gray-100 text-gray-800\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: `p-4 flex justify-between items-center ${isDarkMode ? \"bg-gray-900\" : isOceanBreeze ? \"bg-teal-100 bg-opacity-70 backdrop-blur-sm\" : \"bg-white\"} shadow`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-xl font-bold\",\n        children: \"StudyBuddy AI Planner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeTheme(\"Light Mode\"),\n          className: `p-2 rounded-full ${currentTheme === \"Light Mode\" ? isDarkMode ? \"bg-gray-700\" : \"bg-gray-200\" : isDarkMode ? \"bg-gray-600\" : \"bg-white\"}`,\n          children: /*#__PURE__*/_jsxDEV(Sun, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeTheme(\"Dark Mode\"),\n          className: `p-2 rounded-full ${currentTheme === \"Dark Mode\" ? isDarkMode ? \"bg-gray-700\" : \"bg-gray-200\" : isDarkMode ? \"bg-gray-600\" : \"bg-white\"}`,\n          children: /*#__PURE__*/_jsxDEV(Moon, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), themes.includes(\"Ocean Breeze\") && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => changeTheme(\"Ocean Breeze\"),\n          className: `p-2 rounded-full ${currentTheme === \"Ocean Breeze\" ? isDarkMode ? \"bg-gray-700\" : \"bg-gray-200\" : isDarkMode ? \"bg-gray-600\" : \"bg-white\"}`,\n          children: /*#__PURE__*/_jsxDEV(Waves, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: `p-4 flex space-x-4 ${isDarkMode ? \"bg-gray-900\" : isOceanBreeze ? \"bg-teal-100 bg-opacity-70 backdrop-blur-sm\" : \"bg-white\"} shadow`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab(\"dashboard\"),\n        className: `px-4 py-2 rounded-lg flex items-center space-x-2 ${activeTab === \"dashboard\" ? isDarkMode ? \"bg-indigo-500 text-white\" : isOceanBreeze ? \"bg-teal-500 text-white\" : \"bg-indigo-600 text-white\" : isDarkMode ? \"bg-gray-700 text-gray-200\" : isOceanBreeze ? \"bg-blue-100 text-teal-800\" : \"bg-gray-100 text-gray-700\"}`,\n        children: [/*#__PURE__*/_jsxDEV(LayoutDashboard, {\n          className: \"h-5 w-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab(\"tasks\"),\n        className: `px-4 py-2 rounded-lg flex items-center space-x-2 ${activeTab === \"tasks\" ? isDarkMode ? \"bg-indigo-500 text-white\" : isOceanBreeze ? \"bg-teal-500 text-white\" : \"bg-indigo-600 text-white\" : isDarkMode ? \"bg-gray-700 text-gray-200\" : isOceanBreeze ? \"bg-blue-100 text-teal-800\" : \"bg-gray-100 text-gray-700\"}`,\n        children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"h-5 w-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab(\"analytics\"),\n        className: `px-4 py-2 rounded-lg flex items-center space-x-2 ${activeTab === \"analytics\" ? isDarkMode ? \"bg-indigo-500 text-white\" : isOceanBreeze ? \"bg-teal-500 text-white\" : \"bg-indigo-600 text-white\" : isDarkMode ? \"bg-gray-700 text-gray-200\" : isOceanBreeze ? \"bg-blue-100 text-teal-800\" : \"bg-gray-100 text-gray-700\"}`,\n        children: [/*#__PURE__*/_jsxDEV(BarChart2, {\n          className: \"h-5 w-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Analytics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setActiveTab(\"achievements\"),\n        className: `px-4 py-2 rounded-lg flex items-center space-x-2 ${activeTab === \"achievements\" ? isDarkMode ? \"bg-indigo-500 text-white\" : isOceanBreeze ? \"bg-teal-500 text-white\" : \"bg-indigo-600 text-white\" : isDarkMode ? \"bg-gray-700 text-gray-200\" : isOceanBreeze ? \"bg-blue-100 text-teal-800\" : \"bg-gray-100 text-gray-700\"}`,\n        children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n          className: \"h-5 w-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Achievements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"p-6\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-4 mb-4 rounded-lg ${isDarkMode ? \"bg-red-900 text-red-200\" : isOceanBreeze ? \"bg-red-100 text-red-800\" : \"bg-red-100 text-red-800\"}`,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 11\n      }, this), activeTab === \"dashboard\" && /*#__PURE__*/_jsxDEV(Dashboard, {\n        tasks: tasks,\n        studyStats: studyStats,\n        aiSuggestion: aiSuggestion,\n        getStudyTips: getStudyTips,\n        generateSchedule: generateSchedule,\n        setActiveTab: setActiveTab,\n        toggleTaskComplete: toggleTaskComplete,\n        deleteTask: deleteTask,\n        currentTheme: currentTheme,\n        logStudyHours: logStudyHours\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 11\n      }, this), activeTab === \"tasks\" && /*#__PURE__*/_jsxDEV(TaskManager, {\n        tasks: tasks,\n        addTask: addTask,\n        updateTask: updateTask,\n        deleteTask: deleteTask,\n        toggleTaskComplete: toggleTaskComplete,\n        currentTheme: currentTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 11\n      }, this), activeTab === \"analytics\" && /*#__PURE__*/_jsxDEV(Analytics, {\n        tasks: tasks,\n        currentTheme: currentTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 11\n      }, this), activeTab === \"achievements\" && /*#__PURE__*/_jsxDEV(Achievements, {\n        points: points,\n        badges: badges,\n        themes: themes,\n        setThemes: setThemes,\n        currentTheme: currentTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n}\n_s(Layout, \"nmRGvqv5qS0a6WMoQpgiBfvjtpU=\");\n_c = Layout;\nexport default Layout;\nvar _c;\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"names":["React","useState","useEffect","Sun","Moon","Waves","BarChart2","LayoutDashboard","Dashboard","TaskManager","Analytics","Achievements","jsxDEV","_jsxDEV","Layout","userId","_s","activeTab","setActiveTab","tasks","setTasks","studyStats","setStudyStats","totalHours","completedTasks","streak","lastActiveDate","lastStreakUpdate","points","setPoints","badges","setBadges","themes","setThemes","currentTheme","setCurrentTheme","aiSuggestion","setAiSuggestion","error","setError","fetchUserData","response","fetch","ok","Error","data","json","err","console","saveUserData","method","headers","body","JSON","stringify","length","addTask","newTask","task","id","Date","now","checkAchievements","updateTask","updatedTask","map","deleteTask","taskId","filter","toggleTaskComplete","today","toISOString","split","completed","completedDate","find","t","prev","updateStreak","logStudyHours","hours","isNaN","Math","floor","lastActive","todayDate","newStreak","newLastActiveDate","newLastStreakUpdate","diffTime","diffDays","ceil","type","value","newBadges","includes","push","getStudyTips","generateSchedule","incompleteTasks","schedule","sort","a","b","dueDate","index","startHour","endHour","title","priority","join","changeTheme","theme","className","isDarkMode","isOceanBreeze","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","CheckCircle","_c","$RefreshReg$"],"sources":["D:/Final Project/study-buddy-planner/src/components/Layout.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Sun, Moon, Waves, BarChart2, LayoutDashboard } from \"lucide-react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport TaskManager from \"./TaskManager\";\r\nimport Analytics from \"./Analytics\";\r\nimport Achievements from \"./Achievements\";\r\n\r\nfunction Layout({ userId }) {\r\n  const [activeTab, setActiveTab] = useState(\"dashboard\");\r\n  const [tasks, setTasks] = useState([]); // Ensure tasks is always an array\r\n  const [studyStats, setStudyStats] = useState({\r\n    totalHours: 0,\r\n    completedTasks: 0,\r\n    streak: 0,\r\n    lastActiveDate: null,\r\n    lastStreakUpdate: null,\r\n  });\r\n  const [points, setPoints] = useState(0);\r\n  const [badges, setBadges] = useState([]);\r\n  const [themes, setThemes] = useState([\"Light Mode\"]);\r\n  const [currentTheme, setCurrentTheme] = useState(\"Light Mode\");\r\n  const [aiSuggestion, setAiSuggestion] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:5000/api/user/${userId}`\r\n        );\r\n        if (!response.ok) throw new Error(\"Failed to fetch user data\");\r\n        const data = await response.json();\r\n        setTasks(data.tasks || []); // Ensure tasks is an array\r\n        setStudyStats(\r\n          data.studyStats || {\r\n            totalHours: 0,\r\n            completedTasks: 0,\r\n            streak: 0,\r\n            lastActiveDate: null,\r\n            lastStreakUpdate: null,\r\n          }\r\n        );\r\n        setPoints(data.points || 0);\r\n        setBadges(data.badges || []);\r\n        setThemes(data.themes || [\"Light Mode\"]);\r\n        setCurrentTheme(data.currentTheme || \"Light Mode\");\r\n      } catch (err) {\r\n        console.error(\"Error fetching user data:\", err);\r\n        setError(\"Failed to load user data. Please try again later.\");\r\n        // Set default values to prevent undefined state\r\n        setTasks([]);\r\n        setStudyStats({\r\n          totalHours: 0,\r\n          completedTasks: 0,\r\n          streak: 0,\r\n          lastActiveDate: null,\r\n          lastStreakUpdate: null,\r\n        });\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [userId]);\r\n\r\n  const saveUserData = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/user/${userId}`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          tasks,\r\n          studyStats,\r\n          points,\r\n          badges,\r\n          themes,\r\n          currentTheme,\r\n        }),\r\n      });\r\n      if (!response.ok) throw new Error(\"Failed to save user data\");\r\n    } catch (err) {\r\n      console.error(\"Error saving user data:\", err);\r\n      setError(\"Failed to save user data. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (tasks.length > 0 || studyStats.totalHours > 0) {\r\n      saveUserData();\r\n    }\r\n  }, [tasks, studyStats, points, badges, themes, currentTheme]);\r\n\r\n  const addTask = (newTask) => {\r\n    const task = { id: Date.now(), ...newTask };\r\n    setTasks([...tasks, task]);\r\n    setPoints(points + 10);\r\n    checkAchievements(\"task_added\");\r\n  };\r\n\r\n  const updateTask = (updatedTask) => {\r\n    setTasks(\r\n      tasks.map((task) => (task.id === updatedTask.id ? updatedTask : task))\r\n    );\r\n  };\r\n\r\n  const deleteTask = (taskId) => {\r\n    setTasks(tasks.filter((task) => task.id !== taskId));\r\n  };\r\n\r\n  const toggleTaskComplete = (taskId) => {\r\n    const today = new Date(\"2025-04-23\").toISOString().split(\"T\")[0]; // Fixed date for consistency\r\n    setTasks(\r\n      tasks.map((task) =>\r\n        task.id === taskId\r\n          ? {\r\n              ...task,\r\n              completed: !task.completed,\r\n              completedDate: task.completed ? null : today,\r\n            }\r\n          : task\r\n      )\r\n    );\r\n    const task = tasks.find((t) => t.id === taskId);\r\n    if (!task.completed) {\r\n      setStudyStats((prev) => ({\r\n        ...prev,\r\n        completedTasks: prev.completedTasks + 1,\r\n      }));\r\n      setPoints(points + 20);\r\n      checkAchievements(\"task_completed\");\r\n      updateStreak(today);\r\n    } else {\r\n      setStudyStats((prev) => ({\r\n        ...prev,\r\n        completedTasks: prev.completedTasks - 1,\r\n      }));\r\n      setPoints(points - 20);\r\n    }\r\n  };\r\n\r\n  const logStudyHours = (hours) => {\r\n    const today = new Date(\"2025-04-23\").toISOString().split(\"T\")[0]; // Fixed date for consistency\r\n    if (isNaN(hours) || hours <= 0) {\r\n      setError(\"Please enter a valid number of hours greater than 0.\");\r\n      return;\r\n    }\r\n    setStudyStats((prev) => ({\r\n      ...prev,\r\n      totalHours: prev.totalHours + hours,\r\n    }));\r\n    setPoints(points + Math.floor(hours * 10));\r\n    checkAchievements(\"study_hours\", hours);\r\n    updateStreak(today);\r\n    setError(null);\r\n  };\r\n\r\n  const updateStreak = (today) => {\r\n    const lastActive = studyStats.lastActiveDate\r\n      ? new Date(studyStats.lastActiveDate)\r\n      : null;\r\n    const lastStreakUpdate = studyStats.lastStreakUpdate\r\n      ? new Date(studyStats.lastStreakUpdate)\r\n      : null;\r\n    const todayDate = new Date(today);\r\n\r\n    let newStreak = studyStats.streak;\r\n    let newLastActiveDate = today;\r\n    let newLastStreakUpdate = studyStats.lastStreakUpdate;\r\n\r\n    if (!lastActive || lastActive.toISOString().split(\"T\")[0] !== today) {\r\n      if (lastActive) {\r\n        const diffTime = todayDate - lastActive;\r\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n        if (diffDays === 1) {\r\n          newStreak = studyStats.streak + 1;\r\n          newLastStreakUpdate = today;\r\n        } else if (diffDays > 1) {\r\n          newStreak = 1;\r\n          newLastStreakUpdate = today;\r\n        }\r\n      } else {\r\n        newStreak = 1;\r\n        newLastStreakUpdate = today;\r\n      }\r\n    }\r\n\r\n    if (\r\n      lastStreakUpdate &&\r\n      new Date(lastStreakUpdate).toISOString().split(\"T\")[0] !== today\r\n    ) {\r\n      const diffTime = todayDate - new Date(lastStreakUpdate);\r\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n      if (diffDays > 1) {\r\n        newStreak = 1;\r\n        newLastStreakUpdate = today;\r\n      }\r\n    }\r\n\r\n    setStudyStats((prev) => ({\r\n      ...prev,\r\n      streak: newStreak,\r\n      lastActiveDate: newLastActiveDate,\r\n      lastStreakUpdate: newLastStreakUpdate,\r\n    }));\r\n\r\n    if (newStreak > 0) {\r\n      checkAchievements(\"streak\", newStreak);\r\n    }\r\n  };\r\n\r\n  const checkAchievements = (type, value = 0) => {\r\n    const newBadges = [...badges];\r\n    if (\r\n      type === \"task_added\" &&\r\n      tasks.length + 1 >= 5 &&\r\n      !badges.includes(\"Task Master\")\r\n    ) {\r\n      newBadges.push(\"Task Master\");\r\n      setPoints(points + 50);\r\n    }\r\n    if (\r\n      type === \"task_completed\" &&\r\n      studyStats.completedTasks + 1 >= 5 &&\r\n      !badges.includes(\"Completionist\")\r\n    ) {\r\n      newBadges.push(\"Completionist\");\r\n      setPoints(points + 50);\r\n    }\r\n    if (\r\n      type === \"study_hours\" &&\r\n      studyStats.totalHours + value >= 10 &&\r\n      !badges.includes(\"Study Pro\")\r\n    ) {\r\n      newBadges.push(\"Study Pro\");\r\n      setPoints(points + 50);\r\n    }\r\n    if (type === \"streak\" && value >= 3 && !badges.includes(\"Streak King\")) {\r\n      newBadges.push(\"Streak King\");\r\n      setPoints(points + 50);\r\n    }\r\n    setBadges(newBadges);\r\n  };\r\n\r\n  const getStudyTips = () => {\r\n    setAiSuggestion(`**Study Tips for Today**  \r\n- **Pomodoro Technique**: Study for 25 minutes, then take a 5-minute break. Repeat 4 times, then take a longer break (15-30 minutes).  \r\n- **Active Recall**: Test yourself on the material instead of re-reading notes. Use flashcards or practice questions.  \r\n- **Environment Matters**: Study in a quiet, distraction-free space with good lighting.  \r\nKeep up the great work!`);\r\n  };\r\n\r\n  const generateSchedule = () => {\r\n    const incompleteTasks = tasks.filter((task) => !task.completed);\r\n    if (incompleteTasks.length === 0) {\r\n      setAiSuggestion(\r\n        \"You have no incomplete tasks! Add some tasks to generate a study schedule.\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    const schedule = incompleteTasks\r\n      .sort((a, b) => new Date(a.dueDate) - new Date(b.dueDate))\r\n      .map((task, index) => {\r\n        const startHour = 9 + index * 2;\r\n        const endHour = startHour + 2;\r\n        return `${startHour}:00 - ${endHour}:00: ${task.title} (Priority: ${task.priority}, Due: ${task.dueDate})`;\r\n      });\r\n\r\n    setAiSuggestion(`**Your Study Schedule for Today**  \r\n${schedule.join(\"\\n\")}`);\r\n  };\r\n\r\n  const changeTheme = (theme) => {\r\n    setCurrentTheme(theme);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`min-h-screen ${\r\n        isDarkMode\r\n          ? \"bg-gray-800 text-gray-200\"\r\n          : isOceanBreeze\r\n          ? \"bg-gradient-to-br from-blue-100 to-teal-100 text-teal-800\"\r\n          : \"bg-gray-100 text-gray-800\"\r\n      }`}\r\n    >\r\n      <header\r\n        className={`p-4 flex justify-between items-center ${\r\n          isDarkMode\r\n            ? \"bg-gray-900\"\r\n            : isOceanBreeze\r\n            ? \"bg-teal-100 bg-opacity-70 backdrop-blur-sm\"\r\n            : \"bg-white\"\r\n        } shadow`}\r\n      >\r\n        <h1 className=\"text-xl font-bold\">StudyBuddy AI Planner</h1>\r\n        <div className=\"flex space-x-2\">\r\n          <button\r\n            onClick={() => changeTheme(\"Light Mode\")}\r\n            className={`p-2 rounded-full ${\r\n              currentTheme === \"Light Mode\"\r\n                ? isDarkMode\r\n                  ? \"bg-gray-700\"\r\n                  : \"bg-gray-200\"\r\n                : isDarkMode\r\n                ? \"bg-gray-600\"\r\n                : \"bg-white\"\r\n            }`}\r\n          >\r\n            <Sun className=\"h-5 w-5\" />\r\n          </button>\r\n          <button\r\n            onClick={() => changeTheme(\"Dark Mode\")}\r\n            className={`p-2 rounded-full ${\r\n              currentTheme === \"Dark Mode\"\r\n                ? isDarkMode\r\n                  ? \"bg-gray-700\"\r\n                  : \"bg-gray-200\"\r\n                : isDarkMode\r\n                ? \"bg-gray-600\"\r\n                : \"bg-white\"\r\n            }`}\r\n          >\r\n            <Moon className=\"h-5 w-5\" />\r\n          </button>\r\n          {themes.includes(\"Ocean Breeze\") && (\r\n            <button\r\n              onClick={() => changeTheme(\"Ocean Breeze\")}\r\n              className={`p-2 rounded-full ${\r\n                currentTheme === \"Ocean Breeze\"\r\n                  ? isDarkMode\r\n                    ? \"bg-gray-700\"\r\n                    : \"bg-gray-200\"\r\n                  : isDarkMode\r\n                  ? \"bg-gray-600\"\r\n                  : \"bg-white\"\r\n              }`}\r\n            >\r\n              <Waves className=\"h-5 w-5\" />\r\n            </button>\r\n          )}\r\n        </div>\r\n      </header>\r\n\r\n      <nav\r\n        className={`p-4 flex space-x-4 ${\r\n          isDarkMode\r\n            ? \"bg-gray-900\"\r\n            : isOceanBreeze\r\n            ? \"bg-teal-100 bg-opacity-70 backdrop-blur-sm\"\r\n            : \"bg-white\"\r\n        } shadow`}\r\n      >\r\n        <button\r\n          onClick={() => setActiveTab(\"dashboard\")}\r\n          className={`px-4 py-2 rounded-lg flex items-center space-x-2 ${\r\n            activeTab === \"dashboard\"\r\n              ? isDarkMode\r\n                ? \"bg-indigo-500 text-white\"\r\n                : isOceanBreeze\r\n                ? \"bg-teal-500 text-white\"\r\n                : \"bg-indigo-600 text-white\"\r\n              : isDarkMode\r\n              ? \"bg-gray-700 text-gray-200\"\r\n              : isOceanBreeze\r\n              ? \"bg-blue-100 text-teal-800\"\r\n              : \"bg-gray-100 text-gray-700\"\r\n          }`}\r\n        >\r\n          <LayoutDashboard className=\"h-5 w-5\" />\r\n          <span>Dashboard</span>\r\n        </button>\r\n        <button\r\n          onClick={() => setActiveTab(\"tasks\")}\r\n          className={`px-4 py-2 rounded-lg flex items-center space-x-2 ${\r\n            activeTab === \"tasks\"\r\n              ? isDarkMode\r\n                ? \"bg-indigo-500 text-white\"\r\n                : isOceanBreeze\r\n                ? \"bg-teal-500 text-white\"\r\n                : \"bg-indigo-600 text-white\"\r\n              : isDarkMode\r\n              ? \"bg-gray-700 text-gray-200\"\r\n              : isOceanBreeze\r\n              ? \"bg-blue-100 text-teal-800\"\r\n              : \"bg-gray-100 text-gray-700\"\r\n          }`}\r\n        >\r\n          <CheckCircle className=\"h-5 w-5\" />\r\n          <span>Tasks</span>\r\n        </button>\r\n        <button\r\n          onClick={() => setActiveTab(\"analytics\")}\r\n          className={`px-4 py-2 rounded-lg flex items-center space-x-2 ${\r\n            activeTab === \"analytics\"\r\n              ? isDarkMode\r\n                ? \"bg-indigo-500 text-white\"\r\n                : isOceanBreeze\r\n                ? \"bg-teal-500 text-white\"\r\n                : \"bg-indigo-600 text-white\"\r\n              : isDarkMode\r\n              ? \"bg-gray-700 text-gray-200\"\r\n              : isOceanBreeze\r\n              ? \"bg-blue-100 text-teal-800\"\r\n              : \"bg-gray-100 text-gray-700\"\r\n          }`}\r\n        >\r\n          <BarChart2 className=\"h-5 w-5\" />\r\n          <span>Analytics</span>\r\n        </button>\r\n        <button\r\n          onClick={() => setActiveTab(\"achievements\")}\r\n          className={`px-4 py-2 rounded-lg flex items-center space-x-2 ${\r\n            activeTab === \"achievements\"\r\n              ? isDarkMode\r\n                ? \"bg-indigo-500 text-white\"\r\n                : isOceanBreeze\r\n                ? \"bg-teal-500 text-white\"\r\n                : \"bg-indigo-600 text-white\"\r\n              : isDarkMode\r\n              ? \"bg-gray-700 text-gray-200\"\r\n              : isOceanBreeze\r\n              ? \"bg-blue-100 text-teal-800\"\r\n              : \"bg-gray-100 text-gray-700\"\r\n          }`}\r\n        >\r\n          <CheckCircle className=\"h-5 w-5\" />\r\n          <span>Achievements</span>\r\n        </button>\r\n      </nav>\r\n\r\n      <main className=\"p-6\">\r\n        {error && (\r\n          <div\r\n            className={`p-4 mb-4 rounded-lg ${\r\n              isDarkMode\r\n                ? \"bg-red-900 text-red-200\"\r\n                : isOceanBreeze\r\n                ? \"bg-red-100 text-red-800\"\r\n                : \"bg-red-100 text-red-800\"\r\n            }`}\r\n          >\r\n            {error}\r\n          </div>\r\n        )}\r\n        {activeTab === \"dashboard\" && (\r\n          <Dashboard\r\n            tasks={tasks}\r\n            studyStats={studyStats}\r\n            aiSuggestion={aiSuggestion}\r\n            getStudyTips={getStudyTips}\r\n            generateSchedule={generateSchedule}\r\n            setActiveTab={setActiveTab}\r\n            toggleTaskComplete={toggleTaskComplete}\r\n            deleteTask={deleteTask}\r\n            currentTheme={currentTheme}\r\n            logStudyHours={logStudyHours}\r\n          />\r\n        )}\r\n        {activeTab === \"tasks\" && (\r\n          <TaskManager\r\n            tasks={tasks}\r\n            addTask={addTask}\r\n            updateTask={updateTask}\r\n            deleteTask={deleteTask}\r\n            toggleTaskComplete={toggleTaskComplete}\r\n            currentTheme={currentTheme}\r\n          />\r\n        )}\r\n        {activeTab === \"analytics\" && (\r\n          <Analytics tasks={tasks} currentTheme={currentTheme} />\r\n        )}\r\n        {activeTab === \"achievements\" && (\r\n          <Achievements\r\n            points={points}\r\n            badges={badges}\r\n            themes={themes}\r\n            setThemes={setThemes}\r\n            currentTheme={currentTheme}\r\n          />\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}