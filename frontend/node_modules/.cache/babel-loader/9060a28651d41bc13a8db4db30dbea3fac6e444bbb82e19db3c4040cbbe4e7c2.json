{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final Project\\\\study-buddy-planner\\\\src\\\\components\\\\Layout.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BookOpen } from \"lucide-react\";\nimport Dashboard from \"./Dashboard\";\nimport TaskManager from \"./TaskManager\";\nimport Analytics from \"./Analytics\";\nimport Rewards from \"./Rewards\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Layout() {\n  _s();\n  const [activeTab, setActiveTab] = useState(\"dashboard\");\n  const [tasks, setTasks] = useState([]);\n  const [studyStats, setStudyStats] = useState({\n    totalHours: 0,\n    completedTasks: 0,\n    streak: 0,\n    lastActiveDate: null,\n    lastStreakUpdate: null\n  });\n  const [aiSuggestion, setAiSuggestion] = useState(\"\");\n  const [points, setPoints] = useState(0);\n  const [badges, setBadges] = useState([]);\n  const [themes, setThemes] = useState([\"Light Mode\"]);\n  const [currentTheme, setCurrentTheme] = useState(\"Light Mode\");\n  const [loading, setLoading] = useState(true);\n  const userId = \"user123\"; // Hardcoded for now; replace with real user ID from auth\n\n  const themeStyles = {\n    \"Light Mode\": \"bg-slate-50 text-gray-800\",\n    \"Dark Mode\": \"bg-gray-800 text-gray-200\",\n    \"Ocean Breeze\": \"bg-gradient-to-br from-blue-100 to-teal-200 text-blue-900\"\n  };\n  const headerStyles = {\n    \"Light Mode\": \"bg-indigo-600 text-white\",\n    \"Dark Mode\": \"bg-indigo-900 text-gray-200\",\n    \"Ocean Breeze\": \"bg-blue-600 text-white\"\n  };\n  const navStyles = {\n    \"Light Mode\": \"bg-white text-gray-500\",\n    \"Dark Mode\": \"bg-gray-700 text-gray-300\",\n    \"Ocean Breeze\": \"bg-blue-200 text-blue-700\"\n  };\n\n  // Fetch user data from backend on mount\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/user/${userId}`);\n        const data = await response.json();\n        console.log(\"Fetched data:\", data);\n        setTasks(data.tasks || []);\n        const fetchedStats = data.studyStats || {\n          totalHours: 0,\n          completedTasks: 0,\n          streak: 0,\n          lastActiveDate: null,\n          lastStreakUpdate: null\n        };\n        console.log(\"Setting initial studyStats:\", fetchedStats);\n        setStudyStats(fetchedStats);\n        setPoints(data.points || 0);\n        setBadges(data.badges || []);\n        setThemes(data.themes || [\"Light Mode\"]);\n        setCurrentTheme(data.currentTheme || \"Light Mode\");\n\n        // Update streak\n        const today = new Date().toISOString().split(\"T\")[0];\n        console.log(\"Today's date:\", today);\n        const {\n          lastActiveDate,\n          streak,\n          lastStreakUpdate\n        } = fetchedStats;\n        let newStats = {\n          ...fetchedStats\n        };\n        if (lastStreakUpdate !== today) {\n          if (!lastActiveDate) {\n            console.log(\"No lastActiveDate, initializing with today's date...\");\n            newStats = {\n              ...fetchedStats,\n              lastActiveDate: today,\n              lastStreakUpdate: today\n            };\n          } else {\n            const lastDate = new Date(lastActiveDate);\n            const currentDate = new Date(today);\n            const diffDays = (currentDate - lastDate) / (1000 * 60 * 60 * 24);\n            console.log(\"Days difference:\", diffDays);\n            if (diffDays === 1) {\n              newStats = {\n                ...fetchedStats,\n                streak: fetchedStats.streak + 1,\n                lastActiveDate: today,\n                lastStreakUpdate: today\n              };\n              console.log(\"Updated studyStats (increment streak):\", newStats);\n            } else if (diffDays > 1) {\n              newStats = {\n                ...fetchedStats,\n                streak: 0,\n                lastActiveDate: today,\n                lastStreakUpdate: today\n              };\n              console.log(\"Updated studyStats (reset streak):\", newStats);\n            } else {\n              newStats = {\n                ...fetchedStats,\n                lastStreakUpdate: today\n              };\n              console.log(\"Updated studyStats (same day):\", newStats);\n            }\n          }\n          setStudyStats(newStats);\n        } else {\n          console.log(\"Streak already updated today, skipping...\");\n        }\n\n        // Set initial AI suggestion based on tasks\n        setTimeout(() => {\n          const incompleteTasks = (data.tasks || []).filter(task => !task.completed);\n          if (incompleteTasks.length > 0) {\n            const priorityTask = incompleteTasks.find(task => task.priority === \"High\") || incompleteTasks[0];\n            setAiSuggestion(`Based on your schedule and learning patterns, I recommend focusing on your \"${priorityTask.title}\" today.`);\n          } else {\n            setAiSuggestion(\"You have no incomplete tasks! Add a new task to keep progressing.\");\n          }\n        }, 1000);\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Error fetching user data:\", err);\n        toast.error(\"Failed to load user data. Using defaults.\");\n        setTasks([{\n          id: 1,\n          title: \"Complete Math Assignment\",\n          dueDate: \"2025-04-25\",\n          priority: \"High\",\n          completed: false\n        }, {\n          id: 2,\n          title: \"Review Chemistry Notes\",\n          dueDate: \"2025-04-23\",\n          priority: \"Medium\",\n          completed: true\n        }, {\n          id: 3,\n          title: \"Research Paper Outline\",\n          dueDate: \"2025-04-30\",\n          priority: \"High\",\n          completed: false\n        }]);\n\n        // Set initial AI suggestion for default tasks\n        setTimeout(() => {\n          const defaultIncompleteTasks = [{\n            id: 1,\n            title: \"Complete Math Assignment\",\n            dueDate: \"2025-04-25\",\n            priority: \"High\",\n            completed: false\n          }, {\n            id: 2,\n            title: \"Review Chemistry Notes\",\n            dueDate: \"2025-04-23\",\n            priority: \"Medium\",\n            completed: true\n          }, {\n            id: 3,\n            title: \"Research Paper Outline\",\n            dueDate: \"2025-04-30\",\n            priority: \"High\",\n            completed: false\n          }].filter(task => !task.completed);\n          const priorityTask = defaultIncompleteTasks.find(task => task.priority === \"High\") || defaultIncompleteTasks[0];\n          setAiSuggestion(`Based on your schedule and learning patterns, I recommend focusing on your \"${priorityTask.title}\" today.`);\n        }, 1000);\n        setLoading(false);\n      }\n    };\n    fetchUserData();\n  }, []);\n\n  // Debug studyStats after updates\n  useEffect(() => {\n    console.log(\"Current studyStats (after update):\", studyStats);\n  }, [studyStats]);\n\n  // Update completedTasks when tasks change\n  useEffect(() => {\n    const completedCount = tasks.filter(task => task.completed).length;\n    setStudyStats(prevStats => {\n      const newStats = {\n        ...prevStats,\n        completedTasks: completedCount\n      };\n      console.log(\"Updated studyStats (completedTasks):\", newStats);\n      return newStats;\n    });\n  }, [tasks]);\n\n  // Debounced save function\n  useEffect(() => {\n    const saveUserData = async () => {\n      try {\n        console.log(\"Saving data to MongoDB:\", {\n          tasks,\n          studyStats,\n          points,\n          badges,\n          themes,\n          currentTheme\n        });\n        const response = await fetch(`http://localhost:5000/api/user/${userId}`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            tasks,\n            studyStats,\n            points,\n            badges,\n            themes,\n            currentTheme\n          })\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to save user data\");\n        }\n        console.log(\"Data saved successfully\");\n      } catch (err) {\n        console.error(\"Error saving user data:\", err);\n        toast.error(\"Failed to save user data.\");\n      }\n    };\n    const debounceSave = setTimeout(() => {\n      saveUserData();\n    }, 1000);\n    return () => clearTimeout(debounceSave);\n  }, [tasks, studyStats, points, badges, themes, currentTheme]);\n\n  // Function to log study hours\n  const logStudyHours = hours => {\n    if (hours <= 0) {\n      toast.error(\"Please enter a valid number of hours.\");\n      return;\n    }\n    setStudyStats(prev => {\n      const newStats = {\n        ...prev,\n        totalHours: prev.totalHours + hours\n      };\n      console.log(\"Updated studyStats (logStudyHours):\", newStats);\n      return newStats;\n    });\n    toast.success(`Logged ${hours} study hours!`);\n  };\n  const getStudyTips = () => {\n    setAiSuggestion(\"Loading new suggestions...\");\n    setTimeout(() => {\n      const tips = [\"Try using the Pomodoro technique: 25 minutes of focused study followed by a 5-minute break.\", \"For difficult subjects, try teaching the material to an imaginary student.\", \"Create visual mind maps to connect key concepts in your subjects.\", \"Review your notes within 24 hours of taking them to improve retention.\", \"Study in short, frequent sessions rather than long cramming sessions.\"];\n      const randomTip = tips[Math.floor(Math.random() * tips.length)];\n      setAiSuggestion(randomTip);\n    }, 1500);\n  };\n  const generateSchedule = () => {\n    setAiSuggestion(\"Generating personalized study schedule...\");\n    setTimeout(() => {\n      const today = new Date();\n      const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n      const todayDay = days[today.getDay()];\n      const incompleteTasks = tasks.filter(task => !task.completed);\n      if (incompleteTasks.length === 0) {\n        setAiSuggestion(\"You have no incomplete tasks to schedule. Add a new task to get started!\");\n        return;\n      }\n      incompleteTasks.sort((a, b) => new Date(a.dueDate) - new Date(b.dueDate));\n      const schedule = [];\n      let taskIndex = 0;\n      if (taskIndex < incompleteTasks.length) {\n        const task = incompleteTasks[taskIndex];\n        const hours = task.priority === \"High\" ? 2 : task.priority === \"Medium\" ? 1.5 : 1;\n        schedule.push(`- ${todayDay} (Today): ${task.title} (${hours} hours) in the afternoon`);\n        taskIndex++;\n      }\n      today.setDate(today.getDate() + 1);\n      const tomorrowDay = days[today.getDay()];\n      if (taskIndex < incompleteTasks.length) {\n        const task = incompleteTasks[taskIndex];\n        const hours = task.priority === \"High\" ? 2 : task.priority === \"Medium\" ? 1.5 : 1;\n        schedule.push(`- ${tomorrowDay}: ${task.title} (${hours} hours) in the morning`);\n        taskIndex++;\n      }\n      today.setDate(today.getDate() + 1);\n      const dayAfterTomorrowDay = days[today.getDay()];\n      if (taskIndex < incompleteTasks.length) {\n        const task = incompleteTasks[taskIndex];\n        const hours = task.priority === \"High\" ? 2 : task.priority === \"Medium\" ? 1.5 : 1;\n        schedule.push(`- ${dayAfterTomorrowDay}: ${task.title} (${hours} hours)`);\n        taskIndex++;\n      }\n      today.setDate(today.getDate() + 1);\n      const nextDay = days[today.getDay()];\n      schedule.push(`- ${nextDay}: Complete remaining tasks and review progress`);\n      setAiSuggestion(\"Based on your upcoming tasks and past performance, here's a suggested schedule:\\n\\n\" + schedule.join(\"\\n\"));\n    }, 2000);\n  };\n  const addTask = newTask => {\n    const task = {\n      id: Date.now(),\n      ...newTask\n    };\n    setTasks([...tasks, task]);\n  };\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n  const toggleTaskComplete = id => {\n    const task = tasks.find(task => task.id === id);\n    if (!task) return;\n    let newPoints = points;\n    let newBadges = [...badges];\n    let notifications = [];\n    const updatedTasks = tasks.map(t => t.id === id ? {\n      ...t,\n      completed: !t.completed\n    } : t);\n    setTasks(updatedTasks);\n    if (!task.completed) {\n      let pointsToAdd = task.priority === \"High\" ? 30 : task.priority === \"Medium\" ? 20 : 10;\n      newPoints = points + pointsToAdd;\n      notifications.push(`🎉 +${pointsToAdd} Points! Keep it up!`);\n      const highPriorityTasks = updatedTasks.filter(t => t.priority === \"High\" && t.completed).length;\n      if (highPriorityTasks >= 5 && !badges.includes(\"Priority Master\")) {\n        newBadges.push(\"Priority Master\");\n        notifications.push(\"🏆 Badge Earned: Priority Master!\");\n      }\n      const totalCompletedTasks = updatedTasks.filter(t => t.completed).length;\n      if (totalCompletedTasks >= 10 && !badges.includes(\"Task Titan\")) {\n        newBadges.push(\"Task Titan\");\n        notifications.push(\"🏆 Badge Earned: Task Titan!\");\n      }\n      const dueDate = new Date(task.dueDate);\n      const today = new Date();\n      if (dueDate > today) {\n        const earlyTasks = updatedTasks.filter(t => new Date(t.dueDate) > today && t.completed).length;\n        if (earlyTasks >= 3 && !badges.includes(\"Early Bird\")) {\n          newBadges.push(\"Early Bird\");\n          notifications.push(\"🏆 Badge Earned: Early Bird!\");\n        }\n      }\n    } else {\n      let pointsToDeduct = task.priority === \"High\" ? 30 : task.priority === \"Medium\" ? 20 : 10;\n      newPoints = Math.max(0, points - pointsToDeduct);\n      notifications.push(`↩️ -${pointsToDeduct} Points. Task unmarked as completed.`);\n    }\n    setPoints(newPoints);\n    setBadges(newBadges);\n    notifications.forEach(msg => toast.success(msg));\n  };\n  const updateTask = updatedTask => {\n    setTasks(tasks.map(task => task.id === updatedTask.id ? updatedTask : task));\n  };\n  useEffect(() => {\n    if (studyStats.streak >= 7 && !badges.includes(\"Streak Star\")) {\n      let newBadges = [...badges, \"Streak Star\"];\n      let newPoints = points + 50;\n      setBadges(newBadges);\n      setPoints(newPoints);\n      toast.success(\"🏆 Badge Earned: Streak Star!\");\n      toast.success(\"🎉 +50 Points for 7-Day Streak!\");\n    }\n  }, [studyStats.streak]);\n  const unlockTheme = (theme, cost) => {\n    if (points >= cost && !themes.includes(theme)) {\n      setThemes(prev => [...prev, theme]);\n      setCurrentTheme(theme);\n      setPoints(prev => prev - cost);\n      toast.success(`🎨 Unlocked ${theme}!`);\n    } else if (themes.includes(theme)) {\n      setCurrentTheme(theme);\n      toast.info(`🎨 Switched to ${theme}!`);\n    } else {\n      toast.error(\"Not enough points to unlock this theme!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `min-h-screen ${themeStyles[currentTheme]}`,\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: `p-4 ${headerStyles[currentTheme]}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(BookOpen, {\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this), \"StudyBuddy AI Planner\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `px-4 py-2 rounded-lg text-sm ${currentTheme === \"Dark Mode\" ? \"bg-indigo-700 text-gray-200\" : \"bg-indigo-700 text-white\"}`,\n          children: new Date().toLocaleDateString(\"en-US\", {\n            weekday: \"long\",\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: `shadow ${navStyles[currentTheme]}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab(\"dashboard\"),\n            className: `px-4 py-3 font-medium text-sm ${activeTab === \"dashboard\" ? \"border-b-2 border-indigo-600 text-indigo-600\" : currentTheme === \"Dark Mode\" ? \"text-gray-300\" : \"text-gray-500\"}`,\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab(\"tasks\"),\n            className: `px-4 py-3 font-medium text-sm ${activeTab === \"tasks\" ? \"border-b-2 border-indigo-600 text-indigo-600\" : currentTheme === \"Dark Mode\" ? \"text-gray-300\" : \"text-gray-500\"}`,\n            children: \"Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab(\"analytics\"),\n            className: `px-4 py-3 font-medium text-sm ${activeTab === \"analytics\" ? \"border-b-2 border-indigo-600 text-indigo-600\" : currentTheme === \"Dark Mode\" ? \"text-gray-300\" : \"text-gray-500\"}`,\n            children: \"Analytics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab(\"rewards\"),\n            className: `px-4 py-3 font-medium text-sm ${activeTab === \"rewards\" ? \"border-b-2 border-indigo-600 text-indigo-600\" : currentTheme === \"Dark Mode\" ? \"text-gray-300\" : \"text-gray-500\"}`,\n            children: \"Rewards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container mx-auto p-4\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-pulse flex justify-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-4 h-4 rounded-full ${currentTheme === \"Dark Mode\" ? \"bg-indigo-500\" : \"bg-indigo-600\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-4 h-4 rounded-full ${currentTheme === \"Dark Mode\" ? \"bg-indigo-500\" : \"bg-indigo-600\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-4 h-4 rounded-full ${currentTheme === \"Dark Mode\" ? \"bg-indigo-500\" : \"bg-indigo-600\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2\",\n          children: \"Loading your study data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [activeTab === \"dashboard\" && /*#__PURE__*/_jsxDEV(Dashboard, {\n          tasks: tasks,\n          studyStats: studyStats,\n          aiSuggestion: aiSuggestion,\n          getStudyTips: getStudyTips,\n          generateSchedule: generateSchedule,\n          setActiveTab: setActiveTab,\n          toggleTaskComplete: toggleTaskComplete,\n          deleteTask: deleteTask,\n          currentTheme: currentTheme,\n          logStudyHours: logStudyHours\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 15\n        }, this), activeTab === \"tasks\" && /*#__PURE__*/_jsxDEV(TaskManager, {\n          tasks: tasks,\n          addTask: addTask,\n          updateTask: updateTask,\n          deleteTask: deleteTask,\n          toggleTaskComplete: toggleTaskComplete,\n          currentTheme: currentTheme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 15\n        }, this), activeTab === \"analytics\" && /*#__PURE__*/_jsxDEV(Analytics, {\n          tasks: tasks,\n          currentTheme: currentTheme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 15\n        }, this), activeTab === \"rewards\" && /*#__PURE__*/_jsxDEV(Rewards, {\n          points: points,\n          badges: badges,\n          studyStats: studyStats,\n          themes: themes,\n          currentTheme: currentTheme,\n          unlockTheme: unlockTheme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 479,\n    columnNumber: 5\n  }, this);\n}\n_s(Layout, \"QJFCLlnuqt/lUfBV4FbyDpCLPgk=\");\n_c = Layout;\nexport default Layout;\nvar _c;\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"names":["React","useState","useEffect","BookOpen","Dashboard","TaskManager","Analytics","Rewards","ToastContainer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","Layout","_s","activeTab","setActiveTab","tasks","setTasks","studyStats","setStudyStats","totalHours","completedTasks","streak","lastActiveDate","lastStreakUpdate","aiSuggestion","setAiSuggestion","points","setPoints","badges","setBadges","themes","setThemes","currentTheme","setCurrentTheme","loading","setLoading","userId","themeStyles","headerStyles","navStyles","fetchUserData","response","fetch","data","json","console","log","fetchedStats","today","Date","toISOString","split","newStats","lastDate","currentDate","diffDays","setTimeout","incompleteTasks","filter","task","completed","length","priorityTask","find","priority","title","err","error","id","dueDate","defaultIncompleteTasks","completedCount","prevStats","saveUserData","method","headers","body","JSON","stringify","ok","Error","debounceSave","clearTimeout","logStudyHours","hours","prev","success","getStudyTips","tips","randomTip","Math","floor","random","generateSchedule","days","todayDay","getDay","sort","a","b","schedule","taskIndex","push","setDate","getDate","tomorrowDay","dayAfterTomorrowDay","nextDay","join","addTask","newTask","now","deleteTask","toggleTaskComplete","newPoints","newBadges","notifications","updatedTasks","map","t","pointsToAdd","highPriorityTasks","includes","totalCompletedTasks","earlyTasks","pointsToDeduct","max","forEach","msg","updateTask","updatedTask","unlockTheme","theme","cost","info","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleDateString","weekday","year","month","day","onClick","_c","$RefreshReg$"],"sources":["D:/Final Project/study-buddy-planner/src/components/Layout.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { BookOpen } from \"lucide-react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport TaskManager from \"./TaskManager\";\r\nimport Analytics from \"./Analytics\";\r\nimport Rewards from \"./Rewards\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction Layout() {\r\n  const [activeTab, setActiveTab] = useState(\"dashboard\");\r\n  const [tasks, setTasks] = useState([]);\r\n  const [studyStats, setStudyStats] = useState({\r\n    totalHours: 0,\r\n    completedTasks: 0,\r\n    streak: 0,\r\n    lastActiveDate: null,\r\n    lastStreakUpdate: null,\r\n  });\r\n  const [aiSuggestion, setAiSuggestion] = useState(\"\");\r\n  const [points, setPoints] = useState(0);\r\n  const [badges, setBadges] = useState([]);\r\n  const [themes, setThemes] = useState([\"Light Mode\"]);\r\n  const [currentTheme, setCurrentTheme] = useState(\"Light Mode\");\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const userId = \"user123\"; // Hardcoded for now; replace with real user ID from auth\r\n\r\n  const themeStyles = {\r\n    \"Light Mode\": \"bg-slate-50 text-gray-800\",\r\n    \"Dark Mode\": \"bg-gray-800 text-gray-200\",\r\n    \"Ocean Breeze\": \"bg-gradient-to-br from-blue-100 to-teal-200 text-blue-900\",\r\n  };\r\n\r\n  const headerStyles = {\r\n    \"Light Mode\": \"bg-indigo-600 text-white\",\r\n    \"Dark Mode\": \"bg-indigo-900 text-gray-200\",\r\n    \"Ocean Breeze\": \"bg-blue-600 text-white\",\r\n  };\r\n\r\n  const navStyles = {\r\n    \"Light Mode\": \"bg-white text-gray-500\",\r\n    \"Dark Mode\": \"bg-gray-700 text-gray-300\",\r\n    \"Ocean Breeze\": \"bg-blue-200 text-blue-700\",\r\n  };\r\n\r\n  // Fetch user data from backend on mount\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:5000/api/user/${userId}`\r\n        );\r\n        const data = await response.json();\r\n        console.log(\"Fetched data:\", data);\r\n\r\n        setTasks(data.tasks || []);\r\n        const fetchedStats = data.studyStats || {\r\n          totalHours: 0,\r\n          completedTasks: 0,\r\n          streak: 0,\r\n          lastActiveDate: null,\r\n          lastStreakUpdate: null,\r\n        };\r\n        console.log(\"Setting initial studyStats:\", fetchedStats);\r\n        setStudyStats(fetchedStats);\r\n        setPoints(data.points || 0);\r\n        setBadges(data.badges || []);\r\n        setThemes(data.themes || [\"Light Mode\"]);\r\n        setCurrentTheme(data.currentTheme || \"Light Mode\");\r\n\r\n        // Update streak\r\n        const today = new Date().toISOString().split(\"T\")[0];\r\n        console.log(\"Today's date:\", today);\r\n        const { lastActiveDate, streak, lastStreakUpdate } = fetchedStats;\r\n\r\n        let newStats = { ...fetchedStats };\r\n        if (lastStreakUpdate !== today) {\r\n          if (!lastActiveDate) {\r\n            console.log(\"No lastActiveDate, initializing with today's date...\");\r\n            newStats = {\r\n              ...fetchedStats,\r\n              lastActiveDate: today,\r\n              lastStreakUpdate: today,\r\n            };\r\n          } else {\r\n            const lastDate = new Date(lastActiveDate);\r\n            const currentDate = new Date(today);\r\n            const diffDays = (currentDate - lastDate) / (1000 * 60 * 60 * 24);\r\n            console.log(\"Days difference:\", diffDays);\r\n\r\n            if (diffDays === 1) {\r\n              newStats = {\r\n                ...fetchedStats,\r\n                streak: fetchedStats.streak + 1,\r\n                lastActiveDate: today,\r\n                lastStreakUpdate: today,\r\n              };\r\n              console.log(\"Updated studyStats (increment streak):\", newStats);\r\n            } else if (diffDays > 1) {\r\n              newStats = {\r\n                ...fetchedStats,\r\n                streak: 0,\r\n                lastActiveDate: today,\r\n                lastStreakUpdate: today,\r\n              };\r\n              console.log(\"Updated studyStats (reset streak):\", newStats);\r\n            } else {\r\n              newStats = {\r\n                ...fetchedStats,\r\n                lastStreakUpdate: today,\r\n              };\r\n              console.log(\"Updated studyStats (same day):\", newStats);\r\n            }\r\n          }\r\n          setStudyStats(newStats);\r\n        } else {\r\n          console.log(\"Streak already updated today, skipping...\");\r\n        }\r\n\r\n        // Set initial AI suggestion based on tasks\r\n        setTimeout(() => {\r\n          const incompleteTasks = (data.tasks || []).filter(\r\n            (task) => !task.completed\r\n          );\r\n          if (incompleteTasks.length > 0) {\r\n            const priorityTask =\r\n              incompleteTasks.find((task) => task.priority === \"High\") ||\r\n              incompleteTasks[0];\r\n            setAiSuggestion(\r\n              `Based on your schedule and learning patterns, I recommend focusing on your \"${priorityTask.title}\" today.`\r\n            );\r\n          } else {\r\n            setAiSuggestion(\r\n              \"You have no incomplete tasks! Add a new task to keep progressing.\"\r\n            );\r\n          }\r\n        }, 1000);\r\n\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error(\"Error fetching user data:\", err);\r\n        toast.error(\"Failed to load user data. Using defaults.\");\r\n        setTasks([\r\n          {\r\n            id: 1,\r\n            title: \"Complete Math Assignment\",\r\n            dueDate: \"2025-04-25\",\r\n            priority: \"High\",\r\n            completed: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            title: \"Review Chemistry Notes\",\r\n            dueDate: \"2025-04-23\",\r\n            priority: \"Medium\",\r\n            completed: true,\r\n          },\r\n          {\r\n            id: 3,\r\n            title: \"Research Paper Outline\",\r\n            dueDate: \"2025-04-30\",\r\n            priority: \"High\",\r\n            completed: false,\r\n          },\r\n        ]);\r\n\r\n        // Set initial AI suggestion for default tasks\r\n        setTimeout(() => {\r\n          const defaultIncompleteTasks = [\r\n            {\r\n              id: 1,\r\n              title: \"Complete Math Assignment\",\r\n              dueDate: \"2025-04-25\",\r\n              priority: \"High\",\r\n              completed: false,\r\n            },\r\n            {\r\n              id: 2,\r\n              title: \"Review Chemistry Notes\",\r\n              dueDate: \"2025-04-23\",\r\n              priority: \"Medium\",\r\n              completed: true,\r\n            },\r\n            {\r\n              id: 3,\r\n              title: \"Research Paper Outline\",\r\n              dueDate: \"2025-04-30\",\r\n              priority: \"High\",\r\n              completed: false,\r\n            },\r\n          ].filter((task) => !task.completed);\r\n          const priorityTask =\r\n            defaultIncompleteTasks.find((task) => task.priority === \"High\") ||\r\n            defaultIncompleteTasks[0];\r\n          setAiSuggestion(\r\n            `Based on your schedule and learning patterns, I recommend focusing on your \"${priorityTask.title}\" today.`\r\n          );\r\n        }, 1000);\r\n\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  // Debug studyStats after updates\r\n  useEffect(() => {\r\n    console.log(\"Current studyStats (after update):\", studyStats);\r\n  }, [studyStats]);\r\n\r\n  // Update completedTasks when tasks change\r\n  useEffect(() => {\r\n    const completedCount = tasks.filter((task) => task.completed).length;\r\n    setStudyStats((prevStats) => {\r\n      const newStats = { ...prevStats, completedTasks: completedCount };\r\n      console.log(\"Updated studyStats (completedTasks):\", newStats);\r\n      return newStats;\r\n    });\r\n  }, [tasks]);\r\n\r\n  // Debounced save function\r\n  useEffect(() => {\r\n    const saveUserData = async () => {\r\n      try {\r\n        console.log(\"Saving data to MongoDB:\", {\r\n          tasks,\r\n          studyStats,\r\n          points,\r\n          badges,\r\n          themes,\r\n          currentTheme,\r\n        });\r\n        const response = await fetch(\r\n          `http://localhost:5000/api/user/${userId}`,\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              tasks,\r\n              studyStats,\r\n              points,\r\n              badges,\r\n              themes,\r\n              currentTheme,\r\n            }),\r\n          }\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to save user data\");\r\n        }\r\n        console.log(\"Data saved successfully\");\r\n      } catch (err) {\r\n        console.error(\"Error saving user data:\", err);\r\n        toast.error(\"Failed to save user data.\");\r\n      }\r\n    };\r\n\r\n    const debounceSave = setTimeout(() => {\r\n      saveUserData();\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(debounceSave);\r\n  }, [tasks, studyStats, points, badges, themes, currentTheme]);\r\n\r\n  // Function to log study hours\r\n  const logStudyHours = (hours) => {\r\n    if (hours <= 0) {\r\n      toast.error(\"Please enter a valid number of hours.\");\r\n      return;\r\n    }\r\n    setStudyStats((prev) => {\r\n      const newStats = {\r\n        ...prev,\r\n        totalHours: prev.totalHours + hours,\r\n      };\r\n      console.log(\"Updated studyStats (logStudyHours):\", newStats);\r\n      return newStats;\r\n    });\r\n    toast.success(`Logged ${hours} study hours!`);\r\n  };\r\n\r\n  const getStudyTips = () => {\r\n    setAiSuggestion(\"Loading new suggestions...\");\r\n    setTimeout(() => {\r\n      const tips = [\r\n        \"Try using the Pomodoro technique: 25 minutes of focused study followed by a 5-minute break.\",\r\n        \"For difficult subjects, try teaching the material to an imaginary student.\",\r\n        \"Create visual mind maps to connect key concepts in your subjects.\",\r\n        \"Review your notes within 24 hours of taking them to improve retention.\",\r\n        \"Study in short, frequent sessions rather than long cramming sessions.\",\r\n      ];\r\n      const randomTip = tips[Math.floor(Math.random() * tips.length)];\r\n      setAiSuggestion(randomTip);\r\n    }, 1500);\r\n  };\r\n\r\n  const generateSchedule = () => {\r\n    setAiSuggestion(\"Generating personalized study schedule...\");\r\n    setTimeout(() => {\r\n      const today = new Date();\r\n      const days = [\r\n        \"Sunday\",\r\n        \"Monday\",\r\n        \"Tuesday\",\r\n        \"Wednesday\",\r\n        \"Thursday\",\r\n        \"Friday\",\r\n        \"Saturday\",\r\n      ];\r\n      const todayDay = days[today.getDay()];\r\n\r\n      const incompleteTasks = tasks.filter((task) => !task.completed);\r\n      if (incompleteTasks.length === 0) {\r\n        setAiSuggestion(\r\n          \"You have no incomplete tasks to schedule. Add a new task to get started!\"\r\n        );\r\n        return;\r\n      }\r\n\r\n      incompleteTasks.sort((a, b) => new Date(a.dueDate) - new Date(b.dueDate));\r\n\r\n      const schedule = [];\r\n      let taskIndex = 0;\r\n\r\n      if (taskIndex < incompleteTasks.length) {\r\n        const task = incompleteTasks[taskIndex];\r\n        const hours =\r\n          task.priority === \"High\" ? 2 : task.priority === \"Medium\" ? 1.5 : 1;\r\n        schedule.push(\r\n          `- ${todayDay} (Today): ${task.title} (${hours} hours) in the afternoon`\r\n        );\r\n        taskIndex++;\r\n      }\r\n\r\n      today.setDate(today.getDate() + 1);\r\n      const tomorrowDay = days[today.getDay()];\r\n      if (taskIndex < incompleteTasks.length) {\r\n        const task = incompleteTasks[taskIndex];\r\n        const hours =\r\n          task.priority === \"High\" ? 2 : task.priority === \"Medium\" ? 1.5 : 1;\r\n        schedule.push(\r\n          `- ${tomorrowDay}: ${task.title} (${hours} hours) in the morning`\r\n        );\r\n        taskIndex++;\r\n      }\r\n\r\n      today.setDate(today.getDate() + 1);\r\n      const dayAfterTomorrowDay = days[today.getDay()];\r\n      if (taskIndex < incompleteTasks.length) {\r\n        const task = incompleteTasks[taskIndex];\r\n        const hours =\r\n          task.priority === \"High\" ? 2 : task.priority === \"Medium\" ? 1.5 : 1;\r\n        schedule.push(\r\n          `- ${dayAfterTomorrowDay}: ${task.title} (${hours} hours)`\r\n        );\r\n        taskIndex++;\r\n      }\r\n\r\n      today.setDate(today.getDate() + 1);\r\n      const nextDay = days[today.getDay()];\r\n      schedule.push(\r\n        `- ${nextDay}: Complete remaining tasks and review progress`\r\n      );\r\n\r\n      setAiSuggestion(\r\n        \"Based on your upcoming tasks and past performance, here's a suggested schedule:\\n\\n\" +\r\n          schedule.join(\"\\n\")\r\n      );\r\n    }, 2000);\r\n  };\r\n\r\n  const addTask = (newTask) => {\r\n    const task = { id: Date.now(), ...newTask };\r\n    setTasks([...tasks, task]);\r\n  };\r\n\r\n  const deleteTask = (id) => {\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  const toggleTaskComplete = (id) => {\r\n    const task = tasks.find((task) => task.id === id);\r\n    if (!task) return;\r\n\r\n    let newPoints = points;\r\n    let newBadges = [...badges];\r\n    let notifications = [];\r\n\r\n    const updatedTasks = tasks.map((t) =>\r\n      t.id === id ? { ...t, completed: !t.completed } : t\r\n    );\r\n    setTasks(updatedTasks);\r\n\r\n    if (!task.completed) {\r\n      let pointsToAdd =\r\n        task.priority === \"High\" ? 30 : task.priority === \"Medium\" ? 20 : 10;\r\n      newPoints = points + pointsToAdd;\r\n      notifications.push(`🎉 +${pointsToAdd} Points! Keep it up!`);\r\n\r\n      const highPriorityTasks = updatedTasks.filter(\r\n        (t) => t.priority === \"High\" && t.completed\r\n      ).length;\r\n      if (highPriorityTasks >= 5 && !badges.includes(\"Priority Master\")) {\r\n        newBadges.push(\"Priority Master\");\r\n        notifications.push(\"🏆 Badge Earned: Priority Master!\");\r\n      }\r\n\r\n      const totalCompletedTasks = updatedTasks.filter(\r\n        (t) => t.completed\r\n      ).length;\r\n      if (totalCompletedTasks >= 10 && !badges.includes(\"Task Titan\")) {\r\n        newBadges.push(\"Task Titan\");\r\n        notifications.push(\"🏆 Badge Earned: Task Titan!\");\r\n      }\r\n\r\n      const dueDate = new Date(task.dueDate);\r\n      const today = new Date();\r\n      if (dueDate > today) {\r\n        const earlyTasks = updatedTasks.filter(\r\n          (t) => new Date(t.dueDate) > today && t.completed\r\n        ).length;\r\n        if (earlyTasks >= 3 && !badges.includes(\"Early Bird\")) {\r\n          newBadges.push(\"Early Bird\");\r\n          notifications.push(\"🏆 Badge Earned: Early Bird!\");\r\n        }\r\n      }\r\n    } else {\r\n      let pointsToDeduct =\r\n        task.priority === \"High\" ? 30 : task.priority === \"Medium\" ? 20 : 10;\r\n      newPoints = Math.max(0, points - pointsToDeduct);\r\n      notifications.push(\r\n        `↩️ -${pointsToDeduct} Points. Task unmarked as completed.`\r\n      );\r\n    }\r\n\r\n    setPoints(newPoints);\r\n    setBadges(newBadges);\r\n    notifications.forEach((msg) => toast.success(msg));\r\n  };\r\n\r\n  const updateTask = (updatedTask) => {\r\n    setTasks(\r\n      tasks.map((task) => (task.id === updatedTask.id ? updatedTask : task))\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (studyStats.streak >= 7 && !badges.includes(\"Streak Star\")) {\r\n      let newBadges = [...badges, \"Streak Star\"];\r\n      let newPoints = points + 50;\r\n\r\n      setBadges(newBadges);\r\n      setPoints(newPoints);\r\n\r\n      toast.success(\"🏆 Badge Earned: Streak Star!\");\r\n      toast.success(\"🎉 +50 Points for 7-Day Streak!\");\r\n    }\r\n  }, [studyStats.streak]);\r\n\r\n  const unlockTheme = (theme, cost) => {\r\n    if (points >= cost && !themes.includes(theme)) {\r\n      setThemes((prev) => [...prev, theme]);\r\n      setCurrentTheme(theme);\r\n      setPoints((prev) => prev - cost);\r\n      toast.success(`🎨 Unlocked ${theme}!`);\r\n    } else if (themes.includes(theme)) {\r\n      setCurrentTheme(theme);\r\n      toast.info(`🎨 Switched to ${theme}!`);\r\n    } else {\r\n      toast.error(\"Not enough points to unlock this theme!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`min-h-screen ${themeStyles[currentTheme]}`}>\r\n      <ToastContainer />\r\n      <header className={`p-4 ${headerStyles[currentTheme]}`}>\r\n        <div className=\"container mx-auto flex justify-between items-center\">\r\n          <h1 className=\"text-2xl font-bold flex items-center\">\r\n            <BookOpen className=\"mr-2\" />\r\n            StudyBuddy AI Planner\r\n          </h1>\r\n          <div\r\n            className={`px-4 py-2 rounded-lg text-sm ${\r\n              currentTheme === \"Dark Mode\"\r\n                ? \"bg-indigo-700 text-gray-200\"\r\n                : \"bg-indigo-700 text-white\"\r\n            }`}\r\n          >\r\n            {new Date().toLocaleDateString(\"en-US\", {\r\n              weekday: \"long\",\r\n              year: \"numeric\",\r\n              month: \"long\",\r\n              day: \"numeric\",\r\n            })}\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <nav className={`shadow ${navStyles[currentTheme]}`}>\r\n        <div className=\"container mx-auto\">\r\n          <div className=\"flex\">\r\n            <button\r\n              onClick={() => setActiveTab(\"dashboard\")}\r\n              className={`px-4 py-3 font-medium text-sm ${\r\n                activeTab === \"dashboard\"\r\n                  ? \"border-b-2 border-indigo-600 text-indigo-600\"\r\n                  : currentTheme === \"Dark Mode\"\r\n                  ? \"text-gray-300\"\r\n                  : \"text-gray-500\"\r\n              }`}\r\n            >\r\n              Dashboard\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab(\"tasks\")}\r\n              className={`px-4 py-3 font-medium text-sm ${\r\n                activeTab === \"tasks\"\r\n                  ? \"border-b-2 border-indigo-600 text-indigo-600\"\r\n                  : currentTheme === \"Dark Mode\"\r\n                  ? \"text-gray-300\"\r\n                  : \"text-gray-500\"\r\n              }`}\r\n            >\r\n              Tasks\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab(\"analytics\")}\r\n              className={`px-4 py-3 font-medium text-sm ${\r\n                activeTab === \"analytics\"\r\n                  ? \"border-b-2 border-indigo-600 text-indigo-600\"\r\n                  : currentTheme === \"Dark Mode\"\r\n                  ? \"text-gray-300\"\r\n                  : \"text-gray-500\"\r\n              }`}\r\n            >\r\n              Analytics\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab(\"rewards\")}\r\n              className={`px-4 py-3 font-medium text-sm ${\r\n                activeTab === \"rewards\"\r\n                  ? \"border-b-2 border-indigo-600 text-indigo-600\"\r\n                  : currentTheme === \"Dark Mode\"\r\n                  ? \"text-gray-300\"\r\n                  : \"text-gray-500\"\r\n              }`}\r\n            >\r\n              Rewards\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n      <main className=\"container mx-auto p-4\">\r\n        {loading ? (\r\n          <div className=\"text-center py-8\">\r\n            <div className=\"animate-pulse flex justify-center space-x-2\">\r\n              <div\r\n                className={`w-4 h-4 rounded-full ${\r\n                  currentTheme === \"Dark Mode\"\r\n                    ? \"bg-indigo-500\"\r\n                    : \"bg-indigo-600\"\r\n                }`}\r\n              ></div>\r\n              <div\r\n                className={`w-4 h-4 rounded-full ${\r\n                  currentTheme === \"Dark Mode\"\r\n                    ? \"bg-indigo-500\"\r\n                    : \"bg-indigo-600\"\r\n                }`}\r\n              ></div>\r\n              <div\r\n                className={`w-4 h-4 rounded-full ${\r\n                  currentTheme === \"Dark Mode\"\r\n                    ? \"bg-indigo-500\"\r\n                    : \"bg-indigo-600\"\r\n                }`}\r\n              ></div>\r\n            </div>\r\n            <p className=\"mt-2\">Loading your study data...</p>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            {activeTab === \"dashboard\" && (\r\n              <Dashboard\r\n                tasks={tasks}\r\n                studyStats={studyStats}\r\n                aiSuggestion={aiSuggestion}\r\n                getStudyTips={getStudyTips}\r\n                generateSchedule={generateSchedule}\r\n                setActiveTab={setActiveTab}\r\n                toggleTaskComplete={toggleTaskComplete}\r\n                deleteTask={deleteTask}\r\n                currentTheme={currentTheme}\r\n                logStudyHours={logStudyHours}\r\n              />\r\n            )}\r\n\r\n            {activeTab === \"tasks\" && (\r\n              <TaskManager\r\n                tasks={tasks}\r\n                addTask={addTask}\r\n                updateTask={updateTask}\r\n                deleteTask={deleteTask}\r\n                toggleTaskComplete={toggleTaskComplete}\r\n                currentTheme={currentTheme}\r\n              />\r\n            )}\r\n\r\n            {activeTab === \"analytics\" && (\r\n              <Analytics tasks={tasks} currentTheme={currentTheme} />\r\n            )}\r\n\r\n            {activeTab === \"rewards\" && (\r\n              <Rewards\r\n                points={points}\r\n                badges={badges}\r\n                studyStats={studyStats}\r\n                themes={themes}\r\n                currentTheme={currentTheme}\r\n                unlockTheme={unlockTheme}\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}