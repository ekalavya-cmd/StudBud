{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final Project\\\\study-buddy-planner\\\\src\\\\components\\\\Layout.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BookOpen } from \"lucide-react\";\nimport Dashboard from \"./Dashboard\";\nimport TaskManager from \"./TaskManager\";\nimport Analytics from \"./Analytics\";\nimport Rewards from \"./Rewards\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Layout() {\n  _s();\n  const [activeTab, setActiveTab] = useState(\"dashboard\");\n  const [tasks, setTasks] = useState([]);\n  const [studyStats, setStudyStats] = useState({\n    totalHours: 0,\n    completedTasks: 0,\n    streak: 0,\n    lastActiveDate: null\n  });\n  const [aiSuggestion, setAiSuggestion] = useState(\"\");\n  const [points, setPoints] = useState(0);\n  const [badges, setBadges] = useState([]);\n  const [themes, setThemes] = useState([\"default\"]); // New state for themes\n  const [currentTheme, setCurrentTheme] = useState(\"default\"); // Current theme\n\n  // Theme styles\n  const themeStyles = {\n    default: \"bg-slate-50 text-gray-800\",\n    \"Dark Mode\": \"bg-gray-800 text-white\",\n    \"Ocean Breeze\": \"bg-blue-100 text-blue-900\"\n  };\n\n  // Simulate loading initial data\n  useEffect(() => {\n    // Load tasks\n    const savedTasks = localStorage.getItem(\"studyBuddyTasks\");\n    if (savedTasks) {\n      setTasks(JSON.parse(savedTasks));\n    } else {\n      setTasks([{\n        id: 1,\n        title: \"Complete Math Assignment\",\n        dueDate: \"2025-04-25\",\n        priority: \"High\",\n        completed: false\n      }, {\n        id: 2,\n        title: \"Review Chemistry Notes\",\n        dueDate: \"2025-04-23\",\n        priority: \"Medium\",\n        completed: true\n      }, {\n        id: 3,\n        title: \"Research Paper Outline\",\n        dueDate: \"2025-04-30\",\n        priority: \"High\",\n        completed: false\n      }]);\n    }\n\n    // Load stats\n    const savedStats = localStorage.getItem(\"studyBuddyStats\");\n    if (savedStats) {\n      setStudyStats(JSON.parse(savedStats));\n    }\n\n    // Load points, badges, and themes\n    const savedPoints = localStorage.getItem(\"studyBuddyPoints\");\n    const savedBadges = localStorage.getItem(\"studyBuddyBadges\");\n    const savedThemes = localStorage.getItem(\"studyBuddyThemes\");\n    if (savedPoints) setPoints(parseInt(savedPoints));\n    if (savedBadges) setBadges(JSON.parse(savedBadges));\n    if (savedThemes) {\n      const themesArray = JSON.parse(savedThemes);\n      setThemes(themesArray);\n      setCurrentTheme(themesArray[themesArray.length - 1]); // Set to the latest unlocked theme\n    }\n\n    // Simulate AI suggestion\n    setTimeout(() => {\n      setAiSuggestion(\"Based on your schedule and learning patterns, I recommend focusing on your Math Assignment today.\");\n    }, 1000);\n  }, []);\n\n  // Dynamic streak update\n  useEffect(() => {\n    const today = new Date().toISOString().split(\"T\")[0];\n    const {\n      lastActiveDate,\n      streak\n    } = studyStats;\n    if (!lastActiveDate) {\n      setStudyStats(prev => ({\n        ...prev,\n        lastActiveDate: today\n      }));\n      return;\n    }\n    const lastDate = new Date(lastActiveDate);\n    const currentDate = new Date(today);\n    const diffDays = (currentDate - lastDate) / (1000 * 60 * 60 * 24);\n    if (diffDays === 1) {\n      setStudyStats(prev => ({\n        ...prev,\n        streak: prev.streak + 1,\n        lastActiveDate: today\n      }));\n    } else if (diffDays > 1) {\n      setStudyStats(prev => ({\n        ...prev,\n        streak: 0,\n        lastActiveDate: today\n      }));\n    }\n  }, [tasks]); // Trigger when tasks change\n\n  // Save data to localStorage\n  useEffect(() => {\n    localStorage.setItem(\"studyBuddyTasks\", JSON.stringify(tasks));\n    const completedCount = tasks.filter(task => task.completed).length;\n    setStudyStats(prevStats => {\n      const newStats = {\n        ...prevStats,\n        completedTasks: completedCount\n      };\n      localStorage.setItem(\"studyBuddyStats\", JSON.stringify(newStats));\n      return newStats;\n    });\n    localStorage.setItem(\"studyBuddyPoints\", points.toString());\n    localStorage.setItem(\"studyBuddyBadges\", JSON.stringify(badges));\n    localStorage.setItem(\"studyBuddyThemes\", JSON.stringify(themes));\n  }, [tasks, points, badges, themes]);\n\n  // Get AI study tips\n  const getStudyTips = () => {\n    setAiSuggestion(\"Loading new suggestions...\");\n    setTimeout(() => {\n      const tips = [\"Try using the Pomodoro technique: 25 minutes of focused study followed by a 5-minute break.\", \"For difficult subjects, try teaching the material to an imaginary student.\", \"Create visual mind maps to connect key concepts in your subjects.\", \"Review your notes within 24 hours of taking them to improve retention.\", \"Study in short, frequent sessions rather than long cramming sessions.\"];\n      const randomTip = tips[Math.floor(Math.random() * tips.length)];\n      setAiSuggestion(randomTip);\n    }, 1500);\n  };\n\n  // Generate AI schedule\n  const generateSchedule = () => {\n    setAiSuggestion(\"Generating personalized study schedule...\");\n    setTimeout(() => {\n      const schedule = \"Based on your upcoming tasks and past performance, here's a suggested schedule:\\n\\n\" + \"- Tuesday (Today): Math Assignment (2 hours) in the afternoon\\n\" + \"- Wednesday: Chemistry Notes review (1 hour) in the morning\\n\" + \"- Thursday: Start Research Paper Outline (1.5 hours)\\n\" + \"- Friday: Complete remaining tasks and review progress\";\n      setAiSuggestion(schedule);\n    }, 2000);\n  };\n\n  // Task CRUD operations\n  const addTask = newTask => {\n    const task = {\n      id: Date.now(),\n      ...newTask\n    };\n    setTasks([...tasks, task]);\n  };\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n  const toggleTaskComplete = id => {\n    const task = tasks.find(task => task.id === id);\n    if (task && !task.completed) {\n      // Award points\n      let pointsToAdd = task.priority === \"High\" ? 30 : task.priority === \"Medium\" ? 20 : 10;\n      setPoints(prev => {\n        toast.success(`🎉 +${pointsToAdd} Points! Keep it up!`);\n        return prev + pointsToAdd;\n      });\n\n      // Check for badges\n      const highPriorityTasks = tasks.filter(t => t.priority === \"High\" && t.completed).length;\n      if (highPriorityTasks + 1 >= 5 && !badges.includes(\"Priority Master\")) {\n        setBadges(prev => {\n          toast.success(\"🏆 Badge Earned: Priority Master!\");\n          return [...prev, \"Priority Master\"];\n        });\n      }\n      const totalCompletedTasks = tasks.filter(t => t.completed).length;\n      if (totalCompletedTasks + 1 >= 10 && !badges.includes(\"Task Titan\")) {\n        setBadges(prev => {\n          toast.success(\"🏆 Badge Earned: Task Titan!\");\n          return [...prev, \"Task Titan\"];\n        });\n      }\n      const dueDate = new Date(task.dueDate);\n      const today = new Date();\n      if (dueDate > today && !badges.includes(\"Early Bird\")) {\n        const earlyTasks = tasks.filter(t => new Date(t.dueDate) > today && t.completed).length;\n        if (earlyTasks + 1 >= 3) {\n          setBadges(prev => {\n            toast.success(\"🏆 Badge Earned: Early Bird!\");\n            return [...prev, \"Early Bird\"];\n          });\n        }\n      }\n    }\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  const updateTask = updatedTask => {\n    setTasks(tasks.map(task => task.id === updatedTask.id ? updatedTask : task));\n  };\n\n  // Award streak bonus\n  useEffect(() => {\n    if (studyStats.streak >= 7 && !badges.includes(\"Streak Star\")) {\n      setBadges(prev => {\n        toast.success(\"🏆 Badge Earned: Streak Star!\");\n        return [...prev, \"Streak Star\"];\n      });\n      setPoints(prev => {\n        toast.success(\"🎉 +50 Points for 7-Day Streak!\");\n        return prev + 50;\n      });\n    }\n  }, [studyStats.streak, badges]);\n\n  // Unlock theme\n  const unlockTheme = (theme, cost) => {\n    if (points >= cost && !themes.includes(theme)) {\n      setThemes(prev => [...prev, theme]);\n      setCurrentTheme(theme);\n      setPoints(prev => prev - cost);\n      toast.success(`🎨 Unlocked ${theme}!`);\n    } else if (themes.includes(theme)) {\n      setCurrentTheme(theme);\n      toast.info(`🎨 Switched to ${theme}!`);\n    } else {\n      toast.error(\"Not enough points to unlock this theme!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `min-h-screen ${themeStyles[currentTheme]}`,\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-indigo-600 text-white p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(BookOpen, {\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), \"StudyBuddy AI Planner\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-indigo-700 px-4 py-2 rounded-lg text-sm\",\n          children: new Date().toLocaleDateString(\"en-US\", {\n            weekday: \"long\",\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"bg-white shadow\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab(\"dashboard\"),\n            className: `px-4 py-3 font-medium text-sm ${activeTab === \"dashboard\" ? \"border-b-2 border-indigo-600 text-indigo-600\" : \"text-gray-500\"}`,\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab(\"tasks\"),\n            className: `px-4 py-3 font-medium text-sm ${activeTab === \"tasks\" ? \"border-b-2 border-indigo-600 text-indigo-600\" : \"text-gray-500\"}`,\n            children: \"Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab(\"analytics\"),\n            className: `px-4 py-3 font-medium text-sm ${activeTab === \"analytics\" ? \"border-b-2 border-indigo-600 text-indigo-600\" : \"text-gray-500\"}`,\n            children: \"Analytics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setActiveTab(\"rewards\"),\n            className: `px-4 py-3 font-medium text-sm ${activeTab === \"rewards\" ? \"border-b-2 border-indigo-600 text-indigo-600\" : \"text-gray-500\"}`,\n            children: \"Rewards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container mx-auto p-4\",\n      children: [activeTab === \"dashboard\" && /*#__PURE__*/_jsxDEV(Dashboard, {\n        tasks: tasks,\n        studyStats: studyStats,\n        aiSuggestion: aiSuggestion,\n        getStudyTips: getStudyTips,\n        generateSchedule: generateSchedule,\n        setActiveTab: setActiveTab,\n        toggleTaskComplete: toggleTaskComplete,\n        deleteTask: deleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this), activeTab === \"tasks\" && /*#__PURE__*/_jsxDEV(TaskManager, {\n        tasks: tasks,\n        addTask: addTask,\n        updateTask: updateTask,\n        deleteTask: deleteTask,\n        toggleTaskComplete: toggleTaskComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }, this), activeTab === \"analytics\" && /*#__PURE__*/_jsxDEV(Analytics, {\n        tasks: tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 39\n      }, this), activeTab === \"rewards\" && /*#__PURE__*/_jsxDEV(Rewards, {\n        points: points,\n        badges: badges,\n        studyStats: studyStats,\n        themes: themes,\n        currentTheme: currentTheme,\n        unlockTheme: unlockTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 5\n  }, this);\n}\n_s(Layout, \"UFaaj3rYECtuL9gnlPvjCRs57EE=\");\n_c = Layout;\nexport default Layout;\nvar _c;\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"names":["React","useState","useEffect","BookOpen","Dashboard","TaskManager","Analytics","Rewards","ToastContainer","toast","jsxDEV","_jsxDEV","Layout","_s","activeTab","setActiveTab","tasks","setTasks","studyStats","setStudyStats","totalHours","completedTasks","streak","lastActiveDate","aiSuggestion","setAiSuggestion","points","setPoints","badges","setBadges","themes","setThemes","currentTheme","setCurrentTheme","themeStyles","default","savedTasks","localStorage","getItem","JSON","parse","id","title","dueDate","priority","completed","savedStats","savedPoints","savedBadges","savedThemes","parseInt","themesArray","length","setTimeout","today","Date","toISOString","split","prev","lastDate","currentDate","diffDays","setItem","stringify","completedCount","filter","task","prevStats","newStats","toString","getStudyTips","tips","randomTip","Math","floor","random","generateSchedule","schedule","addTask","newTask","now","deleteTask","toggleTaskComplete","find","pointsToAdd","success","highPriorityTasks","t","includes","totalCompletedTasks","earlyTasks","map","updateTask","updatedTask","unlockTheme","theme","cost","info","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleDateString","weekday","year","month","day","onClick","_c","$RefreshReg$"],"sources":["D:/Final Project/study-buddy-planner/src/components/Layout.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { BookOpen } from \"lucide-react\";\r\nimport Dashboard from \"./Dashboard\";\r\nimport TaskManager from \"./TaskManager\";\r\nimport Analytics from \"./Analytics\";\r\nimport Rewards from \"./Rewards\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction Layout() {\r\n  const [activeTab, setActiveTab] = useState(\"dashboard\");\r\n  const [tasks, setTasks] = useState([]);\r\n  const [studyStats, setStudyStats] = useState({\r\n    totalHours: 0,\r\n    completedTasks: 0,\r\n    streak: 0,\r\n    lastActiveDate: null,\r\n  });\r\n  const [aiSuggestion, setAiSuggestion] = useState(\"\");\r\n  const [points, setPoints] = useState(0);\r\n  const [badges, setBadges] = useState([]);\r\n  const [themes, setThemes] = useState([\"default\"]); // New state for themes\r\n  const [currentTheme, setCurrentTheme] = useState(\"default\"); // Current theme\r\n\r\n  // Theme styles\r\n  const themeStyles = {\r\n    default: \"bg-slate-50 text-gray-800\",\r\n    \"Dark Mode\": \"bg-gray-800 text-white\",\r\n    \"Ocean Breeze\": \"bg-blue-100 text-blue-900\",\r\n  };\r\n\r\n  // Simulate loading initial data\r\n  useEffect(() => {\r\n    // Load tasks\r\n    const savedTasks = localStorage.getItem(\"studyBuddyTasks\");\r\n    if (savedTasks) {\r\n      setTasks(JSON.parse(savedTasks));\r\n    } else {\r\n      setTasks([\r\n        {\r\n          id: 1,\r\n          title: \"Complete Math Assignment\",\r\n          dueDate: \"2025-04-25\",\r\n          priority: \"High\",\r\n          completed: false,\r\n        },\r\n        {\r\n          id: 2,\r\n          title: \"Review Chemistry Notes\",\r\n          dueDate: \"2025-04-23\",\r\n          priority: \"Medium\",\r\n          completed: true,\r\n        },\r\n        {\r\n          id: 3,\r\n          title: \"Research Paper Outline\",\r\n          dueDate: \"2025-04-30\",\r\n          priority: \"High\",\r\n          completed: false,\r\n        },\r\n      ]);\r\n    }\r\n\r\n    // Load stats\r\n    const savedStats = localStorage.getItem(\"studyBuddyStats\");\r\n    if (savedStats) {\r\n      setStudyStats(JSON.parse(savedStats));\r\n    }\r\n\r\n    // Load points, badges, and themes\r\n    const savedPoints = localStorage.getItem(\"studyBuddyPoints\");\r\n    const savedBadges = localStorage.getItem(\"studyBuddyBadges\");\r\n    const savedThemes = localStorage.getItem(\"studyBuddyThemes\");\r\n    if (savedPoints) setPoints(parseInt(savedPoints));\r\n    if (savedBadges) setBadges(JSON.parse(savedBadges));\r\n    if (savedThemes) {\r\n      const themesArray = JSON.parse(savedThemes);\r\n      setThemes(themesArray);\r\n      setCurrentTheme(themesArray[themesArray.length - 1]); // Set to the latest unlocked theme\r\n    }\r\n\r\n    // Simulate AI suggestion\r\n    setTimeout(() => {\r\n      setAiSuggestion(\r\n        \"Based on your schedule and learning patterns, I recommend focusing on your Math Assignment today.\"\r\n      );\r\n    }, 1000);\r\n  }, []);\r\n\r\n  // Dynamic streak update\r\n  useEffect(() => {\r\n    const today = new Date().toISOString().split(\"T\")[0];\r\n    const { lastActiveDate, streak } = studyStats;\r\n\r\n    if (!lastActiveDate) {\r\n      setStudyStats((prev) => ({ ...prev, lastActiveDate: today }));\r\n      return;\r\n    }\r\n\r\n    const lastDate = new Date(lastActiveDate);\r\n    const currentDate = new Date(today);\r\n    const diffDays = (currentDate - lastDate) / (1000 * 60 * 60 * 24);\r\n\r\n    if (diffDays === 1) {\r\n      setStudyStats((prev) => ({\r\n        ...prev,\r\n        streak: prev.streak + 1,\r\n        lastActiveDate: today,\r\n      }));\r\n    } else if (diffDays > 1) {\r\n      setStudyStats((prev) => ({ ...prev, streak: 0, lastActiveDate: today }));\r\n    }\r\n  }, [tasks]); // Trigger when tasks change\r\n\r\n  // Save data to localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"studyBuddyTasks\", JSON.stringify(tasks));\r\n\r\n    const completedCount = tasks.filter((task) => task.completed).length;\r\n    setStudyStats((prevStats) => {\r\n      const newStats = { ...prevStats, completedTasks: completedCount };\r\n      localStorage.setItem(\"studyBuddyStats\", JSON.stringify(newStats));\r\n      return newStats;\r\n    });\r\n\r\n    localStorage.setItem(\"studyBuddyPoints\", points.toString());\r\n    localStorage.setItem(\"studyBuddyBadges\", JSON.stringify(badges));\r\n    localStorage.setItem(\"studyBuddyThemes\", JSON.stringify(themes));\r\n  }, [tasks, points, badges, themes]);\r\n\r\n  // Get AI study tips\r\n  const getStudyTips = () => {\r\n    setAiSuggestion(\"Loading new suggestions...\");\r\n    setTimeout(() => {\r\n      const tips = [\r\n        \"Try using the Pomodoro technique: 25 minutes of focused study followed by a 5-minute break.\",\r\n        \"For difficult subjects, try teaching the material to an imaginary student.\",\r\n        \"Create visual mind maps to connect key concepts in your subjects.\",\r\n        \"Review your notes within 24 hours of taking them to improve retention.\",\r\n        \"Study in short, frequent sessions rather than long cramming sessions.\",\r\n      ];\r\n      const randomTip = tips[Math.floor(Math.random() * tips.length)];\r\n      setAiSuggestion(randomTip);\r\n    }, 1500);\r\n  };\r\n\r\n  // Generate AI schedule\r\n  const generateSchedule = () => {\r\n    setAiSuggestion(\"Generating personalized study schedule...\");\r\n    setTimeout(() => {\r\n      const schedule =\r\n        \"Based on your upcoming tasks and past performance, here's a suggested schedule:\\n\\n\" +\r\n        \"- Tuesday (Today): Math Assignment (2 hours) in the afternoon\\n\" +\r\n        \"- Wednesday: Chemistry Notes review (1 hour) in the morning\\n\" +\r\n        \"- Thursday: Start Research Paper Outline (1.5 hours)\\n\" +\r\n        \"- Friday: Complete remaining tasks and review progress\";\r\n      setAiSuggestion(schedule);\r\n    }, 2000);\r\n  };\r\n\r\n  // Task CRUD operations\r\n  const addTask = (newTask) => {\r\n    const task = { id: Date.now(), ...newTask };\r\n    setTasks([...tasks, task]);\r\n  };\r\n\r\n  const deleteTask = (id) => {\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  const toggleTaskComplete = (id) => {\r\n    const task = tasks.find((task) => task.id === id);\r\n    if (task && !task.completed) {\r\n      // Award points\r\n      let pointsToAdd =\r\n        task.priority === \"High\" ? 30 : task.priority === \"Medium\" ? 20 : 10;\r\n      setPoints((prev) => {\r\n        toast.success(`🎉 +${pointsToAdd} Points! Keep it up!`);\r\n        return prev + pointsToAdd;\r\n      });\r\n\r\n      // Check for badges\r\n      const highPriorityTasks = tasks.filter(\r\n        (t) => t.priority === \"High\" && t.completed\r\n      ).length;\r\n      if (highPriorityTasks + 1 >= 5 && !badges.includes(\"Priority Master\")) {\r\n        setBadges((prev) => {\r\n          toast.success(\"🏆 Badge Earned: Priority Master!\");\r\n          return [...prev, \"Priority Master\"];\r\n        });\r\n      }\r\n\r\n      const totalCompletedTasks = tasks.filter((t) => t.completed).length;\r\n      if (totalCompletedTasks + 1 >= 10 && !badges.includes(\"Task Titan\")) {\r\n        setBadges((prev) => {\r\n          toast.success(\"🏆 Badge Earned: Task Titan!\");\r\n          return [...prev, \"Task Titan\"];\r\n        });\r\n      }\r\n\r\n      const dueDate = new Date(task.dueDate);\r\n      const today = new Date();\r\n      if (dueDate > today && !badges.includes(\"Early Bird\")) {\r\n        const earlyTasks = tasks.filter(\r\n          (t) => new Date(t.dueDate) > today && t.completed\r\n        ).length;\r\n        if (earlyTasks + 1 >= 3) {\r\n          setBadges((prev) => {\r\n            toast.success(\"🏆 Badge Earned: Early Bird!\");\r\n            return [...prev, \"Early Bird\"];\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    setTasks(\r\n      tasks.map((task) =>\r\n        task.id === id ? { ...task, completed: !task.completed } : task\r\n      )\r\n    );\r\n  };\r\n\r\n  const updateTask = (updatedTask) => {\r\n    setTasks(\r\n      tasks.map((task) => (task.id === updatedTask.id ? updatedTask : task))\r\n    );\r\n  };\r\n\r\n  // Award streak bonus\r\n  useEffect(() => {\r\n    if (studyStats.streak >= 7 && !badges.includes(\"Streak Star\")) {\r\n      setBadges((prev) => {\r\n        toast.success(\"🏆 Badge Earned: Streak Star!\");\r\n        return [...prev, \"Streak Star\"];\r\n      });\r\n      setPoints((prev) => {\r\n        toast.success(\"🎉 +50 Points for 7-Day Streak!\");\r\n        return prev + 50;\r\n      });\r\n    }\r\n  }, [studyStats.streak, badges]);\r\n\r\n  // Unlock theme\r\n  const unlockTheme = (theme, cost) => {\r\n    if (points >= cost && !themes.includes(theme)) {\r\n      setThemes((prev) => [...prev, theme]);\r\n      setCurrentTheme(theme);\r\n      setPoints((prev) => prev - cost);\r\n      toast.success(`🎨 Unlocked ${theme}!`);\r\n    } else if (themes.includes(theme)) {\r\n      setCurrentTheme(theme);\r\n      toast.info(`🎨 Switched to ${theme}!`);\r\n    } else {\r\n      toast.error(\"Not enough points to unlock this theme!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`min-h-screen ${themeStyles[currentTheme]}`}>\r\n      <ToastContainer />\r\n      {/* Header */}\r\n      <header className=\"bg-indigo-600 text-white p-4\">\r\n        <div className=\"container mx-auto flex justify-between items-center\">\r\n          <h1 className=\"text-2xl font-bold flex items-center\">\r\n            <BookOpen className=\"mr-2\" />\r\n            StudyBuddy AI Planner\r\n          </h1>\r\n          <div className=\"bg-indigo-700 px-4 py-2 rounded-lg text-sm\">\r\n            {new Date().toLocaleDateString(\"en-US\", {\r\n              weekday: \"long\",\r\n              year: \"numeric\",\r\n              month: \"long\",\r\n              day: \"numeric\",\r\n            })}\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Navigation */}\r\n      <nav className=\"bg-white shadow\">\r\n        <div className=\"container mx-auto\">\r\n          <div className=\"flex\">\r\n            <button\r\n              onClick={() => setActiveTab(\"dashboard\")}\r\n              className={`px-4 py-3 font-medium text-sm ${\r\n                activeTab === \"dashboard\"\r\n                  ? \"border-b-2 border-indigo-600 text-indigo-600\"\r\n                  : \"text-gray-500\"\r\n              }`}\r\n            >\r\n              Dashboard\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab(\"tasks\")}\r\n              className={`px-4 py-3 font-medium text-sm ${\r\n                activeTab === \"tasks\"\r\n                  ? \"border-b-2 border-indigo-600 text-indigo-600\"\r\n                  : \"text-gray-500\"\r\n              }`}\r\n            >\r\n              Tasks\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab(\"analytics\")}\r\n              className={`px-4 py-3 font-medium text-sm ${\r\n                activeTab === \"analytics\"\r\n                  ? \"border-b-2 border-indigo-600 text-indigo-600\"\r\n                  : \"text-gray-500\"\r\n              }`}\r\n            >\r\n              Analytics\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab(\"rewards\")}\r\n              className={`px-4 py-3 font-medium text-sm ${\r\n                activeTab === \"rewards\"\r\n                  ? \"border-b-2 border-indigo-600 text-indigo-600\"\r\n                  : \"text-gray-500\"\r\n              }`}\r\n            >\r\n              Rewards\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n      {/* Main Content */}\r\n      <main className=\"container mx-auto p-4\">\r\n        {activeTab === \"dashboard\" && (\r\n          <Dashboard\r\n            tasks={tasks}\r\n            studyStats={studyStats}\r\n            aiSuggestion={aiSuggestion}\r\n            getStudyTips={getStudyTips}\r\n            generateSchedule={generateSchedule}\r\n            setActiveTab={setActiveTab}\r\n            toggleTaskComplete={toggleTaskComplete}\r\n            deleteTask={deleteTask}\r\n          />\r\n        )}\r\n\r\n        {activeTab === \"tasks\" && (\r\n          <TaskManager\r\n            tasks={tasks}\r\n            addTask={addTask}\r\n            updateTask={updateTask}\r\n            deleteTask={deleteTask}\r\n            toggleTaskComplete={toggleTaskComplete}\r\n          />\r\n        )}\r\n\r\n        {activeTab === \"analytics\" && <Analytics tasks={tasks} />}\r\n\r\n        {activeTab === \"rewards\" && (\r\n          <Rewards\r\n            points={points}\r\n            badges={badges}\r\n            studyStats={studyStats}\r\n            themes={themes}\r\n            currentTheme={currentTheme}\r\n            unlockTheme={unlockTheme}\r\n          />\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}